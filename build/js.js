(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

const React = require('react');
const instruments = require('./instruments');

const LOADED_INSTRUMENT = 1;
const LOADING_INSTRUMENT = 2;

let sf;

function createToneWithOctave(tone, octave) {
  return tone + '' + octave;
}

function messageToTone(tones, data, offset) {
  var num = parseInt(data * 1000, 10);
  return createToneWithOctave(tones[num % tones.length], offset);
}

let readyInstruments = {};

function play(data, state, instrument) {
  let delta = state.delta;
  if (!data) {
    return;
  }
  let tone = messageToTone(state.tones, data, state.offset);
  if (state.melody && state.melody.length) {
    let melodyArray = state.melody.split(',');
    tone = createToneWithOctave(state.tones[melodyArray[delta % melodyArray.length]], state.offset);
  }
  delta++;
  setTimeout(() => {
    if (state.playing) {
      let source = instrument.play(tone, 0);
      source.loop = true;
      setTimeout(function () {
        source.stop();
      }, state.stop * 1000);
    }
  }, state.delay * 1000);
}

const Instrument = React.createClass({
  getInitialState: function () {
    let opts = Object.assign({
      currentInstrument: this.props.instrument,
      offset: this.props.offset ? this.props.offset : '1',
      stop: 2,
      delay: this.props.delay ? this.props.delay : 0,
      playing: this.props.playing ? this.props.playing : true,
      melody: this.props.melody ? this.props.melody : ''
    }, this.props.data);
    return opts;
  },
  delta: -1,
  render: function () {
    let data = this.props.message.data;
    let name = this.state.currentInstrument;
    // Pretend to hold tones in state.
    this.state.tones = this.props.tones;
    this.state.playing = this.props.playing;
    this.state.delta = this.delta;
    this.delta++;
    if (name) {
      let instrument = sf.instrument(name);
      if (readyInstruments[name] === LOADED_INSTRUMENT) {
        play(data, this.state, instrument);
      } else {
        if (readyInstruments[name] !== LOADING_INSTRUMENT) {
          readyInstruments[name] = LOADING_INSTRUMENT;
          instrument.onready(() => {
            play(data, this.state, instrument);
            readyInstruments[name] = LOADED_INSTRUMENT;
          });
        }
      }
    }

    let instrumentsOptions = instruments.map(name => {
      return React.createElement(
        'option',
        { key: name, value: name },
        name
      );
    });
    return React.createElement(
      'div',
      null,
      React.createElement(
        'h2',
        null,
        this.props.data.name
      ),
      React.createElement(
        'span',
        null,
        'Playing: ',
        this.state.playing ? 'yes' : 'no',
        ' '
      ),
      React.createElement(
        'select',
        { onChange: this._onInstrumentChange, defaultValue: this.state.currentInstrument },
        instrumentsOptions
      ),
      React.createElement('input', { type: 'text', onChange: this._changedMelody, value: this.state.melody }),
      React.createElement('input', { type: 'number', onChange: this._changedOffset, value: this.state.offset }),
      React.createElement('input', { type: 'number', onChange: this._changedDelay, value: this.state.delay }),
      React.createElement('input', { type: 'number', onChange: this._changedStop, value: this.state.stop }),
      React.createElement(
        'button',
        { onClick: this.props.onRemove },
        '-'
      )
    );
  },
  _changedMelody: function (e) {
    this.setState({
      melody: e.target.value
    });
    this._passState();
  },
  _changedStop: function (e) {
    this.setState({
      stop: parseInt(e.target.value, 10) ? parseInt(e.target.value, 10) : 0
    });
    this._passState();
  },
  _changedDelay: function (e) {
    this.setState({
      delay: parseInt(e.target.value, 10) ? parseInt(e.target.value, 10) : 0
    });
    this._passState();
  },
  _changedOffset: function (e) {
    this.setState({
      offset: '' + e.target.value
    });
    this._passState();
  },
  _onInstrumentChange: function (e) {
    this.setState({
      currentInstrument: e.target.value
    });
    this._passState();
  },
  _passState: function () {
    // Hack to make sure state is updated before we pass it up the stack.
    setTimeout(() => {
      this.props.onEdit(this.state);
    }, 200);
  }
});

module.exports = function (soundfont) {
  sf = soundfont;
  return Instrument;
};

},{"./instruments":2,"react":168}],2:[function(require,module,exports){
module.exports = 'accordion acoustic_bass acoustic_grand_piano acoustic_guitar_nylon acoustic_guitar_steel agogo alto_sax applause bagpipe banjo baritone_sax bassoon bird_tweet blown_bottle brass_section breath_noise bright_acoustic_piano celesta cello choir_aahs church_organ clarinet clavinet contrabass distortion_guitar drawbar_organ dulcimer electric_bass_finger electric_bass_pick electric_grand_piano electric_guitar_clean electric_guitar_jazz electric_guitar_muted electric_piano_1 electric_piano_2 english_horn fiddle flute french_horn fretless_bass fx_1_rain fx_2_soundtrack fx_3_crystal fx_4_atmosphere fx_5_brightness fx_6_goblins fx_7_echoes fx_8_scifi glockenspiel guitar_fret_noise guitar_harmonics gunshot harmonica harpsichord helicopter honkytonk_piano kalimba koto lead_1_square lead_2_sawtooth lead_3_calliope lead_4_chiff lead_5_charang lead_6_voice lead_7_fifths lead_8_bass__lead marimba melodic_tom music_box muted_trumpet oboe ocarina orchestra_hit orchestral_harp overdriven_guitar pad_1_new_age pad_2_warm pad_3_polysynth pad_4_choir pad_5_bowed pad_6_metallic pad_7_halo pad_8_sweep pan_flute percussive_organ piccolo pizzicato_strings recorder reed_organ reverse_cymbal rock_organ seashore shakuhachi shamisen shanai sitar slap_bass_1 slap_bass_2 soprano_sax steel_drums string_ensemble_1 string_ensemble_2 synth_bass_1 synth_bass_2 synth_brass_1 synth_brass_2 synth_choir synth_drum synth_strings_1 synth_strings_2 taiko_drum tango_accordion telephone_ring tenor_sax timpani tinkle_bell tremolo_strings trombone trumpet tuba tubular_bells vibraphone viola violin voice_oohs whistle woodblock xylophone'.split(' ');

},{}],3:[function(require,module,exports){
/* global WebSocket, document, location, AudioContext */
'use strict';

const React = require('react');
const ReactROM = require('react-dom');
const Soundfont = require('soundfont-player');

const ctx = new AudioContext();
const soundfont = new Soundfont(ctx);
const Instrument = require('./instrument')(soundfont);
const tunes = require('../tunes');
let message = {};
let ws = new WebSocket('ws://' + location.hostname + ':3001');

const tonesMap = {
  am: ['A', 'B', 'C', 'D', 'E', 'F', 'G'],
  em: ['E', 'F#', 'G', 'A', 'B', 'C', 'D'],
  dm: ['D', 'E', 'F', 'G', 'A', 'A#', 'C']
};

let currentDelta = 0;

const App = React.createClass({
  getInitialState: function () {
    // Hm. Seems hacky.
    ws.onmessage = message => {
      this.setState({
        message
      });
    };
    // See if the URL contains some state info.
    let defaultOps = {
      message,
      tones: tonesMap.am,
      melody: '',
      tonesKey: 0,
      tune: 0,
      instruments: [{ name: 'Bass' }],
      playing: true,
      delta: 0
    };
    if (window.location.hash) {
      try {
        var data = JSON.parse(atob(window.location.hash.substr(1)));
        Object.assign(defaultOps, data);
      } catch (err) {
        // Oh well, at least we tried.
        console.log(err);
      }
    }
    return defaultOps;
  },
  render: function () {
    window.location.hash = btoa(JSON.stringify({
      instruments: this.state.instruments,
      tune: this.state.tune,
      tonesKey: this.state.tonesKey,
      melody: this.state.melody
    }));
    if (tunes[this.state.tune].data) {
      // Play the next tone, after the given amount of time.
      let linesToEmit = tunes[this.state.tune].data;
      let emit = (line, delta) => {
        if (delta != this.state.delta) {
          return;
        }
        this.setState({
          message: {
            data: line[1]
          }
        });
      };
      let line = linesToEmit[currentDelta];
      currentDelta++;
      setTimeout(emit.bind(this, line, this.state.delta), linesToEmit[currentDelta][0] - line[0]);
    }
    let tunesOptions = tunes.map((n, i) => {
      return React.createElement(
        'option',
        { value: i, key: i },
        n.name
      );
    });
    let instruments = this.state.instruments.map((n, i) => {
      return React.createElement(Instrument, { key: i, playing: this.state.playing, onEdit: this._onInstrumentEdit.bind(this, i), onRemove: this._onRemove.bind(this, i), data: n, message: this.state.message, tones: this.state.tones, instrument: 'church_organ' });
    });
    return React.createElement(
      'div',
      null,
      React.createElement(
        'select',
        { onChange: this._changedTones, defaultValue: this.state.tonesKey },
        React.createElement(
          'option',
          { value: 'am' },
          'A minor'
        ),
        React.createElement(
          'option',
          { value: 'em' },
          'E minor'
        ),
        React.createElement(
          'option',
          { value: 'dm' },
          'D minor'
        )
      ),
      React.createElement(
        'select',
        { onChange: this._changedTune, defaultValue: this.state.tune },
        tunesOptions
      ),
      instruments,
      React.createElement(
        'button',
        { onClick: this._addInstrument },
        '+'
      ),
      React.createElement(
        'button',
        { onClick: this._onStopToggle },
        'stop'
      )
    );
  },
  _melodyChanged: function (e) {
    this.setState({
      melody: e.target.value,
      delta: this.state.delta + 1
    });
  },
  _onStopToggle: function () {
    this.setState({
      playing: !this.state.playing,
      instruments: this.state.instruments,
      delta: this.state.delta + 1
    });
  },
  _onInstrumentEdit: function (delta, data) {
    Object.assign(this.state.instruments[delta], data);
    this.setState({
      intruments: this.state.instruments,
      delta: this.state.delta + 1
    });
  },
  _onRemove: function (delta) {
    this.setState({
      instruments: this.state.instruments.filter((n, i) => {
        return i !== delta;
      }),
      delta: this.state.delta + 1
    });
  },
  _addInstrument: function () {
    this.setState({
      instruments: this.state.instruments.concat([{ name: window.prompt('Enter instrument name') }]),
      delta: this.state.delta + 1
    });
  },
  _changedTune: function (e) {
    this.setState({
      tune: e.target.value,
      delta: this.state.delta + 1
    });
  },
  _changedTones: function (e) {
    this.setState({
      tones: tonesMap[e.target.value],
      tonesKey: e.target.value,
      delta: this.state.delta + 1
    });
  }
});

ReactROM.render(React.createElement(App, null), document.getElementById('app'));

ws.onopen = function () {
  console.log('Websocket open');
};

},{"../tunes":181,"./instrument":1,"react":168,"react-dom":5,"soundfont-player":172}],4:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],5:[function(require,module,exports){
'use strict';

module.exports = require('react/lib/ReactDOM');

},{"react/lib/ReactDOM":39}],6:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusUtils
 */

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var focusNode = require('fbjs/lib/focusNode');

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;
},{"./ReactDOMComponentTree":43,"fbjs/lib/focusNode":150}],7:[function(require,module,exports){
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var FallbackCompositionState = require('./FallbackCompositionState');
var SyntheticCompositionEvent = require('./SyntheticCompositionEvent');
var SyntheticInputEvent = require('./SyntheticInputEvent');

var keyOf = require('fbjs/lib/keyOf');

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBeforeInput: null }),
      captured: keyOf({ onBeforeInputCapture: null })
    },
    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionEnd: null }),
      captured: keyOf({ onCompositionEndCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionStart: null }),
      captured: keyOf({ onCompositionStartCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionUpdate: null }),
      captured: keyOf({ onCompositionUpdateCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionEnd:
      return getDataFromCustomEvent(nativeEvent);
    case topLevelTypes.topKeyPress:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case topLevelTypes.topTextInput:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  if (currentComposition) {
    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case topLevelTypes.topPaste:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case topLevelTypes.topKeyPress:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case topLevelTypes.topCompositionEnd:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;
},{"./EventConstants":20,"./EventPropagators":24,"./FallbackCompositionState":25,"./SyntheticCompositionEvent":99,"./SyntheticInputEvent":103,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/keyOf":160}],8:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;
},{}],9:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactPerf = require('./ReactPerf');

var camelizeStyleName = require('fbjs/lib/camelizeStyleName');
var dangerousStyleValue = require('./dangerousStyleValue');
var hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');
var memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');
var warning = require('fbjs/lib/warning');

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
  setValueForStyles: 'setValueForStyles'
});

module.exports = CSSPropertyOperations;
}).call(this,require('_process'))
},{"./CSSProperty":8,"./ReactPerf":84,"./dangerousStyleValue":116,"_process":4,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/camelizeStyleName":144,"fbjs/lib/hyphenateStyleName":155,"fbjs/lib/memoizeStringOnly":162,"fbjs/lib/warning":166}],10:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var invariant = require('fbjs/lib/invariant');

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

_assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function (callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function () {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  checkpoint: function () {
    return this._callbacks ? this._callbacks.length : 0;
  },

  rollback: function (len) {
    if (this._callbacks) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function () {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function () {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;
}).call(this,require('_process'))
},{"./PooledClass":28,"_process":4,"fbjs/lib/invariant":156,"object-assign":167}],11:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');
var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');
var isEventSupported = require('./isEventSupported');
var isTextInputElement = require('./isTextInputElement');
var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onChange: null }),
      captured: keyOf({ onChangeCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topChange) {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topClick) {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;
},{"./EventConstants":20,"./EventPluginHub":21,"./EventPropagators":24,"./ReactDOMComponentTree":43,"./ReactUpdates":92,"./SyntheticEvent":101,"./getEventTarget":124,"./isEventSupported":131,"./isTextInputElement":132,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/keyOf":160}],12:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var Danger = require('./Danger');
var ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');
var ReactPerf = require('./ReactPerf');

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setInnerHTML = require('./setInnerHTML');
var setTextContent = require('./setTextContent');

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getNativeNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          break;
        case ReactMultiChildUpdateTypes.SET_MARKUP:
          setInnerHTML(parentNode, update.content);
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          setTextContent(parentNode, update.content);
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          removeChild(parentNode, update.fromNode);
          break;
      }
    }
  }

};

ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
  replaceDelimitedText: 'replaceDelimitedText'
});

module.exports = DOMChildrenOperations;
},{"./DOMLazyTree":13,"./Danger":17,"./ReactMultiChildUpdateTypes":79,"./ReactPerf":84,"./createMicrosoftUnsafeLocalFunction":115,"./setInnerHTML":136,"./setTextContent":137}],13:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMLazyTree
 */

'use strict';

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');
var setTextContent = require('./setTextContent');

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    node.innerHTML = tree.html;
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level.
  if (tree.node.nodeType === 11) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    tree.node.innerHTML = html;
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;
},{"./createMicrosoftUnsafeLocalFunction":115,"./setTextContent":137}],14:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMNamespaces
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;
},{}],15:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_SIDE_EFFECTS: 0x2,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };

      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : void 0;
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasSideEffects:
   *   Whether or not setting a value causes side effects such as triggering
   *   resources to be loaded or text selection changes. If true, we read from
   *   the DOM before updating to ensure that the value is only set if it has
   *   changed.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],16:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMInstrumentation = require('./ReactDOMInstrumentation');
var ReactPerf = require('./ReactPerf');

var quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');
var warning = require('fbjs/lib/warning');

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    if (process.env.NODE_ENV !== 'production') {
      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    if (process.env.NODE_ENV !== 'production') {
      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
        // property type before comparing; only `value` does and is string.
        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propName] = value;
        }
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    if (process.env.NODE_ENV !== 'production') {
      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          // No HAS_SIDE_EFFECTS logic here, only `value` has it and is string.
          node[propName] = false;
        } else {
          if (!propertyInfo.hasSideEffects || '' + node[propName] !== '') {
            node[propName] = '';
          }
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }
  }

};

ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
  setValueForProperty: 'setValueForProperty',
  setValueForAttribute: 'setValueForAttribute',
  deleteValueForProperty: 'deleteValueForProperty'
});

module.exports = DOMPropertyOperations;
}).call(this,require('_process'))
},{"./DOMProperty":15,"./ReactDOMInstrumentation":51,"./ReactPerf":84,"./quoteAttributeValueForBrowser":134,"_process":4,"fbjs/lib/warning":166}],17:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');
var emptyFunction = require('fbjs/lib/emptyFunction');
var getMarkupWrap = require('fbjs/lib/getMarkupWrap');
var invariant = require('fbjs/lib/invariant');

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function (markupList) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : void 0;
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : void 0;
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      var resultIndex;
      for (resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
          // This index will be parsed back out below.
          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
      );

      for (var j = 0; j < renderNodes.length; ++j) {
        var renderNode = renderNodes[j];
        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : void 0;

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;
        } else if (process.env.NODE_ENV !== 'production') {
          console.error('Danger: Discarding unexpected node:', renderNode);
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : void 0;

    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : void 0;

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
}).call(this,require('_process'))
},{"./DOMLazyTree":13,"_process":4,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/createNodesFromMarkup":147,"fbjs/lib/emptyFunction":148,"fbjs/lib/getMarkupWrap":152,"fbjs/lib/invariant":156}],18:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

'use strict';

var keyOf = require('fbjs/lib/keyOf');

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

module.exports = DefaultEventPluginOrder;
},{"fbjs/lib/keyOf":160}],19:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');

var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({ onMouseEnter: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  },
  mouseLeave: {
    registrationName: keyOf({ onMouseLeave: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;
},{"./EventConstants":20,"./EventPropagators":24,"./ReactDOMComponentTree":43,"./SyntheticMouseEvent":105,"fbjs/lib/keyOf":160}],20:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

var PropagationPhases = keyMirror({ bubbled: null, captured: null });

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topAbort: null,
  topAnimationEnd: null,
  topAnimationIteration: null,
  topAnimationStart: null,
  topBlur: null,
  topCanPlay: null,
  topCanPlayThrough: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topDurationChange: null,
  topEmptied: null,
  topEncrypted: null,
  topEnded: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topInvalid: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topLoadedData: null,
  topLoadedMetadata: null,
  topLoadStart: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topPause: null,
  topPlay: null,
  topPlaying: null,
  topProgress: null,
  topRateChange: null,
  topReset: null,
  topScroll: null,
  topSeeked: null,
  topSeeking: null,
  topSelectionChange: null,
  topStalled: null,
  topSubmit: null,
  topSuspend: null,
  topTextInput: null,
  topTimeUpdate: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topTransitionEnd: null,
  topVolumeChange: null,
  topWaiting: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;
},{"fbjs/lib/keyMirror":159}],21:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

'use strict';

var EventPluginRegistry = require('./EventPluginRegistry');
var EventPluginUtils = require('./EventPluginUtils');
var ReactErrorUtils = require('./ReactErrorUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var invariant = require('fbjs/lib/invariant');

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : void 0;

    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[inst._rootNodeID] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      delete bankForRegistrationName[inst._rootNodeID];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    for (var registrationName in listenerBank) {
      if (!listenerBank[registrationName][inst._rootNodeID]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][inst._rootNodeID];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
}).call(this,require('_process'))
},{"./EventPluginRegistry":22,"./EventPluginUtils":23,"./ReactErrorUtils":67,"./accumulateInto":112,"./forEachAccumulated":120,"_process":4,"fbjs/lib/invariant":156}],22:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (InjectedEventPluginOrder) {
    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : void 0;
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],23:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

'use strict';

var EventConstants = require('./EventConstants');
var ReactErrorUtils = require('./ReactErrorUtils');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : void 0;
  event.currentTarget = EventPluginUtils.getNodeFromInstance(dispatchInstance);
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
}).call(this,require('_process'))
},{"./EventConstants":20,"./ReactErrorUtils":67,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],24:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');

var accumulateInto = require('./accumulateInto');
var forEachAccumulated = require('./forEachAccumulated');
var warning = require('fbjs/lib/warning');

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, upwards, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
}).call(this,require('_process'))
},{"./EventConstants":20,"./EventPluginHub":21,"./EventPluginUtils":23,"./accumulateInto":112,"./forEachAccumulated":120,"_process":4,"fbjs/lib/warning":166}],25:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule FallbackCompositionState
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;
},{"./PooledClass":28,"./getTextContentAccessor":128,"object-assign":167}],26:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

'use strict';

var DOMProperty = require('./DOMProperty');

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;
},{"./DOMProperty":15}],27:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 */

'use strict';

var ReactPropTypes = require('./ReactPropTypes');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: ReactPropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
}).call(this,require('_process'))
},{"./ReactPropTypeLocations":86,"./ReactPropTypes":87,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],28:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],29:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactComponent = require('./ReactComponent');
var ReactClass = require('./ReactClass');
var ReactDOMFactories = require('./ReactDOMFactories');
var ReactElement = require('./ReactElement');
var ReactElementValidator = require('./ReactElementValidator');
var ReactPropTypes = require('./ReactPropTypes');
var ReactVersion = require('./ReactVersion');

var onlyChild = require('./onlyChild');
var warning = require('fbjs/lib/warning');

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;
}).call(this,require('_process'))
},{"./ReactChildren":32,"./ReactClass":33,"./ReactComponent":34,"./ReactDOMFactories":47,"./ReactElement":64,"./ReactElementValidator":65,"./ReactPropTypes":87,"./ReactVersion":93,"./onlyChild":133,"_process":4,"fbjs/lib/warning":166,"object-assign":167}],30:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 */

'use strict';

var _assign = require('object-assign');

var EventConstants = require('./EventConstants');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactEventEmitterMixin = require('./ReactEventEmitterMixin');
var ViewportMetrics = require('./ViewportMetrics');

var getVendorPrefixedEventName = require('./getVendorPrefixedEventName');
var isEventSupported = require('./isEventSupported');

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;
},{"./EventConstants":20,"./EventPluginRegistry":22,"./ReactEventEmitterMixin":68,"./ViewportMetrics":111,"./getVendorPrefixedEventName":129,"./isEventSupported":131,"object-assign":167}],31:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildReconciler
 */

'use strict';

var ReactReconciler = require('./ReactReconciler');

var instantiateReactComponent = require('./instantiateReactComponent');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

function instantiateChild(childInstances, child, name) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : void 0;
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};
    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement);
        nextChildren[name] = nextChildInstance;
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getNativeNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
}).call(this,require('_process'))
},{"./ReactReconciler":89,"./instantiateReactComponent":130,"./shouldUpdateReactComponent":138,"./traverseAllChildren":139,"_process":4,"fbjs/lib/warning":166}],32:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

'use strict';

var PooledClass = require('./PooledClass');
var ReactElement = require('./ReactElement');

var emptyFunction = require('fbjs/lib/emptyFunction');
var traverseAllChildren = require('./traverseAllChildren');

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func;
  var context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result;
  var keyPrefix = bookKeeping.keyPrefix;
  var func = bookKeeping.func;
  var context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;
},{"./PooledClass":28,"./ReactElement":64,"./traverseAllChildren":139,"fbjs/lib/emptyFunction":148}],33:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactClass
 */

'use strict';

var _assign = require('object-assign');

var ReactComponent = require('./ReactComponent');
var ReactElement = require('./ReactElement');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var keyMirror = require('fbjs/lib/keyMirror');
var keyOf = require('fbjs/lib/keyOf');
var warning = require('fbjs/lib/warning');

var MIXINS_KEY = keyOf({ mixins: null });

/**
 * Policies that describe methods in `ReactClassInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});

var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

// noop
function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.') : invariant(false) : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    var Constructor = function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : void 0;

      this.state = initialState;
    };
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
}).call(this,require('_process'))
},{"./ReactComponent":34,"./ReactElement":64,"./ReactNoopUpdateQueue":82,"./ReactPropTypeLocationNames":85,"./ReactPropTypeLocations":86,"_process":4,"fbjs/lib/emptyObject":149,"fbjs/lib/invariant":156,"fbjs/lib/keyMirror":159,"fbjs/lib/keyOf":160,"fbjs/lib/warning":166,"object-assign":167}],34:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

'use strict';

var ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');
var ReactInstrumentation = require('./ReactInstrumentation');

var canDefineProperty = require('./canDefineProperty');
var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : void 0;
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onSetState();
    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
  }
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
}).call(this,require('_process'))
},{"./ReactInstrumentation":74,"./ReactNoopUpdateQueue":82,"./canDefineProperty":114,"_process":4,"fbjs/lib/emptyObject":149,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],35:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMIDOperations = require('./ReactDOMIDOperations');
var ReactPerf = require('./ReactPerf');

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function (rootNodeID) {}

};

ReactPerf.measureMethods(ReactComponentBrowserEnvironment, 'ReactComponentBrowserEnvironment', {
  replaceNodeWithMarkup: 'replaceNodeWithMarkup'
});

module.exports = ReactComponentBrowserEnvironment;
},{"./DOMChildrenOperations":12,"./ReactDOMIDOperations":49,"./ReactPerf":84}],36:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentEnvironment
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   */
  unmountIDFromEnvironment: null,

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : void 0;
      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],37:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

'use strict';

var _assign = require('object-assign');

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactElement = require('./ReactElement');
var ReactErrorUtils = require('./ReactErrorUtils');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactNodeTypes = require('./ReactNodeTypes');
var ReactPerf = require('./ReactPerf');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');

var emptyObject = require('fbjs/lib/emptyObject');
var invariant = require('fbjs/lib/invariant');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum(component) {
  var owner = component._currentElement._owner || null;
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = null;
    this._instance = null;
    this._nativeParent = null;
    this._nativeContainerInfo = null;

    // See ReactUpdateQueue
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} nativeParent
   * @param {?object} nativeContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    this._context = context;
    this._mountOrder = nextMountID++;
    this._nativeParent = nativeParent;
    this._nativeContainerInfo = nativeContainerInfo;

    var publicProps = this._processProps(this._currentElement.props);
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    // Initialize the public class
    var inst;
    var renderedElement;

    if (Component.prototype && Component.prototype.isReactComponent) {
      if (process.env.NODE_ENV !== 'production') {
        ReactCurrentOwner.current = this;
        try {
          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
        } finally {
          ReactCurrentOwner.current = null;
        }
      } else {
        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
      }
    } else {
      if (process.env.NODE_ENV !== 'production') {
        ReactCurrentOwner.current = this;
        try {
          inst = Component(publicProps, publicContext, ReactUpdateQueue);
        } finally {
          ReactCurrentOwner.current = null;
        }
      } else {
        inst = Component(publicProps, publicContext, ReactUpdateQueue);
      }
      if (inst == null || inst.render == null) {
        renderedElement = inst;
        warnIfInvalidElement(Component, renderedElement);
        !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : invariant(false) : void 0;
        inst = new StatelessComponent(Component);
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = ReactUpdateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
    }

    return markup;
  },

  performInitialMountWithErrorHandling: function (renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, nativeParent, nativeContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, nativeParent, nativeContainerInfo, transaction, context) {
    var inst = this._instance;
    if (inst.componentWillMount) {
      inst.componentWillMount();
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    this._renderedNodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedComponent = this._instantiateReactComponent(renderedElement);

    var markup = ReactReconciler.mountComponent(this._renderedComponent, transaction, nativeParent, nativeContainerInfo, this._processChildContext(context));

    return markup;
  },

  getNativeNode: function () {
    return ReactReconciler.getNativeNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }
    var inst = this._instance;

    if (inst.componentWillUnmount) {
      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        inst.componentWillUnmount();
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = null;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
    }
    var childContext = inst.getChildContext && inst.getChildContext();
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onEndProcessingChildContext();
    }
    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function (newProps) {
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.propTypes) {
        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
      }
    }
    return newProps;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function (propTypes, props, location) {
    // TODO: Stop validating prop types here and only use the element
    // validation.
    var componentName = this.getName();
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error;
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
          error = propTypes[propName](props, propName, componentName, location);
        } catch (ex) {
          error = ex;
        }
        if (error instanceof Error) {
          // We may want to extend this logic for similar errors in
          // top-level render calls, so I'm abstracting it away into
          // a function to minimize refactoring in the future
          var addendum = getDeclarationErrorAddendum(this);

          if (location === ReactPropTypeLocations.prop) {
            // Preface gives us something to blacklist in warning module
            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : void 0;
          } else {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : void 0;
          }
        }
      }
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    }

    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    var willReceive = false;
    var nextContext;
    var nextProps;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    // Distinguish between a props update versus a simple state update
    if (prevParentElement === nextParentElement) {
      // Skip checking prop types again -- we don't read inst.props to avoid
      // warning for DOM component props in this upgrade
      nextProps = nextParentElement.props;
    } else {
      nextProps = this._processProps(nextParentElement.props);
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      inst.componentWillReceiveProps(nextProps, nextContext);
    }

    var nextState = this._processPendingState(nextProps, nextContext);

    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      inst.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();
    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldNativeNode = ReactReconciler.getNativeNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      this._renderedNodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, transaction, this._nativeParent, this._nativeContainerInfo, this._processChildContext(context));
      this._replaceNodeWithMarkup(oldNativeNode, nextMarkup);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldNativeNode, nextMarkup) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldNativeNode, nextMarkup);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedComponent = inst.render();
    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedComponent === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedComponent = null;
      }
    }

    return renderedComponent;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedComponent;
    ReactCurrentOwner.current = this;
    try {
      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
    } finally {
      ReactCurrentOwner.current = null;
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : void 0;
    return renderedComponent;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (inst instanceof StatelessComponent) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
  mountComponent: 'mountComponent',
  updateComponent: 'updateComponent',
  _renderValidatedComponent: '_renderValidatedComponent'
});

var ReactCompositeComponent = {

  Mixin: ReactCompositeComponentMixin

};

module.exports = ReactCompositeComponent;
}).call(this,require('_process'))
},{"./ReactComponentEnvironment":36,"./ReactCurrentOwner":38,"./ReactElement":64,"./ReactErrorUtils":67,"./ReactInstanceMap":73,"./ReactInstrumentation":74,"./ReactNodeTypes":81,"./ReactPerf":84,"./ReactPropTypeLocationNames":85,"./ReactPropTypeLocations":86,"./ReactReconciler":89,"./ReactUpdateQueue":91,"./shouldUpdateReactComponent":138,"_process":4,"fbjs/lib/emptyObject":149,"fbjs/lib/invariant":156,"fbjs/lib/warning":166,"object-assign":167}],38:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */

var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;
},{}],39:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultInjection = require('./ReactDefaultInjection');
var ReactMount = require('./ReactMount');
var ReactPerf = require('./ReactPerf');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdates = require('./ReactUpdates');
var ReactVersion = require('./ReactVersion');

var findDOMNode = require('./findDOMNode');
var getNativeComponentFromComposite = require('./getNativeComponentFromComposite');
var renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');
var warning = require('fbjs/lib/warning');

ReactDefaultInjection.inject();

var render = ReactPerf.measure('React', 'render', ReactMount.render);

var React = {
  findDOMNode: findDOMNode,
  render: render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
/* eslint-enable camelcase */
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getNativeComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

module.exports = React;
}).call(this,require('_process'))
},{"./ReactDOMComponentTree":43,"./ReactDefaultInjection":61,"./ReactMount":77,"./ReactPerf":84,"./ReactReconciler":89,"./ReactUpdates":92,"./ReactVersion":93,"./findDOMNode":118,"./getNativeComponentFromComposite":126,"./renderSubtreeIntoContainer":135,"_process":4,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/warning":166}],40:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

'use strict';

var mouseListenerNames = {
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,

  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
};

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = {
  getNativeProps: function (inst, props) {
    if (!props.disabled) {
      return props;
    }

    // Copy the props, except the mouse listeners
    var nativeProps = {};
    for (var key in props) {
      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
        nativeProps[key] = props[key];
      }
    }

    return nativeProps;
  }
};

module.exports = ReactDOMButton;
},{}],41:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 */

/* global hasOwnProperty:true */

'use strict';

var _assign = require('object-assign');

var AutoFocusUtils = require('./AutoFocusUtils');
var CSSPropertyOperations = require('./CSSPropertyOperations');
var DOMLazyTree = require('./DOMLazyTree');
var DOMNamespaces = require('./DOMNamespaces');
var DOMProperty = require('./DOMProperty');
var DOMPropertyOperations = require('./DOMPropertyOperations');
var EventConstants = require('./EventConstants');
var EventPluginHub = require('./EventPluginHub');
var EventPluginRegistry = require('./EventPluginRegistry');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMButton = require('./ReactDOMButton');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMInput = require('./ReactDOMInput');
var ReactDOMOption = require('./ReactDOMOption');
var ReactDOMSelect = require('./ReactDOMSelect');
var ReactDOMTextarea = require('./ReactDOMTextarea');
var ReactMultiChild = require('./ReactMultiChild');
var ReactPerf = require('./ReactPerf');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var isEventSupported = require('./isEventSupported');
var keyOf = require('fbjs/lib/keyOf');
var shallowEqual = require('fbjs/lib/shallowEqual');
var validateDOMNesting = require('./validateDOMNesting');
var warning = require('fbjs/lib/warning');

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = keyOf({ style: null });
var HTML = keyOf({ __html: null });
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : invariant(false) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._nativeContainerInfo;
  var doc = containerInfo._ownerDocument;
  if (!doc) {
    // Server rendering.
    return;
  }
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
        }
      }

      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

// NOTE: menuitem's close tag should be omitted, but that causes problems.
var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._nativeNode = null;
  this._nativeParent = null;
  this._rootNodeID = null;
  this._domID = null;
  this._nativeContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the containing DOM component instance
   * @param {?object} info about the native container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = nativeContainerInfo._idCounter++;
    this._nativeParent = nativeParent;
    this._nativeContainerInfo = nativeContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'iframe':
      case 'object':
      case 'img':
      case 'form':
      case 'video':
      case 'audio':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'button':
        props = ReactDOMButton.getNativeProps(this, props, nativeParent);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, nativeParent);
        props = ReactDOMInput.getNativeProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, nativeParent);
        props = ReactDOMOption.getNativeProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, nativeParent);
        props = ReactDOMSelect.getNativeProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, nativeParent);
        props = ReactDOMTextarea.getNativeProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (nativeParent != null) {
      namespaceURI = nativeParent._namespaceURI;
      parentTag = nativeParent._tag;
    } else if (nativeContainerInfo._tag) {
      namespaceURI = nativeContainerInfo._namespaceURI;
      parentTag = nativeContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (nativeParent != null) {
        parentInfo = nativeParent._ancestorInfo;
      } else if (nativeContainerInfo._tag) {
        parentInfo = nativeContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = nativeContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else {
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._nativeParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'button':
      case 'input':
      case 'select':
      case 'textarea':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._nativeParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        DOMLazyTree.queueText(lazyTree, contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'button':
        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
        break;
      case 'input':
        ReactDOMInput.updateWrapper(this);
        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    if (this._tag === 'select') {
      // <select> value update needs to occur after <option> children
      // reconciliation
      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getNativeNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'iframe':
      case 'object':
      case 'img':
      case 'form':
      case 'video':
      case 'audio':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    this._rootNodeID = null;
    this._domID = null;
    this._wrapperState = null;
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

ReactPerf.measureMethods(ReactDOMComponent.Mixin, 'ReactDOMComponent', {
  mountComponent: 'mountComponent',
  receiveComponent: 'receiveComponent'
});

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
}).call(this,require('_process'))
},{"./AutoFocusUtils":6,"./CSSPropertyOperations":9,"./DOMLazyTree":13,"./DOMNamespaces":14,"./DOMProperty":15,"./DOMPropertyOperations":16,"./EventConstants":20,"./EventPluginHub":21,"./EventPluginRegistry":22,"./ReactBrowserEventEmitter":30,"./ReactComponentBrowserEnvironment":35,"./ReactDOMButton":40,"./ReactDOMComponentFlags":42,"./ReactDOMComponentTree":43,"./ReactDOMInput":50,"./ReactDOMOption":52,"./ReactDOMSelect":53,"./ReactDOMTextarea":56,"./ReactMultiChild":78,"./ReactPerf":84,"./escapeTextContentForBrowser":117,"./isEventSupported":131,"./validateDOMNesting":140,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/keyOf":160,"fbjs/lib/shallowEqual":165,"fbjs/lib/warning":166,"object-assign":167}],42:[function(require,module,exports){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentFlags
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;
},{}],43:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentTree
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentFlags = require('./ReactDOMComponentFlags');

var invariant = require('fbjs/lib/invariant');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Drill down (through composites and empty components) until we get a native or
 * native text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedNativeOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_nativeNode` on the rendered native/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var nativeInst = getRenderedNativeOrTextFromComponent(inst);
  nativeInst._nativeNode = node;
  node[internalInstanceKey] = nativeInst;
}

function uncacheNode(inst) {
  var node = inst._nativeNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._nativeNode = null;
  }
}

/**
 * Populate `_nativeNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedNativeOrTextFromComponent(childInst)._domID;
    if (childID == null) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : invariant(false) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._nativeNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._nativeNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;

  if (inst._nativeNode) {
    return inst._nativeNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._nativeNode) {
    parents.push(inst);
    !inst._nativeParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : invariant(false) : void 0;
    inst = inst._nativeParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._nativeNode);
  }

  return inst._nativeNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
}).call(this,require('_process'))
},{"./DOMProperty":15,"./ReactDOMComponentFlags":42,"_process":4,"fbjs/lib/invariant":156}],44:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMContainerInfo
 */

'use strict';

var validateDOMNesting = require('./validateDOMNesting');

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
}).call(this,require('_process'))
},{"./validateDOMNesting":140,"_process":4}],45:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMDebugTool
 */

'use strict';

var ReactDOMUnknownPropertyDevtool = require('./ReactDOMUnknownPropertyDevtool');

var warning = require('fbjs/lib/warning');

var eventHandlers = [];
var handlerDoesThrowForEvent = {};

function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
  if (process.env.NODE_ENV !== 'production') {
    eventHandlers.forEach(function (handler) {
      try {
        if (handler[handlerFunctionName]) {
          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
        }
      } catch (e) {
        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
        handlerDoesThrowForEvent[handlerFunctionName] = true;
      }
    });
  }
}

var ReactDOMDebugTool = {
  addDevtool: function (devtool) {
    eventHandlers.push(devtool);
  },
  removeDevtool: function (devtool) {
    for (var i = 0; i < eventHandlers.length; i++) {
      if (eventHandlers[i] === devtool) {
        eventHandlers.splice(i, 1);
        i--;
      }
    }
  },
  onCreateMarkupForProperty: function (name, value) {
    emitEvent('onCreateMarkupForProperty', name, value);
  },
  onSetValueForProperty: function (node, name, value) {
    emitEvent('onSetValueForProperty', node, name, value);
  },
  onDeleteValueForProperty: function (node, name) {
    emitEvent('onDeleteValueForProperty', node, name);
  }
};

ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);

module.exports = ReactDOMDebugTool;
}).call(this,require('_process'))
},{"./ReactDOMUnknownPropertyDevtool":58,"_process":4,"fbjs/lib/warning":166}],46:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMEmptyComponent
 */

'use strict';

var _assign = require('object-assign');

var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._nativeNode = null;
  this._nativeParent = null;
  this._nativeContainerInfo = null;
  this._domID = null;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    var domID = nativeContainerInfo._idCounter++;
    this._domID = domID;
    this._nativeParent = nativeParent;
    this._nativeContainerInfo = nativeContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = nativeContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getNativeNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;
},{"./DOMLazyTree":13,"./ReactDOMComponentTree":43,"object-assign":167}],47:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFactories
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactElementValidator = require('./ReactElementValidator');

var mapObject = require('fbjs/lib/mapObject');

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if (process.env.NODE_ENV !== 'production') {
    return ReactElementValidator.createFactory(tag);
  }
  return ReactElement.createFactory(tag);
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hgroup: 'hgroup',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  clipPath: 'clipPath',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  image: 'image',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOMFactories;
}).call(this,require('_process'))
},{"./ReactElement":64,"./ReactElementValidator":65,"_process":4,"fbjs/lib/mapObject":161}],48:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFeatureFlags
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true
};

module.exports = ReactDOMFeatureFlags;
},{}],49:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 */

'use strict';

var DOMChildrenOperations = require('./DOMChildrenOperations');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactPerf = require('./ReactPerf');

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
});

module.exports = ReactDOMIDOperations;
},{"./DOMChildrenOperations":12,"./ReactDOMComponentTree":43,"./ReactPerf":84}],50:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

'use strict';

var _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueNull = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function warnIfValueIsNull(props) {
  if (props != null && props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `input` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

    didWarnValueNull = true;
  }
}

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getNativeProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var nativeProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return nativeProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValueDefaultValue = true;
      }
      warnIfValueIsNull(props);
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.defaultChecked || false,
      initialValue: defaultValue != null ? defaultValue : null,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if (process.env.NODE_ENV !== 'production') {
      inst._wrapperState.controlled = props.checked !== undefined || props.value !== undefined;
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      warnIfValueIsNull(props);

      var initialValue = inst._wrapperState.initialChecked || inst._wrapperState.initialValue;
      var defaultValue = props.defaultChecked || props.defaultValue;
      var controlled = props.checked !== undefined || props.value !== undefined;
      var owner = inst._currentElement._owner;

      if ((initialValue || !inst._wrapperState.controlled) && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && (defaultValue || !controlled) && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
}).call(this,require('_process'))
},{"./DOMPropertyOperations":16,"./LinkedValueUtils":27,"./ReactDOMComponentTree":43,"./ReactUpdates":92,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166,"object-assign":167}],51:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInstrumentation
 */

'use strict';

var ReactDOMDebugTool = require('./ReactDOMDebugTool');

module.exports = { debugTool: ReactDOMDebugTool };
},{"./ReactDOMDebugTool":45}],52:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

'use strict';

var _assign = require('object-assign');

var ReactChildren = require('./ReactChildren');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMSelect = require('./ReactDOMSelect');

var warning = require('fbjs/lib/warning');

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, nativeParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (nativeParent != null && nativeParent._tag === 'select') {
      selectValue = ReactDOMSelect.getSelectValueContext(nativeParent);
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === '' + props.value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === '' + props.value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getNativeProps: function (inst, props) {
    var nativeProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      nativeProps.selected = inst._wrapperState.selected;
    }

    var content = '';

    // Flatten children and warn if they aren't strings or numbers;
    // invalid types are ignored.
    ReactChildren.forEach(props.children, function (child) {
      if (child == null) {
        return;
      }
      if (typeof child === 'string' || typeof child === 'number') {
        content += child;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
      }
    });

    if (content) {
      nativeProps.children = content;
    }

    return nativeProps;
  }

};

module.exports = ReactDOMOption;
}).call(this,require('_process'))
},{"./ReactChildren":32,"./ReactDOMComponentTree":43,"./ReactDOMSelect":53,"_process":4,"fbjs/lib/warning":166,"object-assign":167}],53:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

'use strict';

var _assign = require('object-assign');

var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueNull = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function warnIfValueIsNull(props) {
  if (props != null && props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `select` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

    didWarnValueNull = true;
  }
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    if (props.multiple) {
      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else {
      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getNativeProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
      warnIfValueIsNull(props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;
    if (process.env.NODE_ENV !== 'production') {
      warnIfValueIsNull(props);
    }

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
}).call(this,require('_process'))
},{"./LinkedValueUtils":27,"./ReactDOMComponentTree":43,"./ReactUpdates":92,"_process":4,"fbjs/lib/warning":166,"object-assign":167}],54:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var getNodeForCharacterOffset = require('./getNodeForCharacterOffset');
var getTextContentAccessor = require('./getTextContentAccessor');

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;
},{"./getNodeForCharacterOffset":127,"./getTextContentAccessor":128,"fbjs/lib/ExecutionEnvironment":142}],55:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextComponent
 */

'use strict';

var _assign = require('object-assign');

var DOMChildrenOperations = require('./DOMChildrenOperations');
var DOMLazyTree = require('./DOMLazyTree');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactPerf = require('./ReactPerf');

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var invariant = require('fbjs/lib/invariant');
var validateDOMNesting = require('./validateDOMNesting');

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._nativeNode = null;
  this._nativeParent = null;

  // Properties
  this._domID = null;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, nativeParent, nativeContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (nativeParent != null) {
        parentInfo = nativeParent._ancestorInfo;
      } else if (nativeContainerInfo != null) {
        parentInfo = nativeContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting('#text', this, parentInfo);
      }
    }

    var domID = nativeContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._nativeParent = nativeParent;
    if (transaction.useCreateElement) {
      var ownerDocument = nativeContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getNativeNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getNativeNode: function () {
    var nativeNode = this._commentNodes;
    if (nativeNode) {
      return nativeNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : invariant(false) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    nativeNode = [this._nativeNode, this._closingComment];
    this._commentNodes = nativeNode;
    return nativeNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

ReactPerf.measureMethods(ReactDOMTextComponent.prototype, 'ReactDOMTextComponent', {
  mountComponent: 'mountComponent',
  receiveComponent: 'receiveComponent'
});

module.exports = ReactDOMTextComponent;
}).call(this,require('_process'))
},{"./DOMChildrenOperations":12,"./DOMLazyTree":13,"./ReactDOMComponentTree":43,"./ReactPerf":84,"./escapeTextContentForBrowser":117,"./validateDOMNesting":140,"_process":4,"fbjs/lib/invariant":156,"object-assign":167}],56:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

'use strict';

var _assign = require('object-assign');

var DOMPropertyOperations = require('./DOMPropertyOperations');
var LinkedValueUtils = require('./LinkedValueUtils');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var didWarnValueLink = false;
var didWarnValueNull = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

function warnIfValueIsNull(props) {
  if (props != null && props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `textarea` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.') : void 0;

    didWarnValueNull = true;
  }
}

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getNativeProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    var nativeProps = _assign({}, props, {
      defaultValue: undefined,
      value: undefined,
      children: inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return nativeProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
      warnIfValueIsNull(props);
    }

    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
      }
      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue),
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      warnIfValueIsNull(props);
    }

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'value', '' + value);
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
}).call(this,require('_process'))
},{"./DOMPropertyOperations":16,"./LinkedValueUtils":27,"./ReactDOMComponentTree":43,"./ReactUpdates":92,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166,"object-assign":167}],57:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTreeTraversal
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;
  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : invariant(false) : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._nativeParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._nativeParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._nativeParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._nativeParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._nativeParent;
    instB = instB._nativeParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_nativeNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;
  !('_nativeNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : invariant(false) : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._nativeParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_nativeNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : invariant(false) : void 0;

  return inst._nativeParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._nativeParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], false, arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], true, arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._nativeParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._nativeParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], true, argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], false, argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],58:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMUnknownPropertyDevtool
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginRegistry = require('./EventPluginRegistry');

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function (name) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : void 0;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?', name, registrationName) : void 0;
  };
}

var ReactDOMUnknownPropertyDevtool = {
  onCreateMarkupForProperty: function (name, value) {
    warnUnknownProperty(name);
  },
  onSetValueForProperty: function (node, name, value) {
    warnUnknownProperty(name);
  },
  onDeleteValueForProperty: function (node, name) {
    warnUnknownProperty(name);
  }
};

module.exports = ReactDOMUnknownPropertyDevtool;
}).call(this,require('_process'))
},{"./DOMProperty":15,"./EventPluginRegistry":22,"_process":4,"fbjs/lib/warning":166}],59:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDebugTool
 */

'use strict';

var ReactInvalidSetStateWarningDevTool = require('./ReactInvalidSetStateWarningDevTool');
var warning = require('fbjs/lib/warning');

var eventHandlers = [];
var handlerDoesThrowForEvent = {};

function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
  if (process.env.NODE_ENV !== 'production') {
    eventHandlers.forEach(function (handler) {
      try {
        if (handler[handlerFunctionName]) {
          handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
        }
      } catch (e) {
        process.env.NODE_ENV !== 'production' ? warning(!handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e.message) : void 0;
        handlerDoesThrowForEvent[handlerFunctionName] = true;
      }
    });
  }
}

var ReactDebugTool = {
  addDevtool: function (devtool) {
    eventHandlers.push(devtool);
  },
  removeDevtool: function (devtool) {
    for (var i = 0; i < eventHandlers.length; i++) {
      if (eventHandlers[i] === devtool) {
        eventHandlers.splice(i, 1);
        i--;
      }
    }
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onMountRootComponent: function (internalInstance) {
    emitEvent('onMountRootComponent', internalInstance);
  },
  onMountComponent: function (internalInstance) {
    emitEvent('onMountComponent', internalInstance);
  },
  onUpdateComponent: function (internalInstance) {
    emitEvent('onUpdateComponent', internalInstance);
  },
  onUnmountComponent: function (internalInstance) {
    emitEvent('onUnmountComponent', internalInstance);
  }
};

ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);

module.exports = ReactDebugTool;
}).call(this,require('_process'))
},{"./ReactInvalidSetStateWarningDevTool":75,"_process":4,"fbjs/lib/warning":166}],60:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

'use strict';

var _assign = require('object-assign');

var ReactUpdates = require('./ReactUpdates');
var Transaction = require('./Transaction');

var emptyFunction = require('fbjs/lib/emptyFunction');

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b, c, d, e);
    } else {
      transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;
},{"./ReactUpdates":92,"./Transaction":110,"fbjs/lib/emptyFunction":148,"object-assign":167}],61:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

'use strict';

var BeforeInputEventPlugin = require('./BeforeInputEventPlugin');
var ChangeEventPlugin = require('./ChangeEventPlugin');
var DefaultEventPluginOrder = require('./DefaultEventPluginOrder');
var EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');
var ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');
var ReactDOMComponent = require('./ReactDOMComponent');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');
var ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');
var ReactDOMTextComponent = require('./ReactDOMTextComponent');
var ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');
var ReactEventListener = require('./ReactEventListener');
var ReactInjection = require('./ReactInjection');
var ReactReconcileTransaction = require('./ReactReconcileTransaction');
var SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');
var SelectEventPlugin = require('./SelectEventPlugin');
var SimpleEventPlugin = require('./SimpleEventPlugin');

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

  if (process.env.NODE_ENV !== 'production') {
    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
    if (/[?&]react_perf\b/.test(url)) {
      var ReactDefaultPerf = require('./ReactDefaultPerf');
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};
}).call(this,require('_process'))
},{"./BeforeInputEventPlugin":7,"./ChangeEventPlugin":11,"./DefaultEventPluginOrder":18,"./EnterLeaveEventPlugin":19,"./HTMLDOMPropertyConfig":26,"./ReactComponentBrowserEnvironment":35,"./ReactDOMComponent":41,"./ReactDOMComponentTree":43,"./ReactDOMEmptyComponent":46,"./ReactDOMTextComponent":55,"./ReactDOMTreeTraversal":57,"./ReactDefaultBatchingStrategy":60,"./ReactDefaultPerf":62,"./ReactEventListener":69,"./ReactInjection":71,"./ReactReconcileTransaction":88,"./SVGDOMPropertyConfig":94,"./SelectEventPlugin":95,"./SimpleEventPlugin":96,"_process":4,"fbjs/lib/ExecutionEnvironment":142}],62:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerf
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDefaultPerfAnalysis = require('./ReactDefaultPerfAnalysis');
var ReactMount = require('./ReactMount');
var ReactPerf = require('./ReactPerf');

var performanceNow = require('fbjs/lib/performanceNow');
var warning = require('fbjs/lib/warning');

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

function addValue(obj, key, val) {
  obj[key] = (obj[key] || 0) + val;
}

// Composite/text components don't have any built-in ID: we have to make our own
var compositeIDMap;
var compositeIDCounter = 17000;
function getIDOfComposite(inst) {
  if (!compositeIDMap) {
    compositeIDMap = new WeakMap();
  }
  if (compositeIDMap.has(inst)) {
    return compositeIDMap.get(inst);
  } else {
    var id = compositeIDCounter++;
    compositeIDMap.set(inst, id);
    return id;
  }
}

function getID(inst) {
  if (inst.hasOwnProperty('_rootNodeID')) {
    return inst._rootNodeID;
  } else {
    return getIDOfComposite(inst);
  }
}

function stripComplexValues(key, value) {
  if (typeof value !== 'object' || Array.isArray(value) || value == null) {
    return value;
  }
  var prototype = Object.getPrototypeOf(value);
  if (!prototype || prototype === Object.prototype) {
    return value;
  }
  return '<not serializable>';
}

// This implementation of ReactPerf is going away some time mid 15.x.
// While we plan to keep most of the API, the actual format of measurements
// will change dramatically. To signal this, we wrap them into an opaque-ish
// object to discourage reaching into it until the API stabilizes.
function wrapLegacyMeasurements(measurements) {
  return { __unstable_this_format_will_change: measurements };
}
function unwrapLegacyMeasurements(measurements) {
  return measurements && measurements.__unstable_this_format_will_change || measurements;
}

var warnedAboutPrintDOM = false;
var warnedAboutGetMeasurementsSummaryMap = false;

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _mountStack: [0],
  _compositeStack: [],
  _injected: false,

  start: function () {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function () {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function () {
    return wrapLegacyMeasurements(ReactDefaultPerf._allMeasurements);
  },

  printExclusive: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function (item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Exclusive mount time (ms)': roundFloat(item.exclusive),
        'Exclusive render time (ms)': roundFloat(item.render),
        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Render time per instance (ms)': roundFloat(item.render / item.count),
        'Instances': item.count
      };
    }));
    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
    // number.
  },

  printInclusive: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function (item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
  },

  getMeasurementsSummaryMap: function (measurements) {
    process.env.NODE_ENV !== 'production' ? warning(warnedAboutGetMeasurementsSummaryMap, '`ReactPerf.getMeasurementsSummaryMap(...)` is deprecated. Use ' + '`ReactPerf.getWasted(...)` instead.') : void 0;
    warnedAboutGetMeasurementsSummaryMap = true;
    return ReactDefaultPerf.getWasted(measurements);
  },

  getWasted: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements);
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
    return summary.map(function (item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    });
  },

  printWasted: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    console.table(ReactDefaultPerf.getWasted(measurements));
    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
  },

  printDOM: function (measurements) {
    process.env.NODE_ENV !== 'production' ? warning(warnedAboutPrintDOM, '`ReactPerf.printDOM(...)` is deprecated. Use ' + '`ReactPerf.printOperations(...)` instead.') : void 0;
    warnedAboutPrintDOM = true;
    return ReactDefaultPerf.printOperations(measurements);
  },

  printOperations: function (measurements) {
    measurements = unwrapLegacyMeasurements(measurements || ReactDefaultPerf._allMeasurements);
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function (item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result.type = item.type;
      result.args = JSON.stringify(item.args, stripComplexValues);
      return result;
    }));
    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
  },

  _recordWrite: function (id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
    var writes = entry.writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function (moduleName, fnName, func) {
    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var totalTime;
      var rv;
      var start;

      var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push(entry = {
          exclusive: {},
          inclusive: {},
          render: {},
          counts: {},
          writes: {},
          displayNames: {},
          hierarchy: {},
          totalTime: 0,
          created: {}
        });
        start = performanceNow();
        rv = func.apply(this, args);
        entry.totalTime = performanceNow() - start;
        return rv;
      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations' || moduleName === 'ReactComponentBrowserEnvironment') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === '_mountImageIntoNode') {
          ReactDefaultPerf._recordWrite('', fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[1].forEach(function (update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.content !== null) {
              writeArgs.content = update.content;
            }
            ReactDefaultPerf._recordWrite(args[0]._rootNodeID, update.type, totalTime, writeArgs);
          });
        } else {
          // basic format
          var id = args[0];
          if (moduleName === 'EventPluginHub') {
            id = id._rootNodeID;
          } else if (fnName === 'replaceNodeWithMarkup') {
            // Old node is already unmounted; can't get its instance
            id = ReactDOMComponentTree.getInstanceFromNode(args[1].node)._rootNodeID;
          } else if (fnName === 'replaceDelimitedText') {
            id = getID(ReactDOMComponentTree.getInstanceFromNode(args[0]));
          } else if (typeof id === 'object') {
            id = getID(ReactDOMComponentTree.getInstanceFromNode(args[0]));
          }
          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
      fnName === '_renderValidatedComponent')) {

        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
          return func.apply(this, args);
        }

        var rootNodeID = getIDOfComposite(this);
        var isRender = fnName === '_renderValidatedComponent';
        var isMount = fnName === 'mountComponent';

        var mountStack = ReactDefaultPerf._mountStack;

        if (isRender) {
          addValue(entry.counts, rootNodeID, 1);
        } else if (isMount) {
          entry.created[rootNodeID] = true;
          mountStack.push(0);
        }

        ReactDefaultPerf._compositeStack.push(rootNodeID);

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        ReactDefaultPerf._compositeStack.pop();

        if (isRender) {
          addValue(entry.render, rootNodeID, totalTime);
        } else if (isMount) {
          var subMountTime = mountStack.pop();
          mountStack[mountStack.length - 1] += totalTime;
          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
          addValue(entry.inclusive, rootNodeID, totalTime);
        } else {
          addValue(entry.inclusive, rootNodeID, totalTime);
        }

        entry.displayNames[rootNodeID] = {
          current: this.getName(),
          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
        };

        return rv;
      } else if ((moduleName === 'ReactDOMComponent' || moduleName === 'ReactDOMTextComponent') && (fnName === 'mountComponent' || fnName === 'receiveComponent')) {

        rv = func.apply(this, args);
        entry.hierarchy[getID(this)] = ReactDefaultPerf._compositeStack.slice();
        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;
}).call(this,require('_process'))
},{"./DOMProperty":15,"./ReactDOMComponentTree":43,"./ReactDefaultPerfAnalysis":63,"./ReactMount":77,"./ReactPerf":84,"_process":4,"fbjs/lib/performanceNow":164,"fbjs/lib/warning":166}],63:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

'use strict';

// Don't try to save users less than 1.2ms (a number I made up)

var _assign = require('object-assign');

var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  '_mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  SET_MARKUP: 'set innerHTML',
  TEXT_CONTENT: 'set textContent',
  'setValueForProperty': 'update attribute',
  'setValueForAttribute': 'update attribute',
  'deleteValueForProperty': 'remove attribute',
  'setValueForStyles': 'update styles',
  'replaceNodeWithMarkup': 'replace',
  'replaceDelimitedText': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  measurements.forEach(function (measurement) {
    Object.keys(measurement.writes).forEach(function (id) {
      measurement.writes[id].forEach(function (write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    });
  });
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = _assign({}, measurement.exclusive, measurement.inclusive);

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        render: 0,
        count: 0
      };
      if (measurement.render[id]) {
        candidates[displayName].render += measurement.render[id];
      }
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function (a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = _assign({}, measurement.exclusive, measurement.inclusive);
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function (a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var writes = measurement.writes;
  var dirtyComposites = {};
  Object.keys(writes).forEach(function (id) {
    writes[id].forEach(function (write) {
      // Root mounting (innerHTML set) is recorded with an ID of ''
      if (id !== '') {
        measurement.hierarchy[id].forEach(function (c) {
          return dirtyComposites[c] = true;
        });
      }
    });
  });
  var allIDs = _assign({}, measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // See if any of the DOM operations applied to this component's subtree.
    if (dirtyComposites[id]) {
      isDirty = true;
    }
    // check if component newly created
    if (measurement.created[id]) {
      isDirty = true;
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;
},{"object-assign":167}],64:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

'use strict';

var _assign = require('object-assign');

var ReactCurrentOwner = require('./ReactCurrentOwner');

var warning = require('fbjs/lib/warning');
var canDefineProperty = require('./canDefineProperty');

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (process.env.NODE_ENV !== 'production') {
      ref = !config.hasOwnProperty('ref') || Object.getOwnPropertyDescriptor(config, 'ref').get ? null : config.ref;
      key = !config.hasOwnProperty('key') || Object.getOwnPropertyDescriptor(config, 'key').get ? null : '' + config.key;
    } else {
      ref = config.ref === undefined ? null : config.ref;
      key = config.key === undefined ? null : '' + config.key;
    }
    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    // Create dummy `key` and `ref` property to `props` to warn users
    // against its use
    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
      if (!props.hasOwnProperty('key')) {
        Object.defineProperty(props, 'key', {
          get: function () {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
            }
            return undefined;
          },
          configurable: true
        });
      }
      if (!props.hasOwnProperty('ref')) {
        Object.defineProperty(props, 'ref', {
          get: function () {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', typeof type === 'function' && 'displayName' in type ? type.displayName : 'Element') : void 0;
            }
            return undefined;
          },
          configurable: true
        });
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (config.ref !== undefined) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (config.key !== undefined) {
      key = '' + config.key;
    }
    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":38,"./canDefineProperty":114,"_process":4,"fbjs/lib/warning":166,"object-assign":167}],65:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactPropTypeLocations = require('./ReactPropTypeLocations');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');
var ReactCurrentOwner = require('./ReactCurrentOwner');

var canDefineProperty = require('./canDefineProperty');
var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

var loggedTypeFailures = {};

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
  if (addenda === null) {
    // we already showed the warning
    return;
  }
  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : void 0;
}

/**
 * Shared warning and monitoring code for the key warnings.
 *
 * @internal
 * @param {string} messageType A key used for de-duping warnings.
 * @param {ReactElement} element Component that requires a key.
 * @param {*} parentType element's parent's type.
 * @returns {?object} A set of addenda to use in the warning message, or null
 * if the warning has already been shown before (and shouldn't be shown again).
 */
function getAddendaForKeyUse(messageType, element, parentType) {
  var addendum = getDeclarationErrorAddendum();
  if (!addendum) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      addendum = ' Check the top-level render call using <' + parentName + '>.';
    }
  }

  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
  if (memoizer[addendum]) {
    return null;
  }
  memoizer[addendum] = true;

  var addenda = {
    parentOrOwner: addendum,
    url: ' See https://fb.me/react-warning-keys for more information.',
    childOwner: null
  };

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  return addenda;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Assert that the props are valid
 *
 * @param {string} componentName Name of the component for error messages.
 * @param {object} propTypes Map of prop name to a ReactPropType
 * @param {object} props
 * @param {string} location e.g. "prop", "context", "child context"
 * @private
 */
function checkPropTypes(componentName, propTypes, props, location) {
  for (var propName in propTypes) {
    if (propTypes.hasOwnProperty(propName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : void 0;
        error = propTypes[propName](props, propName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum();
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : void 0;
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":38,"./ReactElement":64,"./ReactPropTypeLocationNames":85,"./ReactPropTypeLocations":86,"./canDefineProperty":114,"./getIteratorFn":125,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],66:[function(require,module,exports){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;
},{}],67:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {?String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a, b) {
  try {
    return func(a, b);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
    return undefined;
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
      var boundFunc = func.bind(null, a, b);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
}).call(this,require('_process'))
},{"_process":4}],68:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

'use strict';

var EventPluginHub = require('./EventPluginHub');

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;
},{"./EventPluginHub":21}],69:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 */

'use strict';

var _assign = require('object-assign');

var EventListener = require('fbjs/lib/EventListener');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var PooledClass = require('./PooledClass');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactUpdates = require('./ReactUpdates');

var getEventTarget = require('./getEventTarget');
var getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._nativeParent) {
    inst = inst._nativeParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;
},{"./PooledClass":28,"./ReactDOMComponentTree":43,"./ReactUpdates":92,"./getEventTarget":124,"fbjs/lib/EventListener":141,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/getUnboundedScrollPosition":153,"object-assign":167}],70:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactFeatureFlags
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;
},{}],71:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

'use strict';

var DOMProperty = require('./DOMProperty');
var EventPluginHub = require('./EventPluginHub');
var EventPluginUtils = require('./EventPluginUtils');
var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactClass = require('./ReactClass');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactNativeComponent = require('./ReactNativeComponent');
var ReactPerf = require('./ReactPerf');
var ReactUpdates = require('./ReactUpdates');

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  Class: ReactClass.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  NativeComponent: ReactNativeComponent.injection,
  Perf: ReactPerf.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;
},{"./DOMProperty":15,"./EventPluginHub":21,"./EventPluginUtils":23,"./ReactBrowserEventEmitter":30,"./ReactClass":33,"./ReactComponentEnvironment":36,"./ReactEmptyComponent":66,"./ReactNativeComponent":80,"./ReactPerf":84,"./ReactUpdates":92}],72:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

'use strict';

var ReactDOMSelection = require('./ReactDOMSelection');

var containsNode = require('fbjs/lib/containsNode');
var focusNode = require('fbjs/lib/focusNode');
var getActiveElement = require('fbjs/lib/getActiveElement');

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;
},{"./ReactDOMSelection":54,"fbjs/lib/containsNode":145,"fbjs/lib/focusNode":150,"fbjs/lib/getActiveElement":151}],73:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceMap
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;
},{}],74:[function(require,module,exports){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstrumentation
 */

'use strict';

var ReactDebugTool = require('./ReactDebugTool');

module.exports = { debugTool: ReactDebugTool };
},{"./ReactDebugTool":59}],75:[function(require,module,exports){
(function (process){
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInvalidSetStateWarningDevTool
 */

'use strict';

var warning = require('fbjs/lib/warning');

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningDevTool = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningDevTool;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/warning":166}],76:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

'use strict';

var adler32 = require('./adler32');

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;
},{"./adler32":113}],77:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

'use strict';

var DOMLazyTree = require('./DOMLazyTree');
var DOMProperty = require('./DOMProperty');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactDOMContainerInfo = require('./ReactDOMContainerInfo');
var ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');
var ReactElement = require('./ReactElement');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactInstrumentation = require('./ReactInstrumentation');
var ReactMarkupChecksum = require('./ReactMarkupChecksum');
var ReactPerf = require('./ReactPerf');
var ReactReconciler = require('./ReactReconciler');
var ReactUpdateQueue = require('./ReactUpdateQueue');
var ReactUpdates = require('./ReactUpdates');

var emptyObject = require('fbjs/lib/emptyObject');
var instantiateReactComponent = require('./instantiateReactComponent');
var invariant = require('fbjs/lib/invariant');
var setInnerHTML = require('./setInnerHTML');
var shouldUpdateReactComponent = require('./shouldUpdateReactComponent');
var warning = require('fbjs/lib/warning');

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  ReactReconciler.unmountComponent(instance, safely);

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._nativeParent);
  }
}

function getNativeRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevNativeInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevNativeInstance && !prevNativeInstance._nativeParent ? prevNativeInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getNativeRootInstanceInContainer(container);
  return root ? root._nativeContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  // this.props is actually a ReactElement
  return this.props;
};

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by devtools!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance);
    }

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : void 0;

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }
  }
};

ReactPerf.measureMethods(ReactMount, 'ReactMount', {
  _renderNewRootComponent: '_renderNewRootComponent',
  _mountImageIntoNode: '_mountImageIntoNode'
});

module.exports = ReactMount;
}).call(this,require('_process'))
},{"./DOMLazyTree":13,"./DOMProperty":15,"./ReactBrowserEventEmitter":30,"./ReactCurrentOwner":38,"./ReactDOMComponentTree":43,"./ReactDOMContainerInfo":44,"./ReactDOMFeatureFlags":48,"./ReactElement":64,"./ReactFeatureFlags":70,"./ReactInstrumentation":74,"./ReactMarkupChecksum":76,"./ReactPerf":84,"./ReactReconciler":89,"./ReactUpdateQueue":91,"./ReactUpdates":92,"./instantiateReactComponent":130,"./setInnerHTML":136,"./shouldUpdateReactComponent":138,"_process":4,"fbjs/lib/emptyObject":149,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],78:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 */

'use strict';

var ReactComponentEnvironment = require('./ReactComponentEnvironment');
var ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactReconciler = require('./ReactReconciler');
var ReactChildReconciler = require('./ReactChildReconciler');

var flattenChildren = require('./flattenChildren');
var invariant = require('fbjs/lib/invariant');

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getNativeNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.SET_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
      var nextChildren;
      if (process.env.NODE_ENV !== 'production') {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;
      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : invariant(false) : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getNativeNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._nativeContainerInfo, context);
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
}).call(this,require('_process'))
},{"./ReactChildReconciler":31,"./ReactComponentEnvironment":36,"./ReactCurrentOwner":38,"./ReactMultiChildUpdateTypes":79,"./ReactReconciler":89,"./flattenChildren":119,"_process":4,"fbjs/lib/invariant":156}],79:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  SET_MARKUP: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;
},{"fbjs/lib/keyMirror":159}],80:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNativeComponent
 */

'use strict';

var _assign = require('object-assign');

var invariant = require('fbjs/lib/invariant');

var autoGenerateWrapperClass = null;
var genericComponentClass = null;
// This registry keeps track of wrapper classes around native tags.
var tagToComponentClass = {};
var textComponentClass = null;

var ReactNativeComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function (componentClasses) {
    _assign(tagToComponentClass, componentClasses);
  }
};

/**
 * Get a composite component wrapper class for a specific tag.
 *
 * @param {ReactElement} element The tag for which to get the class.
 * @return {function} The React class constructor function.
 */
function getComponentClassForElement(element) {
  if (typeof element.type === 'function') {
    return element.type;
  }
  var tag = element.type;
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
  }
  return componentClass;
}

/**
 * Get a native internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactNativeComponent = {
  getComponentClassForElement: getComponentClassForElement,
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactNativeComponentInjection
};

module.exports = ReactNativeComponent;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156,"object-assign":167}],81:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNodeTypes
 */

'use strict';

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

var ReactNodeTypes = {
  NATIVE: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (ReactElement.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.NATIVE;
      }
    }
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : invariant(false) : void 0;
  }
};

module.exports = ReactNodeTypes;
}).call(this,require('_process'))
},{"./ReactElement":64,"_process":4,"fbjs/lib/invariant":156}],82:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNoopUpdateQueue
 */

'use strict';

var warning = require('fbjs/lib/warning');

function warnTDZ(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnTDZ(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnTDZ(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnTDZ(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/warning":166}],83:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function (object) {
    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],84:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPerf
 */

'use strict';

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */

var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * @param {object} object
   * @param {string} objectName
   * @param {object<string>} methodNames
   */
  measureMethods: function (object, objectName, methodNames) {
    if (process.env.NODE_ENV !== 'production') {
      for (var key in methodNames) {
        if (!methodNames.hasOwnProperty(key)) {
          continue;
        }
        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
      }
    }
  },

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function (objName, fnName, func) {
    if (process.env.NODE_ENV !== 'production') {
      var measuredFunc = null;
      var wrapper = function () {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
      wrapper.displayName = objName + '_' + fnName;
      return wrapper;
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function (measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;
}).call(this,require('_process'))
},{"_process":4}],85:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
}).call(this,require('_process'))
},{"_process":4}],86:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

'use strict';

var keyMirror = require('fbjs/lib/keyMirror');

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;
},{"fbjs/lib/keyMirror":159}],87:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

'use strict';

var ReactElement = require('./ReactElement');
var ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getIteratorFn = require('./getIteratorFn');

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location, propFullName) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    return createChainableTypeChecker(function () {
      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
    });
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    return createChainableTypeChecker(function () {
      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
    });
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
},{"./ReactElement":64,"./ReactPropTypeLocationNames":85,"./getIteratorFn":125,"fbjs/lib/emptyFunction":148}],88:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');
var ReactInputSelection = require('./ReactInputSelection');
var Transaction = require('./Transaction');

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
},{"./CallbackQueue":10,"./PooledClass":28,"./ReactBrowserEventEmitter":30,"./ReactInputSelection":72,"./Transaction":110,"object-assign":167}],89:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconciler
 */

'use strict';

var ReactRef = require('./ReactRef');
var ReactInstrumentation = require('./ReactInstrumentation');

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing native component instance
   * @param {?object} info about the native container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, nativeParent, nativeContainerInfo, context) {
    var markup = internalInstance.mountComponent(transaction, nativeParent, nativeContainerInfo, context);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onMountComponent(internalInstance);
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getNativeNode: function (internalInstance) {
    return internalInstance.getNativeNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onUnmountComponent(internalInstance);
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onUpdateComponent(internalInstance);
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction) {
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onUpdateComponent(internalInstance);
    }
  }

};

module.exports = ReactReconciler;
}).call(this,require('_process'))
},{"./ReactInstrumentation":74,"./ReactRef":90,"_process":4}],90:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRef
 */

'use strict';

var ReactOwner = require('./ReactOwner');

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;

  return(
    // This has a few false positives w/r/t empty components.
    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
  );
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;
},{"./ReactOwner":83}],91:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdateQueue
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactInstanceMap = require('./ReactInstanceMap');
var ReactUpdates = require('./ReactUpdates');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, newElement) {
    internalInstance._pendingElement = newElement;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : invariant(false) : void 0;
  }

};

module.exports = ReactUpdateQueue;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":38,"./ReactInstanceMap":73,"./ReactUpdates":92,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],92:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

'use strict';

var _assign = require('object-assign');

var CallbackQueue = require('./CallbackQueue');
var PooledClass = require('./PooledClass');
var ReactFeatureFlags = require('./ReactFeatureFlags');
var ReactPerf = require('./ReactPerf');
var ReactReconciler = require('./ReactReconciler');
var Transaction = require('./Transaction');

var invariant = require('fbjs/lib/invariant');

var dirtyComponents = [];
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.props === component._renderedComponent._currentElement) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};
flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setProps, setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
}).call(this,require('_process'))
},{"./CallbackQueue":10,"./PooledClass":28,"./ReactFeatureFlags":70,"./ReactPerf":84,"./ReactReconciler":89,"./Transaction":110,"_process":4,"fbjs/lib/invariant":156,"object-assign":167}],93:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactVersion
 */

'use strict';

module.exports = '15.0.1';
},{}],94:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).map(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;
},{}],95:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventPropagators = require('./EventPropagators');
var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInputSelection = require('./ReactInputSelection');
var SyntheticEvent = require('./SyntheticEvent');

var getActiveElement = require('fbjs/lib/getActiveElement');
var isTextInputElement = require('./isTextInputElement');
var keyOf = require('fbjs/lib/keyOf');
var shallowEqual = require('fbjs/lib/shallowEqual');

var topLevelTypes = EventConstants.topLevelTypes;

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSelect: null }),
      captured: keyOf({ onSelectCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;
var ON_SELECT_KEY = keyOf({ onSelect: null });

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case topLevelTypes.topSelectionChange:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === ON_SELECT_KEY) {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;
},{"./EventConstants":20,"./EventPropagators":24,"./ReactDOMComponentTree":43,"./ReactInputSelection":72,"./SyntheticEvent":101,"./isTextInputElement":132,"fbjs/lib/ExecutionEnvironment":142,"fbjs/lib/getActiveElement":151,"fbjs/lib/keyOf":160,"fbjs/lib/shallowEqual":165}],96:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

'use strict';

var EventConstants = require('./EventConstants');
var EventListener = require('fbjs/lib/EventListener');
var EventPropagators = require('./EventPropagators');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var SyntheticAnimationEvent = require('./SyntheticAnimationEvent');
var SyntheticClipboardEvent = require('./SyntheticClipboardEvent');
var SyntheticEvent = require('./SyntheticEvent');
var SyntheticFocusEvent = require('./SyntheticFocusEvent');
var SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');
var SyntheticMouseEvent = require('./SyntheticMouseEvent');
var SyntheticDragEvent = require('./SyntheticDragEvent');
var SyntheticTouchEvent = require('./SyntheticTouchEvent');
var SyntheticTransitionEvent = require('./SyntheticTransitionEvent');
var SyntheticUIEvent = require('./SyntheticUIEvent');
var SyntheticWheelEvent = require('./SyntheticWheelEvent');

var emptyFunction = require('fbjs/lib/emptyFunction');
var getEventCharCode = require('./getEventCharCode');
var invariant = require('fbjs/lib/invariant');
var keyOf = require('fbjs/lib/keyOf');

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  abort: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAbort: true }),
      captured: keyOf({ onAbortCapture: true })
    }
  },
  animationEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationEnd: true }),
      captured: keyOf({ onAnimationEndCapture: true })
    }
  },
  animationIteration: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationIteration: true }),
      captured: keyOf({ onAnimationIterationCapture: true })
    }
  },
  animationStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationStart: true }),
      captured: keyOf({ onAnimationStartCapture: true })
    }
  },
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBlur: true }),
      captured: keyOf({ onBlurCapture: true })
    }
  },
  canPlay: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlay: true }),
      captured: keyOf({ onCanPlayCapture: true })
    }
  },
  canPlayThrough: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlayThrough: true }),
      captured: keyOf({ onCanPlayThroughCapture: true })
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onClick: true }),
      captured: keyOf({ onClickCapture: true })
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onContextMenu: true }),
      captured: keyOf({ onContextMenuCapture: true })
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCopy: true }),
      captured: keyOf({ onCopyCapture: true })
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCut: true }),
      captured: keyOf({ onCutCapture: true })
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDoubleClick: true }),
      captured: keyOf({ onDoubleClickCapture: true })
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrag: true }),
      captured: keyOf({ onDragCapture: true })
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnd: true }),
      captured: keyOf({ onDragEndCapture: true })
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnter: true }),
      captured: keyOf({ onDragEnterCapture: true })
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragExit: true }),
      captured: keyOf({ onDragExitCapture: true })
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragLeave: true }),
      captured: keyOf({ onDragLeaveCapture: true })
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragOver: true }),
      captured: keyOf({ onDragOverCapture: true })
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragStart: true }),
      captured: keyOf({ onDragStartCapture: true })
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrop: true }),
      captured: keyOf({ onDropCapture: true })
    }
  },
  durationChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDurationChange: true }),
      captured: keyOf({ onDurationChangeCapture: true })
    }
  },
  emptied: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEmptied: true }),
      captured: keyOf({ onEmptiedCapture: true })
    }
  },
  encrypted: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEncrypted: true }),
      captured: keyOf({ onEncryptedCapture: true })
    }
  },
  ended: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEnded: true }),
      captured: keyOf({ onEndedCapture: true })
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onError: true }),
      captured: keyOf({ onErrorCapture: true })
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onFocus: true }),
      captured: keyOf({ onFocusCapture: true })
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInput: true }),
      captured: keyOf({ onInputCapture: true })
    }
  },
  invalid: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInvalid: true }),
      captured: keyOf({ onInvalidCapture: true })
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyDown: true }),
      captured: keyOf({ onKeyDownCapture: true })
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyPress: true }),
      captured: keyOf({ onKeyPressCapture: true })
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyUp: true }),
      captured: keyOf({ onKeyUpCapture: true })
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoad: true }),
      captured: keyOf({ onLoadCapture: true })
    }
  },
  loadedData: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedData: true }),
      captured: keyOf({ onLoadedDataCapture: true })
    }
  },
  loadedMetadata: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedMetadata: true }),
      captured: keyOf({ onLoadedMetadataCapture: true })
    }
  },
  loadStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadStart: true }),
      captured: keyOf({ onLoadStartCapture: true })
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseDown: true }),
      captured: keyOf({ onMouseDownCapture: true })
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseMove: true }),
      captured: keyOf({ onMouseMoveCapture: true })
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOut: true }),
      captured: keyOf({ onMouseOutCapture: true })
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOver: true }),
      captured: keyOf({ onMouseOverCapture: true })
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseUp: true }),
      captured: keyOf({ onMouseUpCapture: true })
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPaste: true }),
      captured: keyOf({ onPasteCapture: true })
    }
  },
  pause: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPause: true }),
      captured: keyOf({ onPauseCapture: true })
    }
  },
  play: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlay: true }),
      captured: keyOf({ onPlayCapture: true })
    }
  },
  playing: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlaying: true }),
      captured: keyOf({ onPlayingCapture: true })
    }
  },
  progress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onProgress: true }),
      captured: keyOf({ onProgressCapture: true })
    }
  },
  rateChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onRateChange: true }),
      captured: keyOf({ onRateChangeCapture: true })
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onReset: true }),
      captured: keyOf({ onResetCapture: true })
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onScroll: true }),
      captured: keyOf({ onScrollCapture: true })
    }
  },
  seeked: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeked: true }),
      captured: keyOf({ onSeekedCapture: true })
    }
  },
  seeking: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeking: true }),
      captured: keyOf({ onSeekingCapture: true })
    }
  },
  stalled: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onStalled: true }),
      captured: keyOf({ onStalledCapture: true })
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSubmit: true }),
      captured: keyOf({ onSubmitCapture: true })
    }
  },
  suspend: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSuspend: true }),
      captured: keyOf({ onSuspendCapture: true })
    }
  },
  timeUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTimeUpdate: true }),
      captured: keyOf({ onTimeUpdateCapture: true })
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchCancel: true }),
      captured: keyOf({ onTouchCancelCapture: true })
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchEnd: true }),
      captured: keyOf({ onTouchEndCapture: true })
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchMove: true }),
      captured: keyOf({ onTouchMoveCapture: true })
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchStart: true }),
      captured: keyOf({ onTouchStartCapture: true })
    }
  },
  transitionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTransitionEnd: true }),
      captured: keyOf({ onTransitionEndCapture: true })
    }
  },
  volumeChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onVolumeChange: true }),
      captured: keyOf({ onVolumeChangeCapture: true })
    }
  },
  waiting: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWaiting: true }),
      captured: keyOf({ onWaitingCapture: true })
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWheel: true }),
      captured: keyOf({ onWheelCapture: true })
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topAbort: eventTypes.abort,
  topAnimationEnd: eventTypes.animationEnd,
  topAnimationIteration: eventTypes.animationIteration,
  topAnimationStart: eventTypes.animationStart,
  topBlur: eventTypes.blur,
  topCanPlay: eventTypes.canPlay,
  topCanPlayThrough: eventTypes.canPlayThrough,
  topClick: eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy: eventTypes.copy,
  topCut: eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag: eventTypes.drag,
  topDragEnd: eventTypes.dragEnd,
  topDragEnter: eventTypes.dragEnter,
  topDragExit: eventTypes.dragExit,
  topDragLeave: eventTypes.dragLeave,
  topDragOver: eventTypes.dragOver,
  topDragStart: eventTypes.dragStart,
  topDrop: eventTypes.drop,
  topDurationChange: eventTypes.durationChange,
  topEmptied: eventTypes.emptied,
  topEncrypted: eventTypes.encrypted,
  topEnded: eventTypes.ended,
  topError: eventTypes.error,
  topFocus: eventTypes.focus,
  topInput: eventTypes.input,
  topInvalid: eventTypes.invalid,
  topKeyDown: eventTypes.keyDown,
  topKeyPress: eventTypes.keyPress,
  topKeyUp: eventTypes.keyUp,
  topLoad: eventTypes.load,
  topLoadedData: eventTypes.loadedData,
  topLoadedMetadata: eventTypes.loadedMetadata,
  topLoadStart: eventTypes.loadStart,
  topMouseDown: eventTypes.mouseDown,
  topMouseMove: eventTypes.mouseMove,
  topMouseOut: eventTypes.mouseOut,
  topMouseOver: eventTypes.mouseOver,
  topMouseUp: eventTypes.mouseUp,
  topPaste: eventTypes.paste,
  topPause: eventTypes.pause,
  topPlay: eventTypes.play,
  topPlaying: eventTypes.playing,
  topProgress: eventTypes.progress,
  topRateChange: eventTypes.rateChange,
  topReset: eventTypes.reset,
  topScroll: eventTypes.scroll,
  topSeeked: eventTypes.seeked,
  topSeeking: eventTypes.seeking,
  topStalled: eventTypes.stalled,
  topSubmit: eventTypes.submit,
  topSuspend: eventTypes.suspend,
  topTimeUpdate: eventTypes.timeUpdate,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd: eventTypes.touchEnd,
  topTouchMove: eventTypes.touchMove,
  topTouchStart: eventTypes.touchStart,
  topTransitionEnd: eventTypes.transitionEnd,
  topVolumeChange: eventTypes.volumeChange,
  topWaiting: eventTypes.waiting,
  topWheel: eventTypes.wheel
};

for (var type in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[type].dependencies = [type];
}

var ON_CLICK_KEY = keyOf({ onClick: null });
var onClickListeners = {};

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topAbort:
      case topLevelTypes.topCanPlay:
      case topLevelTypes.topCanPlayThrough:
      case topLevelTypes.topDurationChange:
      case topLevelTypes.topEmptied:
      case topLevelTypes.topEncrypted:
      case topLevelTypes.topEnded:
      case topLevelTypes.topError:
      case topLevelTypes.topInput:
      case topLevelTypes.topInvalid:
      case topLevelTypes.topLoad:
      case topLevelTypes.topLoadedData:
      case topLevelTypes.topLoadedMetadata:
      case topLevelTypes.topLoadStart:
      case topLevelTypes.topPause:
      case topLevelTypes.topPlay:
      case topLevelTypes.topPlaying:
      case topLevelTypes.topProgress:
      case topLevelTypes.topRateChange:
      case topLevelTypes.topReset:
      case topLevelTypes.topSeeked:
      case topLevelTypes.topSeeking:
      case topLevelTypes.topStalled:
      case topLevelTypes.topSubmit:
      case topLevelTypes.topSuspend:
      case topLevelTypes.topTimeUpdate:
      case topLevelTypes.topVolumeChange:
      case topLevelTypes.topWaiting:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topAnimationEnd:
      case topLevelTypes.topAnimationIteration:
      case topLevelTypes.topAnimationStart:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case topLevelTypes.topTransitionEnd:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    if (registrationName === ON_CLICK_KEY) {
      var id = inst._rootNodeID;
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[id]) {
        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === ON_CLICK_KEY) {
      var id = inst._rootNodeID;
      onClickListeners[id].remove();
      delete onClickListeners[id];
    }
  }

};

module.exports = SimpleEventPlugin;
}).call(this,require('_process'))
},{"./EventConstants":20,"./EventPropagators":24,"./ReactDOMComponentTree":43,"./SyntheticAnimationEvent":97,"./SyntheticClipboardEvent":98,"./SyntheticDragEvent":100,"./SyntheticEvent":101,"./SyntheticFocusEvent":102,"./SyntheticKeyboardEvent":104,"./SyntheticMouseEvent":105,"./SyntheticTouchEvent":106,"./SyntheticTransitionEvent":107,"./SyntheticUIEvent":108,"./SyntheticWheelEvent":109,"./getEventCharCode":121,"_process":4,"fbjs/lib/EventListener":141,"fbjs/lib/emptyFunction":148,"fbjs/lib/invariant":156,"fbjs/lib/keyOf":160}],97:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticAnimationEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;
},{"./SyntheticEvent":101}],98:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;
},{"./SyntheticEvent":101}],99:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;
},{"./SyntheticEvent":101}],100:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;
},{"./SyntheticMouseEvent":105}],101:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 */

'use strict';

var _assign = require('object-assign');

var PooledClass = require('./PooledClass');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else {
      event.cancelBubble = true;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      var noop = require('fbjs/lib/emptyFunction');
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', noop));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', noop));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
}).call(this,require('_process'))
},{"./PooledClass":28,"_process":4,"fbjs/lib/emptyFunction":148,"fbjs/lib/warning":166,"object-assign":167}],102:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;
},{"./SyntheticUIEvent":108}],103:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;
},{"./SyntheticEvent":101}],104:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventCharCode = require('./getEventCharCode');
var getEventKey = require('./getEventKey');
var getEventModifierState = require('./getEventModifierState');

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;
},{"./SyntheticUIEvent":108,"./getEventCharCode":121,"./getEventKey":122,"./getEventModifierState":123}],105:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');
var ViewportMetrics = require('./ViewportMetrics');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;
},{"./SyntheticUIEvent":108,"./ViewportMetrics":111,"./getEventModifierState":123}],106:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 */

'use strict';

var SyntheticUIEvent = require('./SyntheticUIEvent');

var getEventModifierState = require('./getEventModifierState');

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;
},{"./SyntheticUIEvent":108,"./getEventModifierState":123}],107:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTransitionEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;
},{"./SyntheticEvent":101}],108:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 */

'use strict';

var SyntheticEvent = require('./SyntheticEvent');

var getEventTarget = require('./getEventTarget');

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target != null && target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;
},{"./SyntheticEvent":101,"./getEventTarget":124}],109:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 */

'use strict';

var SyntheticMouseEvent = require('./SyntheticMouseEvent');

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;
},{"./SyntheticMouseEvent":105}],110:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occurred.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],111:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;
},{}],112:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 */

'use strict';

var invariant = require('fbjs/lib/invariant');

/**
 *
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : void 0;
  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  var currentIsArray = Array.isArray(current);
  var nextIsArray = Array.isArray(next);

  if (currentIsArray && nextIsArray) {
    current.push.apply(current, next);
    return current;
  }

  if (currentIsArray) {
    current.push(next);
    return current;
  }

  if (nextIsArray) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/invariant":156}],113:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;
},{}],114:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule canDefineProperty
 */

'use strict';

var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
}).call(this,require('_process'))
},{"_process":4}],115:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createMicrosoftUnsafeLocalFunction
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;
},{}],116:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 */

'use strict';

var CSSProperty = require('./CSSProperty');
var warning = require('fbjs/lib/warning');

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      if (component) {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
}).call(this,require('_process'))
},{"./CSSProperty":8,"_process":4,"fbjs/lib/warning":166}],117:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule escapeTextContentForBrowser
 */

'use strict';

var ESCAPE_LOOKUP = {
  '&': '&amp;',
  '>': '&gt;',
  '<': '&lt;',
  '"': '&quot;',
  '\'': '&#x27;'
};

var ESCAPE_REGEX = /[&><"']/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextContentForBrowser;
},{}],118:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule findDOMNode
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactDOMComponentTree = require('./ReactDOMComponentTree');
var ReactInstanceMap = require('./ReactInstanceMap');

var getNativeComponentFromComposite = require('./getNativeComponentFromComposite');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

/**
 * Returns the DOM node rendered by this element.
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getNativeComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : void 0;
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : void 0;
  }
}

module.exports = findDOMNode;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":38,"./ReactDOMComponentTree":43,"./ReactInstanceMap":73,"./getNativeComponentFromComposite":126,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],119:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 */

'use strict';

var traverseAllChildren = require('./traverseAllChildren');
var warning = require('fbjs/lib/warning');

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  var keyUnique = result[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : void 0;
  }
  if (keyUnique && child != null) {
    result[name] = child;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;
}).call(this,require('_process'))
},{"./traverseAllChildren":139,"_process":4,"fbjs/lib/warning":166}],120:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

var forEachAccumulated = function (arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;
},{}],121:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;
},{}],122:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 */

'use strict';

var getEventCharCode = require('./getEventCharCode');

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;
},{"./getEventCharCode":121}],123:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;
},{}],124:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;
},{}],125:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getIteratorFn
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;
},{}],126:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNativeComponentFromComposite
 */

'use strict';

var ReactNodeTypes = require('./ReactNodeTypes');

function getNativeComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.NATIVE) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getNativeComponentFromComposite;
},{"./ReactNodeTypes":81}],127:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;
},{}],128:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;
},{"fbjs/lib/ExecutionEnvironment":142}],129:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getVendorPrefixedEventName
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;
},{"fbjs/lib/ExecutionEnvironment":142}],130:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 */

'use strict';

var _assign = require('object-assign');

var ReactCompositeComponent = require('./ReactCompositeComponent');
var ReactEmptyComponent = require('./ReactEmptyComponent');
var ReactNativeComponent = require('./ReactNativeComponent');

var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : void 0;

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactNativeComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactNativeComponent.createInstanceForText(node);
  } else {
    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getNativeNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._isOwnerNecessary = false;
    instance._warnedAboutRefsInRender = false;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
}).call(this,require('_process'))
},{"./ReactCompositeComponent":37,"./ReactEmptyComponent":66,"./ReactNativeComponent":80,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166,"object-assign":167}],131:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;
},{"fbjs/lib/ExecutionEnvironment":142}],132:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
}

module.exports = isTextInputElement;
},{}],133:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
'use strict';

var ReactElement = require('./ReactElement');

var invariant = require('fbjs/lib/invariant');

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : void 0;
  return children;
}

module.exports = onlyChild;
}).call(this,require('_process'))
},{"./ReactElement":64,"_process":4,"fbjs/lib/invariant":156}],134:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule quoteAttributeValueForBrowser
 */

'use strict';

var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;
},{"./escapeTextContentForBrowser":117}],135:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule renderSubtreeIntoContainer
*/

'use strict';

var ReactMount = require('./ReactMount');

module.exports = ReactMount.renderSubtreeIntoContainer;
},{"./ReactMount":77}],136:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  node.innerHTML = html;
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;
},{"./createMicrosoftUnsafeLocalFunction":115,"fbjs/lib/ExecutionEnvironment":142}],137:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setTextContent
 */

'use strict';

var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
var escapeTextContentForBrowser = require('./escapeTextContentForBrowser');
var setInnerHTML = require('./setInnerHTML');

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;
},{"./escapeTextContentForBrowser":117,"./setInnerHTML":136,"fbjs/lib/ExecutionEnvironment":142}],138:[function(require,module,exports){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;
},{}],139:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

'use strict';

var ReactCurrentOwner = require('./ReactCurrentOwner');
var ReactElement = require('./ReactElement');

var getIteratorFn = require('./getIteratorFn');
var invariant = require('fbjs/lib/invariant');
var warning = require('fbjs/lib/warning');

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=:]/g;

var didWarnAboutMaps = false;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} text Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
}).call(this,require('_process'))
},{"./ReactCurrentOwner":38,"./ReactElement":64,"./getIteratorFn":125,"_process":4,"fbjs/lib/invariant":156,"fbjs/lib/warning":166}],140:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule validateDOMNesting
 */

'use strict';

var _assign = require('object-assign');

var emptyFunction = require('fbjs/lib/emptyFunction');
var warning = require('fbjs/lib/warning');

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      if (childTag !== '#text') {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
}).call(this,require('_process'))
},{"_process":4,"fbjs/lib/emptyFunction":148,"fbjs/lib/warning":166,"object-assign":167}],141:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = require('./emptyFunction');

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function (target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function () {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function () {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function (target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function () {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function () {}
};

module.exports = EventListener;
}).call(this,require('_process'))
},{"./emptyFunction":148,"_process":4}],142:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;
},{}],143:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;
},{}],144:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = require('./camelize');

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;
},{"./camelize":143}],145:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isTextNode = require('./isTextNode');

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;
},{"./isTextNode":158}],146:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = require('./invariant');

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return(
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
}).call(this,require('_process'))
},{"./invariant":156,"_process":4}],147:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = require('./ExecutionEnvironment');

var createArrayFromMixed = require('./createArrayFromMixed');
var getMarkupWrap = require('./getMarkupWrap');
var invariant = require('./invariant');

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
}).call(this,require('_process'))
},{"./ExecutionEnvironment":142,"./createArrayFromMixed":146,"./getMarkupWrap":152,"./invariant":156,"_process":4}],148:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;
},{}],149:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
}).call(this,require('_process'))
},{"_process":4}],150:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;
},{}],151:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 */
function getActiveElement() /*?DOMElement*/{
  if (typeof document === 'undefined') {
    return null;
  }
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;
},{}],152:[function(require,module,exports){
(function (process){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = require('./ExecutionEnvironment');

var invariant = require('./invariant');

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
}).call(this,require('_process'))
},{"./ExecutionEnvironment":142,"./invariant":156,"_process":4}],153:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;
},{}],154:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;
},{}],155:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = require('./hyphenate');

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;
},{"./hyphenate":154}],156:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

function invariant(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
}).call(this,require('_process'))
},{"_process":4}],157:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;
},{}],158:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = require('./isNode');

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;
},{"./isNode":157}],159:[function(require,module,exports){
(function (process){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 */

'use strict';

var invariant = require('./invariant');

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function (obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;
}).call(this,require('_process'))
},{"./invariant":156,"_process":4}],160:[function(require,module,exports){
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without losing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function (oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;
},{}],161:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;
},{}],162:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;
},{}],163:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var ExecutionEnvironment = require('./ExecutionEnvironment');

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};
},{"./ExecutionEnvironment":142}],164:[function(require,module,exports){
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = require('./performance');

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function () {
    return performance.now();
  };
} else {
  performanceNow = function () {
    return Date.now();
  };
}

module.exports = performanceNow;
},{"./performance":163}],165:[function(require,module,exports){
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;
},{}],166:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = require('./emptyFunction');

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  warning = function (condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    }
  };
}

module.exports = warning;
}).call(this,require('_process'))
},{"./emptyFunction":148,"_process":4}],167:[function(require,module,exports){
/* eslint-disable no-unused-vars */
'use strict';
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

module.exports = Object.assign || function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (Object.getOwnPropertySymbols) {
			symbols = Object.getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};

},{}],168:[function(require,module,exports){
'use strict';

module.exports = require('./lib/React');

},{"./lib/React":29}],169:[function(require,module,exports){
'use strict';

function b64ToUint6 (nChr) {
  return nChr > 64 && nChr < 91 ?
      nChr - 65
    : nChr > 96 && nChr < 123 ?
      nChr - 71
    : nChr > 47 && nChr < 58 ?
      nChr + 4
    : nChr === 43 ?
      62
    : nChr === 47 ?
      63
    :
      0;

}

// Decode Base64 to Uint8Array
// ---------------------------
function base64DecodeToArray(sBase64, nBlocksSize) {
  var sB64Enc = sBase64.replace(/[^A-Za-z0-9\+\/]/g, "");
  var nInLen = sB64Enc.length;
  var nOutLen = nBlocksSize ?
    Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize :
    nInLen * 3 + 1 >> 2;
  var taBytes = new Uint8Array(nOutLen);

  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {
    nMod4 = nInIdx & 3;
    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;
    if (nMod4 === 3 || nInLen - nInIdx === 1) {
      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {
        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;
      }
      nUint24 = 0;
    }
  }
  return taBytes;
}

module.exports = base64DecodeToArray;

},{}],170:[function(require,module,exports){
'use strict'

var midi = require('note-midi')

/**
 * Create a soundfont buffers player
 *
 * @param {AudioContext} ac - the audio context
 * @param {Hash} buffers - a midi number to audio buffer hash map
 * @param {Hash} options - (Optional) a hash of options:
 * - gain: the output gain (default: 2)
 * - destination: the destination of the player (default: `ac.destination`)
 */
module.exports = function (ctx, buffers, options) {
  options = options || {}
  var gain = options.gain || 2
  var destination = options.destination || ctx.destination

  return function (note, time, duration) {
    var m = note > 0 && note < 128 ? note : midi(note)
    var buffer = buffers[m]
    if (!buffer) return
    var source = ctx.createBufferSource()
    source.buffer = buffer

    /* VCA */
    var vca = ctx.createGain()
    vca.gain.value = gain
    source.connect(vca)
    vca.connect(destination)

    source.start(time)
    if (duration > 0) source.stop(time + duration)
    return source
  }
}

},{"note-midi":176}],171:[function(require,module,exports){
'use strict'

var base64DecodeToArray = require('./b64decode.js')

/**
 * Given a base64 encoded audio data, return a prmomise with an audio buffer
 *
 * @param {AudioContext} context - the [audio context](https://developer.mozilla.org/en/docs/Web/API/AudioContext)
 * @param {String} data - the base64 encoded audio data
 * @return {Promise} a promise that resolves to an [audio buffer](https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer)
 * @api private
 */
module.exports = function (context, data) {
  return new Promise(function (done, reject) {
    var decodedData = base64DecodeToArray(data.split(',')[1]).buffer
    context.decodeAudioData(decodedData, function (buffer) {
      done(buffer)
    }, function (e) {
      reject('DecodeAudioData error', e)
    })
  })
}

},{"./b64decode.js":169}],172:[function(require,module,exports){
'use strict'

var loadBank = require('./load-bank')
var oscillatorPlayer = require('./oscillator-player')
var buffersPlayer = require('./buffers-player')

/**
 * Create a Soundfont object
 *
 * @param {AudioContext} context - the [audio context](https://developer.mozilla.org/en/docs/Web/API/AudioContext)
 * @return {Soundfont} a soundfont object
 */
function Soundfont (ctx, nameToUrl) {
  if (!(this instanceof Soundfont)) return new Soundfont(ctx)

  this.nameToUrl = nameToUrl || Soundfont.nameToUrl || gleitzUrl
  this.ctx = ctx
  this.instruments = {}
  this.promises = []
}

Soundfont.prototype.instrument = function (name, options) {
  var ctx = this.ctx
  name = name || 'default'
  if (name in this.instruments) return this.instruments[name]
  var inst = { name: name, play: oscillatorPlayer(ctx, options) }
  this.instruments[name] = inst
  var promise = loadBank(ctx, this.nameToUrl(name)).then(function (buffers) {
    inst.play = buffersPlayer(ctx, buffers, options)
    return inst
  })
  this.promises.push(promise)
  inst.onready = function (cb) { promise.then(cb) }
  return inst
}

Soundfont.loadBuffers = function (ctx, name) {
  var nameToUrl = Soundfont.nameToUrl || gleitzUrl
  return loadBank(ctx, nameToUrl(name))
}

/*
 * Given an instrument name returns a URL to to the Benjamin Gleitzman's
 * package of [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)
 *
 * @param {String} name - instrument name
 * @returns {String} the Soundfont file url
 */
function gleitzUrl (name) {
  return 'https://cdn.rawgit.com/gleitz/midi-js-Soundfonts/master/FluidR3_GM/' + name + '-ogg.js'
}

if (typeof module === 'object' && module.exports) module.exports = Soundfont
if (typeof window !== 'undefined') window.Soundfont = Soundfont

},{"./buffers-player":170,"./load-bank":173,"./oscillator-player":174}],173:[function(require,module,exports){
'use strict'

var midi = require('note-midi')
var decodeBuffer = require('./decode-buffer')

/**
 * Load a soundfont bank
 *
 * @param {AudioContext} ctx - the audio context object
 * @param {String} url - the url of the js file
 * @param {Function} get - (Optional) given a url return a promise with the contents
 * @param {Function} parse - (Optinal) given a js file return JSON object
 */
module.exports = function (ctx, url, get, parse) {
  get = get || getContent
  parse = parse || parseJavascript
  return Promise.resolve(url).then(get).then(parse)
    .then(function (data) {
      return { ctx: ctx, data: data, buffers: {} }
    })
    .then(decodeBank)
    .then(function (bank) { return bank.buffers })
}

function getContent (url) {
  return new Promise(function (done, reject) {
    var req = new window.XMLHttpRequest()
    req.open('GET', url)

    req.onload = function () {
      if (req.status === 200) {
        done(req.response)
      } else {
        reject(Error(req.statusText))
      }
    }
    req.onerror = function () {
      reject(Error('Network Error'))
    }
    req.send()
  })
}

/**
 *  Parse the SoundFont data and return a JSON object
 *  (SoundFont data are .js files wrapping json data)
 *
 * @param {String} data - the SoundFont js file content
 * @return {JSON} the parsed data as JSON object
 * @api private
 */
function parseJavascript (data) {
  var begin = data.indexOf('MIDI.Soundfont.')
  begin = data.indexOf('=', begin) + 2
  var end = data.lastIndexOf(',')
  return JSON.parse(data.slice(begin, end) + '}')
}

/*
 * Decode a bank
 * @param {Object} bank - the bank object
 * @return {Promise} a promise that resolves to the bank with the buffers decoded
 * @api private
 */
function decodeBank (bank) {
  var promises = Object.keys(bank.data).map(function (note) {
    return decodeBuffer(bank.ctx, bank.data[note])
    .then(function (buffer) {
      bank.buffers[midi(note)] = buffer
    })
  })

  return Promise.all(promises).then(function () {
    return bank
  })
}

},{"./decode-buffer":171,"note-midi":176}],174:[function(require,module,exports){
'use strict'

var freq = require('midi-freq')(440)
var midi = require('note-midi')

/**
 * Returns a function that plays an oscillator
 *
 * @param {AudioContext} ac - the audio context
 * @param {Hash} options - (Optional) a hash of options:
 * - vcoType: the oscillator type (default: 'sine')
 * - gain: the output gain value (default: 0.2)
 * - destination: the player destination (default: ac.destination)
 */
module.exports = function (ctx, options) {
  options = options || {}
  var destination = options.destination || ctx.destination
  var vcoType = options.vcoType || 'sine'
  var gain = options.gain || 0.2

  return function (note, time, duration) {
    var f = freq(midi(note))
    if (!f) return

    duration = duration || 0.2

    var vco = ctx.createOscillator()
    vco.type = vcoType
    vco.frequency.value = f

    /* VCA */
    var vca = ctx.createGain()
    vca.gain.value = gain

    /* Connections */
    vco.connect(vca)
    vca.connect(destination)

    vco.start(time)
    if (duration > 0) vco.stop(time + duration)
    return vco
  }
}

},{"midi-freq":175,"note-midi":176}],175:[function(require,module,exports){
/**
 * Get the pitch frequency in herzs (with custom concert tuning) from a midi number
 *
 * This function is currified so it can be partially applied (see examples)
 *
 * @name midi.freq
 * @function
 * @param {Float} tuning - the frequency of A4 (null means 440)
 * @param {Integer} midi - the midi number
 * @return {Float} the frequency of the note
 *
 * @example
 * var freq = require('midi-freq')
 * // 69 midi is A4
 * freq(null, 69) // => 440
 * freq(444, 69) // => 444
 *
 * @example
 * // partially applied
 * var freq = require('midi-freq')(440)
 * freq(69) // => 440
 */
module.exports = function freq (tuning, midi) {
  tuning = tuning || 440
  if (arguments.length > 1) return freq(tuning)(midi)

  return function (m) {
    return m > 0 && m < 128 ? Math.pow(2, (m - 69) / 12) * tuning : null
  }
}

},{}],176:[function(require,module,exports){
'use strict'

var parse = require('music-notation/note/parse')

/**
 * Get the midi number of a note
 *
 * If the argument passed to this function is a valid midi number, it returns it
 *
 * The note can be an string in scientific notation or
 * [array pitch notation](https://github.com/danigb/music.array.notation)
 *
 * @name midi
 * @function
 * @param {String|Array|Integer} note - the note in string or array notation.
 * If the parameter is a valid midi number it return it as it.
 * @return {Integer} the midi number
 *
 * @example
 * var midi = require('note-midi')
 * midi('A4') // => 69
 * midi('a3') // => 57
 * midi([0, 2]) // => 36 (C2 in array notation)
 * midi(60) // => 60
 * midi('C') // => null (pitch classes don't have midi number)
 */
function midi (note) {
  if ((typeof note === 'number' || typeof note === 'string') &&
    note > 0 && note < 128) return +note
  var p = Array.isArray(note) ? note : parse(note)
  if (!p || p.length < 2) return null
  return p[0] * 7 + p[1] * 12 + 12
}

if (typeof module === 'object' && module.exports) module.exports = midi
if (typeof window !== 'undefined') window.midi = midi

},{"music-notation/note/parse":178}],177:[function(require,module,exports){
'use strict'

/**
 * A simple and fast memoization function
 *
 * It helps creating functions that convert from string to pitch in array format.
 * Basically it does two things:
 * - ensure the function only receives strings
 * - memoize the result
 *
 * @name memoize
 * @function
 * @private
 */
module.exports = function (fn) {
  var cache = {}
  return function (str) {
    if (typeof str !== 'string') return null
    return (str in cache) ? cache[str] : cache[str] = fn(str)
  }
}

},{}],178:[function(require,module,exports){
'use strict'

var memoize = require('../memoize')
var R = require('./regex')
var BASES = { C: [0, 0], D: [2, -1], E: [4, -2], F: [-1, 1], G: [1, 0], A: [3, -1], B: [5, -2] }

/**
 * Get a pitch in [array notation]()
 * from a string in [scientific pitch notation](https://en.wikipedia.org/wiki/Scientific_pitch_notation)
 *
 * The string to parse must be in the form of: `letter[accidentals][octave]`
 * The accidentals can be up to four # (sharp) or b (flat) or two x (double sharps)
 *
 * This function is cached for better performance.
 *
 * @name note.parse
 * @function
 * @param {String} str - the string to parse
 * @return {Array} the note in array notation or null if not valid note
 *
 * @example
 * var parse = require('music-notation/note/parse')
 * parse('C') // => [ 0 ]
 * parse('c#') // => [ 8 ]
 * parse('c##') // => [ 16 ]
 * parse('Cx') // => [ 16 ] (double sharp)
 * parse('Cb') // => [ -6 ]
 * parse('db') // => [ -4 ]
 * parse('G4') // => [ 2, 3, null ]
 * parse('c#3') // => [ 8, -1, null ]
 */
module.exports = memoize(function (str) {
  var m = R.exec(str)
  if (!m || m[5]) return null

  var base = BASES[m[1].toUpperCase()]
  var alt = m[2].replace(/x/g, '##').length
  if (m[2][0] === 'b') alt *= -1
  var fifths = base[0] + 7 * alt
  if (!m[3]) return [fifths]
  var oct = +m[3] + base[1] - 4 * alt
  var dur = m[4] ? +(m[4].substring(1)) : null
  return [fifths, oct, dur]
})

},{"../memoize":177,"./regex":179}],179:[function(require,module,exports){
'use strict'

/**
 * A regex for matching note strings in scientific notation.
 *
 * The note string should have the form `letter[accidentals][octave][/duration]`
 * where:
 *
 * - letter: (Required) is a letter from A to G either upper or lower case
 * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).
 * They can NOT be mixed.
 * - octave: (Optional) a positive or negative integer
 * - duration: (Optional) anything follows a slash `/` is considered to be the duration
 * - element: (Optional) additionally anything after the duration is considered to
 * be the element name (for example: 'C2 dorian')
 *
 * @name note.regex
 * @example
 * var R = require('music-notation/note/regex')
 * R.exec('c#4') // => ['c#4', 'c', '#', '4', '', '']
 */
module.exports = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\d*)(\/\d+|)\s*(.*)\s*$/

},{}],180:[function(require,module,exports){
module.exports=`1451406086654,0.0185546875
1451406088630,0.021484375
1451406090186,0.017578125
1451406091414,0.017578125
1451406093308,0.01953125
1451406094262,0.01953125
1451406095638,0.017578125
1451406096873,0.021484375
1451406098105,0.017578125
1451406103302,0.0205078125
1451406104125,0.01953125
1451406105432,0.021484375
1451406107076,0.0205078125
1451406108766,0.0205078125
1451406110047,0.021484375
1451406111273,0.017578125
1451406113303,0.0205078125
1451406114643,0.01953125
1451406117206,0.0224609375
1451406118980,0.0185546875
1451406121276,0.0205078125
1451406123313,0.01953125
1451406124355,0.017578125
1451406125855,0.0205078125
1451406127869,0.01953125
1451406129553,0.0205078125
1451406131136,0.01953125
1451406133306,0.017578125
1451406134776,0.01953125
1451406136778,0.0185546875
1451406138113,0.021484375
1451406141419,0.01953125
1451406144766,0.01953125
1451406147410,0.017578125
1451406148748,0.0185546875
1451406150891,0.017578125
1451406154895,0.0205078125
1451406157510,0.017578125
1451406163310,0.01953125
1451406164249,0.0205078125
1451406165855,0.01953125
1451406168028,0.017578125
1451406169963,0.0224609375
1451406173317,0.01953125
1451406174928,0.0185546875
1451406176788,0.01953125
1451406178009,0.017578125
1451406179323,0.017578125
1451406181165,0.0205078125
1451406183319,0.017578125
1451406184232,0.0224609375
1451406185592,0.01953125
1451406187982,0.021484375
1451406191679,0.0185546875
1451406193757,0.0185546875
1451406195175,0.017578125
1451406197013,0.0205078125
1451406198736,0.01953125
1451406200782,0.01953125
1451406203314,0.017578125
1451406204489,0.01953125
1451406206889,0.0205078125
1451406208936,0.0185546875
1451406210463,0.0205078125
1451406213322,0.017578125
1451406214090,0.017578125
1451406216180,0.0205078125
1451406217398,0.017578125
1451406218623,0.0185546875
1451406219941,0.0205078125
1451406223319,0.01953125
1451406224479,0.0185546875
1451406225780,0.0205078125
1451406227172,0.017578125
1451406228658,0.01953125
1451406230372,0.0185546875
1451406233319,0.017578125
1451406233959,0.01953125
1451406235635,0.0185546875
1451406237039,0.017578125
1451406238623,0.017578125
1451406239944,0.017578125
1451406243835,0.0205078125
1451406245200,0.0185546875
1451406248987,0.0185546875
1451406251584,0.017578125
1451406253394,0.0185546875
1451406256042,0.0185546875
1451406258144,0.017578125
1451406260021,0.01953125
1451406261693,0.0205078125
1451406263324,0.0224609375
1451406265075,0.0185546875
1451406267064,0.017578125
1451406269052,0.017578125
1451406271756,0.0185546875
1451406273329,0.0185546875
1451406276150,0.0185546875
1451406278900,0.017578125
1451406280704,0.021484375
1451406282212,0.017578125
1451406283664,0.021484375
1451406285148,0.021484375
1451406286675,0.0205078125
1451406289489,0.0205078125
1451406293327,0.0205078125
1451406293794,0.0224609375
1451406295368,0.0185546875
1451406298230,0.0224609375
1451406299881,0.01953125
1451406301627,0.0205078125
1451406306802,0.017578125
1451406308432,0.0185546875
1451406311562,0.0224609375
1451406313328,0.01953125
1451406314223,0.01953125
1451406315737,0.0205078125
1451406316963,0.017578125
1451406318341,0.017578125
1451406323330,0.0205078125
1451406324320,0.0185546875
1451406328360,0.0185546875
1451406330704,0.017578125
1451406333337,0.017578125
1451406333453,0.0224609375
1451406334850,0.0224609375
1451406336072,0.017578125
1451406337704,0.021484375
1451406338936,0.017578125
1451406343334,0.021484375
1451406345956,0.01953125
1451406347684,0.01953125
1451406351578,0.01953125
1451406353338,0.0224609375
1451406355108,0.0185546875
1451406356341,0.017578125
1451406357905,0.017578125
1451406359325,0.021484375
1451406360753,0.0224609375
1451406363438,0.01953125
1451406365335,0.0224609375
1451406367424,0.01953125
1451406371159,0.017578125
1451406373339,0.0224609375
1451406374047,0.017578125
1451406375374,0.0205078125
1451406376890,0.0205078125
1451406379042,0.01953125
1451406381883,0.0185546875
1451406383339,0.0224609375
1451406385905,0.017578125
1451406388027,0.0205078125
1451406389255,0.0205078125
1451406393342,0.017578125
1451406394650,0.0205078125
1451406396325,0.021484375
1451406398809,0.01953125
1451406400815,0.0205078125
1451406403340,0.01953125
1451406404366,0.021484375
1451406406496,0.01953125
1451406408504,0.0185546875
1451406409929,0.0205078125
1451406411355,0.01953125
1451406413343,0.0205078125
1451406415263,0.0205078125
1451406417175,0.01953125
1451406420366,0.017578125
1451406423355,0.01953125
1451406423839,0.0185546875
1451406425853,0.0205078125
1451406427469,0.021484375
1451406430166,0.017578125
1451406431396,0.0205078125
1451406435722,0.021484375
1451406437625,0.01953125
1451406439633,0.021484375
1451406440959,0.0205078125
1451406444007,0.017578125
1451406448184,0.017578125
1451406453549,0.017578125
1451406454951,0.01953125
1451406457545,0.017578125
1451406460624,0.01953125
1451406461852,0.017578125
1451406463502,0.0224609375
1451406465733,0.017578125
1451406467515,0.0185546875
1451406471814,0.021484375
1451406475764,0.0205078125
1451406477425,0.0205078125
1451406480337,0.0205078125
1451406482215,0.0185546875
1451406483907,0.017578125
1451406485195,0.01953125
1451406486545,0.021484375
1451406488024,0.0205078125
1451406489858,0.0185546875
1451406493727,0.0205078125
1451406497189,0.0205078125
1451406498704,0.0185546875
1451406500294,0.0205078125
1451406502092,0.0205078125
1451406503905,0.01953125
1451406505975,0.0205078125
1451406507205,0.021484375
1451406509111,0.017578125
1451406511685,0.017578125
1451406513992,0.0224609375
1451406516164,0.01953125
1451406517680,0.021484375
1451406519425,0.01953125
1451406524269,0.01953125
1451406526292,0.0224609375
1451406527920,0.0224609375
1451406531761,0.0224609375
1451406533361,0.0185546875
1451406534949,0.0205078125
1451406536549,0.01953125
1451406538471,0.01953125
1451406540822,0.0205078125
1451406543362,0.021484375
1451406545506,0.017578125
1451406548411,0.0185546875
1451406549637,0.017578125
1451406551760,0.01953125
1451406553706,0.0205078125
1451406556458,0.017578125
1451406558382,0.0205078125
1451406560027,0.0224609375
1451406564073,0.021484375
1451406565559,0.01953125
1451406567284,0.021484375
1451406569070,0.017578125
1451406571064,0.017578125
1451406573363,0.0185546875
1451406574031,0.017578125
1451406575313,0.0224609375
1451406576543,0.017578125
1451406580295,0.01953125
1451406581788,0.01953125
1451406583804,0.021484375
1451406585044,0.01953125
1451406586735,0.01953125
1451406588549,0.0205078125
1451406590315,0.01953125
1451406593579,0.01953125
1451406595648,0.0205078125
1451406597616,0.017578125
1451406598918,0.01953125
1451406600827,0.0205078125
1451406602171,0.01953125
1451406609464,0.0185546875
1451406610692,0.017578125
1451406612240,0.021484375
1451406613717,0.01953125
1451406619923,0.0185546875
1451406622184,0.01953125
1451406624000,0.0224609375
1451406625233,0.017578125
1451406627102,0.0205078125
1451406635982,0.017578125
1451406637360,0.0205078125
1451406638858,0.01953125
1451406641200,0.01953125
1451406646173,0.0205078125
1451406647591,0.021484375
1451406651112,0.017578125
1451406653376,0.0205078125
1451406654651,0.0224609375
1451406656677,0.017578125
1451406658359,0.021484375
1451406660507,0.01953125
1451406663378,0.021484375
1451406663858,0.021484375
1451406665086,0.017578125
1451406770338,0.0185546875
1451406772192,0.0205078125
1451406774074,0.0224609375
1451406776913,0.0205078125
1451406778729,0.01953125
1451406780629,0.01953125
1451406782066,0.021484375
1451406783746,0.0205078125
1451406785996,0.021484375
1451406788120,0.01953125
1451406789346,0.017578125
1451406790897,0.0205078125
1451406792369,0.0224609375
1451406794187,0.01953125
1451406795997,0.0224609375
1451406797966,0.0205078125
1451406800822,0.0205078125
1451406802160,0.0205078125
1451406804061,0.021484375
1451406806017,0.0185546875
1451406807071,0.01953125
1451406810948,0.021484375
1451406812674,0.017578125
1451406814374,0.0185546875
1451406816100,0.017578125
1451406818173,0.0205078125
1451406820917,0.017578125
1451406822237,0.017578125
1451406823715,0.01953125
1451406826002,0.0185546875
1451406827350,0.0205078125
1451406829818,0.0205078125
1451406831921,0.017578125
1451406834529,0.01953125
1451406836019,0.017578125
1451406837203,0.0185546875
1451406844352,0.0185546875
1451406846301,0.0185546875
1451406847673,0.017578125
1451406849679,0.0205078125
1451406852484,0.017578125
1451406853946,0.017578125
1451406857127,0.021484375
1451406859046,0.0185546875
1451406860583,0.01953125
1451406866024,0.01953125
1451406868234,0.021484375
1451406870116,0.0224609375
1451406871550,0.021484375
1451406872815,0.0205078125
1451406874147,0.0205078125
1451406876215,0.017578125
1451406877888,0.017578125
1451406881346,0.0185546875
1451406883692,0.0185546875
1451406886008,0.01953125
1451406886931,0.0224609375
1451406888869,0.0205078125
1451406891326,0.017578125
1451406896036,0.021484375
1451406898818,0.021484375
1451406900471,0.0205078125
1451406901775,0.0185546875
1451406903444,0.0205078125
1451406906012,0.0224609375
1451406907054,0.021484375
1451406908334,0.0185546875
1451406910320,0.0224609375
1451406911548,0.017578125
1451406917471,0.01953125
1451406919608,0.0205078125
1451406920877,0.017578125
1451406924436,0.0205078125
1451406927366,0.0205078125
1451406928817,0.01953125
1451406930167,0.021484375
1451406933146,0.01953125
1451406934382,0.0185546875
1451406936016,0.0205078125
1451406939052,0.017578125
1451406940685,0.017578125
1451406942523,0.01953125
1451406944019,0.01953125
1451406946645,0.017578125
1451406949306,0.017578125
1451406954062,0.0185546875
1451406956037,0.01953125
1451406957367,0.01953125
1451406958826,0.0185546875
1451406960566,0.0185546875
1451406962640,0.0185546875
1451406964616,0.0205078125
1451406966486,0.0185546875
1451406969117,0.017578125
1451406970467,0.0205078125
1451406971813,0.0205078125
1451406973519,0.01953125
1451406976564,0.0224609375
1451406978394,0.017578125
1451406980230,0.021484375
1451406981703,0.021484375
1451406983415,0.021484375
1451406984657,0.0185546875
1451406988382,0.01953125
1451406990432,0.0205078125
1451406992174,0.021484375
1451406993556,0.0205078125
1451406996026,0.0224609375
1451406998237,0.0205078125
1451406999925,0.0185546875
1451407001863,0.0185546875
1451407003722,0.0224609375
1451407006442,0.01953125
1451407008354,0.01953125
1451407010197,0.017578125
1451407012706,0.017578125
1451407016041,0.01953125
1451407016326,0.021484375
1451407017734,0.0185546875
1451407020368,0.0205078125
1451407021594,0.017578125
1451407024017,0.0205078125
1451407027061,0.0185546875
1451407029129,0.0185546875
1451407030844,0.0224609375
1451407032074,0.017578125
1451407034168,0.0224609375
1451407036037,0.0224609375
1451407037836,0.01953125
1451407039576,0.01953125
1451407041324,0.017578125
1451407042728,0.01953125
1451407046048,0.01953125
1451407047866,0.0185546875
1451407049576,0.0224609375
1451407050807,0.017578125
1451407052516,0.021484375
1451407056031,0.017578125
1451407058074,0.01953125
1451407059902,0.0205078125
1451407061778,0.01953125
1451407064104,0.0224609375
1451407066033,0.0205078125
1451407067161,0.01953125
1451407068781,0.01953125
1451407070647,0.0185546875
1451407073122,0.017578125
1451407074356,0.01953125
1451407076046,0.0185546875
1451407077377,0.0185546875
1451407078957,0.0224609375
1451407080741,0.0205078125
1451407084496,0.01953125
1451407086036,0.017578125
1451407087552,0.0205078125
1451407089152,0.021484375
1451407090630,0.0205078125
1451407094493,0.01953125
1451407096035,0.0185546875
1451407097117,0.021484375
1451407098349,0.017578125
1451407100904,0.0185546875
1451407102736,0.017578125
1451407104546,0.0205078125
1451407106257,0.01953125
1451407108453,0.01953125
1451407109683,0.0185546875
1451407110910,0.017578125
1451407112736,0.0205078125
1451407118082,0.017578125
1451407119311,0.017578125
1451407120616,0.0224609375
1451407123587,0.0205078125
1451407125603,0.0185546875
1451407128050,0.017578125
1451407132363,0.0185546875
1451407134693,0.021484375
1451407138176,0.021484375
1451407139420,0.0185546875
1451407141092,0.0205078125
1451407142790,0.01953125
1451407144926,0.01953125
1451407146553,0.0205078125
1451407148029,0.017578125
1451407149547,0.021484375
1451407151847,0.0205078125
1451407153794,0.0185546875
1451407155024,0.0185546875
1451407157286,0.021484375
1451407159161,0.021484375
1451407161056,0.01953125
1451407162433,0.0185546875
1451407164229,0.0205078125
1451407165458,0.017578125
1451407167171,0.0185546875
1451407169415,0.021484375
1451407171077,0.017578125
1451407173170,0.0205078125
1451407174969,0.021484375
1451407176187,0.01953125
1451407178043,0.0205078125
1451407181058,0.0185546875
1451407182056,0.0205078125
1451407185098,0.017578125
1451407187456,0.0205078125
1451407189183,0.0205078125
1451407192145,0.017578125
1451407194824,0.017578125
1451407196066,0.017578125
1451407197530,0.0224609375
1451407201081,0.01953125
1451407204155,0.0224609375
1451407206119,0.0205078125
1451407207888,0.0185546875
1451407209272,0.01953125
1451407211062,0.01953125
1451407212402,0.0205078125
1451407214621,0.01953125
1451407216311,0.017578125
1451407218601,0.017578125
1451407221063,0.0185546875
1451407221386,0.0185546875
1451407225404,0.0185546875
1451407227344,0.0185546875
1451407229497,0.01953125
1451407232049,0.01953125
1451407233379,0.0224609375
1451407234980,0.0224609375
1451407236836,0.021484375
1451407238456,0.0224609375
1451407239692,0.017578125
1451407241516,0.0185546875
1451407243256,0.0224609375
1451407244681,0.017578125
1451407246475,0.01953125
1451407248458,0.0205078125
1451407252068,0.0185546875
1451407254012,0.017578125
1451407255781,0.0205078125
1451407257013,0.0185546875
1451407258247,0.0185546875
1451407261087,0.0224609375
1451407261976,0.01953125
1451407263784,0.0185546875
1451407266796,0.01953125
1451407269035,0.0185546875
1451407271071,0.01953125
1451407272221,0.0205078125
1451407274105,0.0205078125
1451407275854,0.0185546875
1451407277600,0.01953125
1451407278836,0.017578125
1451407281070,0.0205078125
1451407281660,0.01953125
1451407283689,0.01953125
1451407285987,0.01953125
1451407289320,0.0205078125
1451407291257,0.0224609375
1451407292628,0.0185546875
1451407294484,0.01953125
1451407296255,0.0205078125
1451407298053,0.01953125
1451407299627,0.021484375
1451407301441,0.0205078125
1451407302674,0.017578125
1451407304496,0.0205078125
1451407306650,0.0185546875
1451407308382,0.017578125
1451407311075,0.0224609375
1451407313223,0.017578125
1451407316405,0.01953125
1451407318340,0.021484375
1451407322073,0.01953125
1451407323871,0.0205078125
1451407325263,0.0185546875
1451407327173,0.0224609375
1451407328456,0.01953125
1451407331078,0.017578125
1451407332708,0.0205078125
1451407334174,0.01953125
1451407337591,0.0205078125
1451407338827,0.021484375
1451407341079,0.021484375
1451407344992,0.0205078125
1451407346402,0.021484375
1451407347864,0.01953125
1451407351095,0.01953125
1451407352151,0.0224609375
1451407353381,0.01953125
1451407355173,0.017578125
1451407356609,0.01953125
1451407357862,0.0185546875
1451407359780,0.01953125
1451407362776,0.0185546875
1451407364003,0.017578125
1451407365529,0.017578125
1451407367555,0.017578125
1451407369217,0.0224609375
1451407371270,0.0205078125
1451407373416,0.017578125
1451407375725,0.021484375
1451407377147,0.017578125
1451407378549,0.0205078125
1451407381099,0.017578125
1451407383437,0.021484375
1451407385060,0.01953125
1451407386614,0.01953125
1451407388730,0.0224609375
1451407391084,0.0205078125
1451407392087,0.01953125
1451407394053,0.01953125
1451407395815,0.0224609375
1451407397578,0.01953125
1451407399182,0.0205078125
1451407401102,0.01953125
1451407402416,0.01953125
1451407404256,0.0185546875
1451407405753,0.0185546875
1451407407437,0.01953125
1451407408699,0.0185546875
1451407411166,0.01953125
1451407413830,0.017578125
1451407415416,0.0205078125
1451407416748,0.01953125
1451407418291,0.01953125
1451407419531,0.0185546875
1451407425470,0.021484375
1451407427582,0.01953125
1451407429606,0.017578125
1451407431090,0.0185546875
1451407432741,0.017578125
1451407435307,0.017578125
1451407436576,0.021484375
1451407438193,0.01953125
1451407441110,0.0205078125
1451407442226,0.0185546875
1451407444074,0.01953125
1451407445638,0.01953125
1451407446917,0.01953125
1451407448313,0.021484375
1451407449979,0.0224609375
1451407451814,0.01953125
1451407453586,0.0205078125
1451407455422,0.0224609375
1451407457334,0.01953125
1451407459349,0.0205078125
1451407461631,0.01953125
1451407463403,0.0205078125
1451407464974,0.01953125
1451407467004,0.0185546875
1451407468332,0.0185546875
1451407469564,0.0205078125
1451407471108,0.0224609375
1451407472268,0.0185546875
1451407473499,0.0185546875
1451407475393,0.017578125
1451407476869,0.0205078125
1451407478767,0.017578125
1451407481098,0.0185546875
1451407481786,0.0205078125
1451407483814,0.0185546875
1451407485966,0.01953125
1451407487703,0.0224609375
1451407494267,0.017578125
1451407496734,0.0185546875
1451407498350,0.0224609375
1451407501115,0.017578125
1451407502539,0.0185546875
1451407504689,0.0185546875
1451407506421,0.0185546875
1451407511530,0.0205078125
1451407513299,0.01953125
1451407514529,0.017578125
1451407516735,0.021484375
1451407518305,0.01953125
1451407521101,0.01953125
1451407521920,0.0205078125
1451407525254,0.0185546875
1451407527233,0.0224609375
1451407528985,0.0205078125
1451407531115,0.0185546875
1451407532709,0.0185546875
1451407536242,0.017578125
1451407537973,0.0205078125
1451407539807,0.0185546875
1451407541599,0.0205078125
1451407542825,0.017578125
1451408073058,0.0185546875
1451408074891,0.017578125
1451408077324,0.01953125
1451408078777,0.017578125
1451408080380,0.01953125
1451408082226,0.0224609375
1451408083463,0.017578125
1451408085042,0.017578125
1451408087287,0.0185546875
1451408088507,0.017578125
1451408089749,0.017578125
1451408091243,0.0205078125
1451408093074,0.0205078125
1451408094576,0.0185546875
1451408097291,0.017578125
1451408098497,0.0185546875
1451408099924,0.0205078125
1451408101659,0.017578125
1451408103643,0.017578125
1451408107488,0.01953125
1451408109334,0.0205078125
1451408113484,0.0224609375
1451408114979,0.0185546875
1451408117923,0.0185546875
1451408119782,0.017578125
1451408123032,0.021484375
1451408127297,0.0185546875
1451408128551,0.0205078125
1451408130437,0.017578125
1451408132092,0.017578125
1451408134570,0.017578125
1451408135796,0.017578125
1451408139156,0.0185546875
1451408140842,0.01953125
1451408142661,0.0224609375
1451408143893,0.017578125
1451408145129,0.0185546875
1451408147292,0.0185546875
1451408148878,0.0205078125
1451408150738,0.0185546875
1451408152137,0.0185546875
1451408153616,0.0185546875
1451408155559,0.0185546875
1451408157300,0.017578125
1451408158623,0.017578125
1451408160305,0.017578125
1451408162100,0.0224609375
1451408164088,0.0224609375
1451408165824,0.0205078125
1451408167295,0.0205078125
1451408168496,0.017578125
1451408170431,0.01953125
1451408171697,0.017578125
1451408173741,0.021484375
1451408174976,0.017578125
1451408177294,0.0185546875
1451408178570,0.0185546875
1451408180450,0.0185546875
1451408181959,0.0185546875
1451408184311,0.017578125
1451408186051,0.0185546875
1451408191677,0.017578125
1451408195041,0.017578125
1451408197297,0.017578125
1451408198181,0.017578125
1451408199661,0.0224609375
1451408200911,0.017578125
1451408203216,0.017578125
1451408204652,0.01953125
1451408207456,0.0224609375
1451408208876,0.01953125
1451408210501,0.017578125
1451408213767,0.0185546875
1451408215336,0.017578125
1451408217302,0.0205078125
1451408218352,0.0224609375
1451408220018,0.0185546875
1451408221653,0.017578125
1451408224455,0.017578125
1451408225913,0.017578125
1451408227667,0.0205078125
1451408229398,0.017578125
1451408231322,0.0185546875
1451408234350,0.021484375
1451408236106,0.0205078125
1451408237711,0.0185546875
1451408239069,0.017578125
1451408240543,0.017578125
1451408242283,0.0224609375
1451408247306,0.017578125
1451408248098,0.0205078125
1451408249546,0.017578125
1451408251955,0.017578125
1451408255259,0.017578125
1451408258382,0.01953125
1451408259612,0.017578125
1451408262066,0.01953125
1451408264041,0.017578125
1451408267575,0.0185546875
1451408269057,0.017578125
1451408270748,0.01953125
1451408273296,0.017578125
1451408274796,0.021484375
1451408276029,0.017578125
1451408277672,0.0205078125
1451408278923,0.01953125
1451408280269,0.021484375
1451408281895,0.0185546875
1451408283151,0.01953125
1451408284726,0.017578125
1451408287313,0.01953125
1451408288428,0.017578125
1451408289673,0.017578125
1451408291539,0.017578125
1451408294825,0.017578125
1451408297312,0.0185546875
1451408298398,0.017578125
1451408300644,0.021484375
1451408303383,0.0185546875
1451408305871,0.017578125
1451408307837,0.0185546875
1451408309291,0.01953125
1451408311738,0.0205078125
1451408314082,0.017578125
1451408315907,0.01953125
1451408317514,0.0185546875
1451408320665,0.0205078125
1451408322055,0.0205078125
1451408323515,0.017578125
1451408325148,0.0185546875
1451408327314,0.0185546875
1451408328058,0.017578125
1451408329568,0.0185546875
1451408331247,0.0185546875
1451408333631,0.01953125
1451408335131,0.0185546875
1451408337328,0.017578125
1451408338557,0.017578125
1451408340050,0.017578125
1451408342776,0.017578125
1451408344259,0.0185546875
1451408347317,0.0185546875
1451408348128,0.0185546875
1451408350371,0.0185546875
1451408352101,0.0185546875
1451408353452,0.01953125
1451408354686,0.017578125
1451408355918,0.017578125
1451408358359,0.0185546875
1451408360119,0.017578125
1451408361357,0.017578125
1451408363263,0.01953125
1451408364985,0.01953125
1451408367320,0.0185546875
1451408369238,0.017578125
1451408372376,0.017578125
1451408374625,0.017578125
1451408375859,0.017578125
1451408378215,0.017578125
1451408379652,0.017578125
1451408381344,0.0185546875
1451408383500,0.021484375
1451408387325,0.0205078125
1451408389215,0.017578125
1451408391135,0.01953125
1451408393002,0.0185546875
1451408394232,0.017578125
1451408397584,0.021484375
1451408400448,0.017578125
1451408402395,0.0185546875
1451408406201,0.0185546875
1451408408008,0.0205078125
1451408411414,0.021484375
1451408413117,0.0185546875
1451408414795,0.0185546875
1451408417325,0.021484375
1451408417703,0.017578125
1451408424814,0.017578125
1451408427709,0.017578125
1451408429261,0.0185546875
1451408431469,0.017578125
1451408433467,0.0205078125
1451408435840,0.017578125
1451408437380,0.017578125
1451408438668,0.017578125
1451408440387,0.01953125
1451408442055,0.0185546875
1451408443619,0.01953125
1451408447331,0.01953125
1451408448066,0.017578125
1451408449472,0.0185546875
1451408453458,0.017578125
1451408454997,0.0185546875
1451408458435,0.0185546875
1451408462050,0.0185546875
1451408463346,0.017578125
1451408464828,0.0205078125
1451408467336,0.01953125
1451408470895,0.0185546875
1451408473805,0.017578125
1451408475682,0.0185546875
1451408477336,0.01953125
1451408479060,0.01953125
1451408482108,0.017578125
1451408483723,0.01953125
1451408485923,0.0185546875
1451408487336,0.017578125
1451408488604,0.021484375
1451408490718,0.01953125
1451408494030,0.017578125
1451408497348,0.017578125
1451408499011,0.017578125
1451408500817,0.017578125
1451408502582,0.01953125
1451408503812,0.017578125
1451408505180,0.0224609375
1451408507338,0.0185546875
1451408508623,0.01953125
1451408510355,0.021484375
1451408511665,0.017578125
1451408514213,0.0185546875
1451408517340,0.0185546875
1451408517604,0.021484375
1451408519204,0.017578125
1451408521294,0.017578125
1451408522530,0.017578125
1451408524243,0.0185546875
1451408526171,0.021484375
1451408529319,0.0205078125
1451408531092,0.017578125
1451408533560,0.017578125
1451408535876,0.017578125
1451408537457,0.01953125
1451408539213,0.0185546875
1451408541141,0.017578125
1451408542708,0.017578125
1451408547346,0.01953125
1451408548656,0.0205078125
1451408553731,0.017578125
1451408557348,0.01953125
1451408558042,0.0224609375
1451408561386,0.017578125
1451408563023,0.0185546875
1451408564259,0.017578125
1451408568268,0.017578125
1451408571880,0.021484375
1451408573804,0.017578125
1451408575522,0.0205078125
1451408577347,0.0185546875
1451408578395,0.0185546875
1451408580529,0.0185546875
1451408583898,0.017578125
1451408585428,0.0185546875
1451408587350,0.017578125
1451408588248,0.01953125
1451408591933,0.0185546875
1451408593397,0.017578125
1451408595249,0.0185546875
1451408598016,0.0185546875
1451408599662,0.0185546875
1451408601368,0.0224609375
1451408604281,0.01953125
1451408605511,0.017578125
1451408607351,0.017578125
1451408608309,0.0224609375
1451408610215,0.017578125
1451408612148,0.01953125
1451408614482,0.017578125
1451408617352,0.017578125
1451408618689,0.0205078125
1451408622247,0.0205078125
1451408624492,0.0205078125
1451408627354,0.017578125
1451408628948,0.017578125
1451408630937,0.017578125
1451408632341,0.0224609375
1451408634311,0.0185546875
1451408638541,0.0224609375
1451408640058,0.0224609375
1451408641405,0.017578125
1451408643098,0.0185546875
1451408644326,0.017578125
1451408645715,0.0224609375
1451408647733,0.0205078125
1451408649335,0.0185546875
1451408651499,0.0185546875
1451408652740,0.017578125
1451408654622,0.0205078125
1451408656194,0.0185546875
1451408658142,0.01953125
1451408660421,0.017578125
1451408663582,0.0205078125
1451408665610,0.017578125
1451408667358,0.0185546875
1451408668676,0.01953125
1451408670427,0.01953125
1451408672975,0.017578125
1451408951540,0.01953125
1451408953354,0.01953125
1451408955064,0.0185546875
1451408956852,0.0185546875
1451408958831,0.01953125
1451408960469,0.017578125
1451408962101,0.01953125
1451408963851,0.017578125
1451408967962,0.017578125
1451408969612,0.01953125
1451408971302,0.017578125
1451408975409,0.01953125
1451408977960,0.01953125
1451408979796,0.017578125
1451408981751,0.01953125
1451408983534,0.0224609375
1451408985122,0.0185546875
1451408987971,0.0185546875
1451408988539,0.0185546875
1451408990349,0.0185546875
1451408992511,0.0205078125
1451408996488,0.01953125
1451408998307,0.0185546875
1451408999966,0.0185546875
1451409005165,0.017578125
1451409011454,0.017578125
1451409014259,0.017578125
1451409015951,0.0205078125
1451409017973,0.0185546875
1451409018878,0.0185546875
1451409020110,0.017578125
1451409022172,0.0205078125
1451409025271,0.017578125
1451409028421,0.0185546875
1451409031587,0.0185546875
1451409033540,0.017578125
1451409035440,0.017578125
1451409037968,0.017578125
1451409038818,0.0185546875
1451409041569,0.017578125
1451409043227,0.01953125
1451411642306,0.0224609375
1451411643542,0.017578125
1451411646614,0.01953125
1451411649109,0.0185546875
1451411650099,0.0224609375
1451411651821,0.01953125
1451411653243,0.01953125
1451411655511,0.017578125
1451411656925,0.017578125
1451411659111,0.0205078125
1451411660806,0.021484375
1451411662267,0.0205078125
1451411663855,0.0224609375
1451411665575,0.017578125
1451411666811,0.0185546875
1451411669125,0.0224609375
1451411670013,0.021484375
1451411671370,0.0205078125
1451411674837,0.0185546875
1451411677895,0.017578125
1451411680071,0.017578125
1451411682373,0.017578125
1451411683618,0.017578125
1451411686452,0.0185546875
1451411687982,0.021484375
1451411689338,0.017578125
1451411691115,0.0224609375
1451411692355,0.017578125
1451411697200,0.01953125
1451411699131,0.0205078125
1451411702851,0.017578125
1451411704704,0.017578125
1451411706141,0.0205078125
1451411707835,0.01953125
1451411709485,0.01953125
1451411710723,0.017578125
1451411712858,0.01953125
1451411714440,0.0185546875
1451411715720,0.0224609375
1451411719119,0.0224609375
1451411722275,0.0205078125
1451411723905,0.017578125
1451411725411,0.021484375
1451411726676,0.017578125
1451411729710,0.0205078125
1451411731790,0.0185546875
1451411733263,0.0185546875
1451411734783,0.0205078125
1451411736969,0.0205078125
1451411740024,0.0185546875
1451411743734,0.017578125
1451411745154,0.021484375
1451411747025,0.017578125
1451411749121,0.0185546875
1451411750307,0.017578125
1451411752249,0.0224609375
1451411754018,0.01953125
1451411757264,0.01953125
1451411759136,0.017578125
1451411760019,0.01953125
1451411762491,0.017578125
1451411764347,0.017578125
1451411765651,0.021484375
1451411767353,0.0205078125
1451411769124,0.01953125
1451411772001,0.0185546875
1451411774151,0.01953125
1451411775395,0.017578125
1451411776897,0.021484375
1451411779126,0.0224609375
1451411779908,0.0185546875
1451411781684,0.01953125
1451411785534,0.017578125
1451411787111,0.0185546875
1451411789141,0.01953125
1451411790319,0.0205078125
1451411793498,0.01953125
1451411795466,0.017578125
1451411797026,0.0185546875
1451411799132,0.01953125
1451411800129,0.017578125
1451411802617,0.0185546875
1451411803901,0.0185546875
1451411805639,0.0185546875
1451411809128,0.0224609375
1451411810886,0.0185546875
1451411812820,0.01953125
1451411814347,0.01953125
1451411815591,0.017578125
1451411816869,0.021484375
1451411819145,0.0205078125
1451411822048,0.017578125
1451411823292,0.0205078125
1451411825791,0.0185546875
1451411827436,0.0185546875
1451411829265,0.0205078125
1451411836304,0.0224609375
1451411839134,0.01953125
1451411839876,0.017578125
1451411841228,0.0205078125
1451411842845,0.021484375
1451411844083,0.017578125
1451411847275,0.0185546875
1451411849146,0.0205078125
1451411850856,0.0205078125
1451411855400,0.017578125
1451411857001,0.021484375
1451411859139,0.017578125
1451411859491,0.017578125
1451411862978,0.017578125
1451411864658,0.01953125
1451411866130,0.021484375
1451411869141,0.021484375
1451411869807,0.01953125
1451411871279,0.0185546875
1451411874301,0.01953125
1451411875702,0.0224609375
1451411877498,0.021484375
1451411880151,0.01953125
1451411881487,0.021484375
1451411883307,0.017578125
1451411885915,0.017578125
1451411887143,0.017578125
1451411889144,0.0224609375
1451411889951,0.017578125
1451411891530,0.0205078125
1451411894556,0.01953125
1451411896233,0.021484375
1451411897839,0.0205078125
1451411899459,0.017578125
1451411900705,0.017578125
1451411902424,0.01953125
1451411904166,0.017578125
1451411905432,0.01953125
1451411907038,0.0185546875
1451411909152,0.0205078125
1451411910299,0.01953125
1451411911929,0.0185546875
1451411913239,0.01953125
1451411915027,0.0205078125
1451411917231,0.01953125
1451411919146,0.017578125
1451411920248,0.0185546875
1451411921731,0.0224609375
1451411926191,0.01953125
1451411927977,0.017578125
1451411929491,0.0205078125
1451411931248,0.017578125
1451411933431,0.017578125
1451411934906,0.0185546875
1451411936706,0.021484375
1451411939155,0.01953125
1451411941521,0.0224609375
1451411943539,0.0224609375
1451411945576,0.017578125
1451411947030,0.0205078125
1451411949776,0.021484375
1451411951884,0.01953125
1451411954635,0.017578125
1451411956577,0.0205078125
1451411959150,0.021484375
1451411961176,0.01953125
1451411962596,0.017578125
1451411963904,0.01953125
1451411967873,0.0205078125
1451411969557,0.0205078125
1451411970799,0.017578125
1451411972624,0.01953125
1451411974236,0.0205078125
1451411975816,0.0185546875
1451411981155,0.0205078125
1451411984515,0.017578125
1451411986310,0.021484375
1451411987834,0.0224609375
1451411989702,0.0205078125
1451411991460,0.0185546875
1451411992899,0.0205078125
1451411994753,0.0224609375
1451411996819,0.01953125
1451412001570,0.01953125
1451412003324,0.0185546875
1451412004554,0.017578125
1451412006436,0.017578125
1451412009155,0.01953125
1451412010471,0.01953125
1451412012128,0.01953125
1451412013704,0.0205078125
1451412015768,0.017578125
1451412017470,0.01953125
1451412019494,0.021484375
1451412020865,0.017578125
1451412023571,0.01953125
1451412024925,0.0224609375
1451412026449,0.01953125
1451412029167,0.021484375
1451412031918,0.01953125
1451412033893,0.01953125
1451412035193,0.0185546875
1451412036455,0.0185546875
1451412037949,0.01953125
1451412039477,0.021484375
1451412041646,0.0185546875
1451412043140,0.017578125
1451412044802,0.017578125
1451412046358,0.021484375
1451412049161,0.01953125
1451412049444,0.017578125
1451412051091,0.017578125
1451412053485,0.0185546875
1451412055188,0.0185546875
1451412056476,0.01953125
1451412059274,0.017578125
1451412060510,0.017578125
1451412062035,0.0185546875
1451412064829,0.017578125
1451412067635,0.017578125
1451412069486,0.0224609375
1451412070850,0.0205078125
1451412073330,0.017578125
1451412074941,0.0205078125
1451412076977,0.0185546875
1451412080079,0.021484375
1451412081954,0.0205078125
1451412083442,0.021484375
1451412085081,0.021484375
1451412089173,0.017578125
1451412091105,0.01953125
1451412092531,0.0205078125
1451412093802,0.0205078125
1451412095161,0.01953125
1451412096790,0.01953125
1451412099168,0.0205078125
1451412100093,0.017578125
1451412101328,0.017578125
1451412104401,0.017578125
1451412105921,0.01953125
1451412107335,0.0185546875
1451412109184,0.0185546875
1451412111184,0.0205078125
1451412112728,0.0224609375
1451412114382,0.017578125
1451412115901,0.0205078125
1451412119269,0.021484375
1451412121389,0.0185546875
1451412122630,0.017578125
1451412124588,0.017578125
1451412126104,0.0185546875
1451412128028,0.0205078125
1451412129271,0.017578125
1451412131077,0.0185546875
1451412132557,0.017578125
1451412134289,0.01953125
1451412135734,0.01953125
1451412136974,0.0224609375
1451412139178,0.0185546875
1451412142381,0.021484375
1451412143745,0.0205078125
1451412145481,0.0185546875
1451412147191,0.01953125
1451412149179,0.0205078125
1451412150451,0.0224609375
1451412152216,0.01953125
1451412153458,0.0185546875
1451412154962,0.0205078125
1451412156518,0.017578125
1451412159173,0.021484375
1451412159475,0.0185546875
1451412161319,0.0185546875
1451412163085,0.0205078125
1451412165074,0.021484375
1451412166880,0.021484375
1451412171695,0.017578125
1451412173135,0.0185546875
1451412174841,0.0185546875
1451412176175,0.01953125
1451412179196,0.017578125
1451412180484,0.017578125
1451412182384,0.017578125
1451412185245,0.017578125
1451412189185,0.017578125
1451412190009,0.017578125
1451412192382,0.0205078125
1451412193834,0.01953125
1451412195690,0.017578125
1451412199183,0.021484375
1451412201065,0.0185546875
1451412203129,0.017578125
1451412204461,0.017578125
1451412206088,0.0224609375
1451412207746,0.0205078125
1451412209190,0.021484375
1451412210506,0.0205078125
1451412212293,0.0205078125
1451412213949,0.017578125
1451412215183,0.017578125
1451412219186,0.017578125
1451412220501,0.0205078125
1451412223150,0.017578125
1451412224861,0.0205078125
1451412226417,0.0205078125
1451412229625,0.021484375
1451412237206,0.017578125
1451412239197,0.021484375
1451412240317,0.01953125
1451412245111,0.0185546875
1451412246500,0.017578125
1451412249200,0.017578125
1451412250501,0.0224609375
1451412252127,0.01953125
1451412254341,0.01953125
1451412255825,0.0185546875
1451412257363,0.0185546875
1451412259340,0.0224609375
1451412260976,0.0185546875
1451412263316,0.017578125
1451412264721,0.0185546875
1451412266467,0.021484375
1451412269557,0.021484375
1451412271143,0.017578125
1451412272815,0.0205078125
1451412275086,0.01953125
1451412276432,0.021484375
1451412277812,0.0185546875
1451412283009,0.021484375
1451412284323,0.021484375
1451412287472,0.0185546875
1451412291018,0.01953125
1451412295827,0.0224609375
1451412299197,0.0224609375
1451412299952,0.021484375
1451412301694,0.021484375
1451412303260,0.0185546875
1451412306808,0.017578125
1451412309709,0.017578125
1451412311861,0.017578125
1451412313453,0.0205078125
1451412315294,0.0185546875
1451412316984,0.017578125
1451412319194,0.017578125
1451412320400,0.0185546875
1451412321653,0.017578125
1451412322915,0.017578125
1451412326383,0.021484375
1451412329208,0.0205078125
1451412329712,0.0224609375
1451412331026,0.0185546875
1451412332975,0.0185546875
1451412334214,0.017578125
1451412335483,0.017578125
1451412339831,0.0205078125
1451412343146,0.0185546875
1451412344734,0.0185546875
1451412346156,0.0185546875
1451412348033,0.01953125
1451412350367,0.017578125
1451412351619,0.0185546875
1451412353021,0.0185546875
1451412354858,0.0185546875
1451412356454,0.0205078125
1451412359204,0.01953125
1451412359572,0.017578125
1451412361015,0.01953125
1451412362745,0.0185546875
1451412364627,0.0224609375
1451412367187,0.017578125
1451412370402,0.017578125
1451412375286,0.0185546875
1451412376921,0.017578125
1451412379209,0.021484375
1451412380138,0.01953125
1451412382097,0.0185546875
1451412383576,0.0185546875
1451412386014,0.017578125
1451412389478,0.017578125
1451412391375,0.01953125
1451412392957,0.0224609375
1451412394569,0.01953125
1451412395842,0.01953125
1451412397568,0.0185546875
1451412399206,0.0185546875
1451412400834,0.01953125
1451412404884,0.01953125
1451412406604,0.0185546875
1451412409207,0.017578125
1451412410114,0.0185546875
1451412414934,0.01953125
1451412416331,0.021484375
1451412417561,0.017578125
1451412420569,0.017578125
1451412422443,0.01953125
1451412424458,0.01953125
1451412426316,0.017578125
1451412427549,0.017578125
1451412429802,0.017578125
1451412435895,0.017578125
1451412439212,0.0185546875
1451412439722,0.017578125
1451412442372,0.017578125
1451412445627,0.0185546875
1451412446983,0.017578125
1451412449986,0.017578125
1451412452184,0.0205078125
1451412453692,0.01953125
1451412454932,0.01953125
1451412456228,0.021484375
1451412459217,0.017578125
1451412460449,0.017578125
1451412461701,0.017578125
1451412463501,0.017578125
1451412465087,0.0185546875
1451412466802,0.01953125
1451412469218,0.01953125
1451412469861,0.01953125
1451412472261,0.0205078125
1451412473871,0.021484375
1451412475699,0.0185546875
1451412477207,0.01953125
1451412479216,0.017578125
1451412480012,0.0224609375
1451412481564,0.0185546875
1451412483048,0.017578125
1451412484418,0.017578125
1451412485649,0.01953125
1451412487579,0.01953125
1451412491221,0.0205078125
1451412492996,0.021484375
1451412494518,0.0205078125
1451412496028,0.01953125
1451412497940,0.0185546875
1451412499597,0.0185546875
1451412501301,0.01953125
1451412502969,0.0185546875
1451412504555,0.0205078125
1451412506395,0.01953125
1451412507638,0.017578125
1451412509222,0.0185546875
1451412510751,0.017578125
1451412512785,0.0185546875
1451412514723,0.0224609375
1451412516421,0.01953125
1451412519222,0.0185546875
1451412519904,0.017578125
1451412521376,0.01953125
1451412522946,0.01953125
1451412524561,0.01953125
1451412526566,0.017578125
1451412529259,0.0224609375
1451412532876,0.021484375
1451412534110,0.0224609375
1451412536540,0.021484375
1451412539225,0.0205078125
1451412541411,0.021484375
1451412542651,0.021484375
1451412543895,0.021484375
1451412545139,0.0224609375
1451412549522,0.021484375
1451412551420,0.0205078125
1451412553839,0.01953125
1451412556267,0.0205078125
1451412557503,0.021484375
1451412559225,0.021484375
1451412559987,0.021484375
1451412561232,0.0205078125
1451412563666,0.0205078125
1451412565026,0.0205078125
1451412566515,0.0205078125
1451412567763,0.01953125
1451412570191,0.01953125
1451412571425,0.01953125
1451412572694,0.01953125
1451412573901,0.021484375
1451412575138,0.0205078125
1451412576376,0.0185546875
1451412577612,0.01953125
1451412579238,0.0224609375
1451412580089,0.0185546875
1451412581332,0.0205078125
1451412583769,0.0205078125
1451412585055,0.01953125
1451412586535,0.01953125
1451412587832,0.021484375
1451412590256,0.021484375
1451412592696,0.0205078125
1451412593926,0.0205078125
1451412595175,0.0205078125
1451412596399,0.021484375
1451412597656,0.021484375
1451412602450,0.021484375
1451412604051,0.021484375
1451412604956,0.0224609375
1451412609527,0.021484375
1451412612657,0.0205078125
1451412615040,0.0205078125
1451412616258,0.0205078125
1451412619251,0.0205078125
1451412621160,0.0205078125
1451412623567,0.0205078125
1451412626393,0.0224609375
1451412627649,0.0205078125
1451412632458,0.021484375
1451412633724,0.021484375
1451412634944,0.0205078125
1451412636193,0.021484375
1451412637415,0.021484375
1451412639915,0.0205078125
1451412642275,0.0205078125
1451412643516,0.0224609375
1451412644792,0.0224609375
1451412646292,0.0224609375
1451412650003,0.0205078125
1451412651263,0.0224609375
1451412653675,0.0205078125
1451412657354,0.0224609375
1451412659732,0.021484375
1451412660994,0.021484375
1451412662214,0.0205078125
1451412664651,0.021484375
1451412666033,0.0205078125
1451412669386,0.0224609375
1451412674478,0.021484375
1451412675718,0.0224609375
1451412676964,0.0224609375
1451412679245,0.0224609375
1451412680682,0.0224609375
1451412681904,0.0205078125
1451412683147,0.0224609375
1451412685720,0.0205078125
1451412691933,0.0205078125
1451412693137,0.0205078125
1451412694373,0.021484375
1451412695623,0.021484375
1451412698054,0.0224609375
1451412699270,0.0205078125
1451412700534,0.0205078125
1451412701776,0.0224609375
1451412704199,0.0205078125
1451412705441,0.021484375
1451412706869,0.021484375
1451412709501,0.021484375
1451412710738,0.0224609375
1451412714378,0.021484375
1451412715613,0.0224609375
1451412716838,0.0224609375
1451412719296,0.0205078125
1451412720517,0.0205078125
1451412724122,0.021484375
1451412725366,0.0224609375
1451412732693,0.0224609375
1451412735677,0.021484375
1451412738103,0.0224609375
1451412739340,0.0224609375
1451412742951,0.021484375
1451412744198,0.021484375
1451412746867,0.021484375
1451412749267,0.021484375
1451412749563,0.0224609375
1451412750827,0.0224609375
1451412755611,0.017578125
1451412757111,0.0205078125
1451412760477,0.021484375
1451412762339,0.01953125
1451412763661,0.0205078125
1451412765873,0.0185546875
1451412767431,0.017578125
1451412769274,0.017578125
1451412770792,0.017578125
1451412772615,0.017578125
1451412774341,0.0185546875
1451412778013,0.0185546875
1451412779258,0.017578125
1451412780660,0.01953125
1451412782162,0.01953125
1451412783840,0.01953125
1451412786007,0.021484375
1451412791707,0.017578125
1451412794552,0.017578125
1451412795362,0.017578125
1451412797624,0.01953125
1451412799256,0.0185546875
1451412801015,0.0185546875
1451412804361,0.0224609375
1451412807925,0.0185546875
1451412811190,0.01953125
1451412812731,0.0205078125
1451412814619,0.0205078125
1451412816069,0.0224609375
1451412817895,0.01953125
1451412820004,0.017578125
1451412821640,0.01953125
1451412822991,0.0205078125
1451412824416,0.0205078125
1451412825968,0.01953125
1451412827963,0.021484375
1451412830011,0.0205078125
1451412832639,0.0205078125
1451412834141,0.0185546875
1451412835368,0.01953125
1451412837391,0.0185546875
1451412839400,0.021484375
1451412840939,0.017578125
1451412843065,0.01953125
1451412844791,0.017578125
1451412846033,0.0185546875
1451412847883,0.01953125
1451412849970,0.017578125
1451412851538,0.0205078125
1451412856071,0.017578125
1451412857983,0.01953125
1451412859745,0.017578125
1451412861436,0.01953125
1451412863208,0.01953125
1451412866383,0.01953125
1451412870043,0.0185546875
1451412871283,0.017578125
1451412874299,0.017578125
1451412876110,0.021484375
1451412877656,0.01953125
1451412879304,0.0205078125
1451412880584,0.0185546875
1451412882284,0.0185546875
1451412883919,0.01953125
1451412885361,0.0205078125
1451412886613,0.017578125
1451412889282,0.017578125
1451412890650,0.017578125
1451412891964,0.0185546875
1451412893581,0.0185546875
1451412896528,0.0205078125
1451412899285,0.01953125
1451412900065,0.0185546875
1451412901407,0.01953125
1451412902776,0.01953125
1451412904186,0.021484375
1451412905800,0.021484375
1451412907288,0.0185546875
1451412909803,0.017578125
1451412911955,0.01953125
1451412916113,0.017578125
1451412922142,0.0205078125
1451412923380,0.017578125
1451412924735,0.0185546875
1451412926021,0.0205078125
1451412927429,0.0205078125
1451412930520,0.0185546875
1451412932238,0.01953125
1451412933940,0.017578125
1451412935392,0.017578125
1451412936667,0.0205078125
1451412939277,0.0185546875
1451412940705,0.017578125
1451412944484,0.021484375
1451412946102,0.017578125
1451412947805,0.0205078125
1451412949562,0.021484375
1451412951275,0.0205078125
1451412952965,0.0185546875
1451412954215,0.0185546875
1451412957039,0.01953125
1451412959342,0.017578125
1451412960728,0.01953125
1451412962342,0.021484375
1451412963578,0.0205078125
1451412965405,0.0185546875
1451412967082,0.01953125
1451412969731,0.017578125
1451412971676,0.0224609375
1451412974106,0.017578125
1451412975934,0.0205078125
1451412977268,0.017578125
1451412979287,0.017578125
1451412980431,0.017578125
1451412982205,0.0185546875
1451412983443,0.017578125
1451412985081,0.0224609375
1451412986874,0.017578125
1451412989290,0.0205078125
1451412990254,0.01953125
1451412991659,0.021484375
1451412993033,0.0224609375
1451412994275,0.017578125
1451412996085,0.0185546875
1451412997932,0.0205078125
1451412999316,0.021484375
1451413000496,0.017578125
1451413001918,0.017578125
1451413003501,0.017578125
1451413005259,0.017578125
1451413006871,0.0205078125
1451413009285,0.017578125
1451413009697,0.0185546875
1451413011347,0.021484375
1451413012626,0.017578125
1451413014388,0.01953125
1451413016166,0.0205078125
1451413018110,0.0224609375
1451413019543,0.0205078125
1451413020787,0.017578125
1451413022745,0.017578125
1451413024757,0.017578125
1451413026572,0.017578125
1451413029312,0.01953125
1451413030489,0.017578125
1451413032541,0.01953125
1451413034755,0.021484375
1451413036321,0.01953125
1451413037930,0.01953125
1451413039355,0.0185546875
1451413041142,0.01953125
1451413042382,0.017578125
1451413044006,0.017578125
1451413045826,0.017578125
1451413047277,0.017578125
1451413051283,0.01953125
1451413052625,0.0224609375
1451413054262,0.0185546875
1451413055870,0.0224609375
1451413057462,0.021484375
1451413061635,0.0185546875
1451413063521,0.0185546875
1451413064807,0.0205078125
1451413066304,0.01953125
1451413067766,0.0205078125
1451413069782,0.0205078125
1451413071606,0.017578125
1451413073402,0.017578125
1451413074831,0.0224609375
1451413079299,0.0185546875
1451413079863,0.0185546875
1451413083502,0.0205078125
1451413085388,0.0185546875
1451413086816,0.0185546875
1451413089323,0.0205078125
1451413090867,0.017578125
1451413092913,0.01953125
1451413094596,0.0185546875
1451413097678,0.017578125
1451413099372,0.0185546875
1451413101256,0.01953125
1451413103247,0.01953125
1451413105175,0.01953125
1451413109300,0.0205078125
1451413110530,0.021484375
1451413111774,0.017578125
1451413113164,0.0205078125
1451413114448,0.017578125
1451413116482,0.01953125
1451413119306,0.017578125
1451413119801,0.017578125
1451413121049,0.021484375
1451413123066,0.0224609375
1451413124306,0.01953125
1451413125860,0.0185546875
1451413127236,0.017578125
1451413129301,0.01953125
1451413130547,0.01953125
1451413132649,0.01953125
1451413134801,0.0185546875
1451413136568,0.0205078125
1451413139302,0.0185546875
1451413140310,0.01953125
1451413142108,0.01953125
1451413144003,0.0205078125
1451413145642,0.01953125
1451413147485,0.021484375
1451413151804,0.017578125
1451413154242,0.017578125
1451413156346,0.0185546875
1451413158087,0.0185546875
1451413159639,0.01953125
1451413161723,0.017578125
1451413163394,0.0185546875
1451413164638,0.017578125
1451413167512,0.01953125
1451413169427,0.017578125
1451413170663,0.017578125
1451413172111,0.0205078125
1451413173853,0.0205078125
1451413176933,0.0224609375
1451413180536,0.0185546875
1451413182242,0.0205078125
1451413183538,0.01953125
1451413185159,0.021484375
1451413187533,0.0205078125
1451413189515,0.0185546875
1451413190762,0.0185546875
1451413192322,0.0224609375
1451413193888,0.017578125
1451413196668,0.0185546875
1451413199311,0.021484375
1451413199811,0.017578125
1451413201453,0.017578125
1451413203153,0.0185546875
1451413204648,0.0185546875
1451413206286,0.017578125
1451413209747,0.0185546875
1451413212285,0.017578125
1451413213525,0.017578125
1451413214886,0.01953125
1451413217073,0.021484375
1451413218314,0.017578125
1451413219742,0.01953125
1451413221952,0.01953125
1451413223765,0.021484375
1451413225443,0.0205078125
1451413227187,0.0205078125
1451413228617,0.0185546875
1451413230902,0.0185546875
1451413232266,0.017578125
1451413233496,0.017578125
1451413235226,0.01953125
1451413236542,0.0205078125
1451413239161,0.01953125
1451413240901,0.0185546875
1451413241853,0.0224609375
1451413243423,0.017578125
1451413246016,0.017578125
1451413247376,0.0205078125
1451413249564,0.0205078125
1451413251558,0.01953125
1451413254133,0.01953125
1451413255885,0.01953125
1451413257183,0.01953125
1451413258682,0.0205078125
1451413260902,0.0224609375
1451413261935,0.0224609375
1451413263530,0.0224609375
1451413265527,0.0185546875
1451413267161,0.021484375
1451413268761,0.021484375
1451413270911,0.01953125
1451413272135,0.021484375
1451413275242,0.017578125
1451413277622,0.017578125
1451413279623,0.01953125
1451413280911,0.017578125
1451413282147,0.0185546875
1451413283779,0.01953125
1451413285015,0.0205078125
1451413286695,0.0185546875
1451413288070,0.0185546875
1451413289514,0.01953125
1451413291441,0.0185546875
1451413292995,0.0224609375
1451413294251,0.0205078125
1451413295701,0.017578125
1451413297169,0.017578125
1451413298431,0.017578125
1451413301504,0.0185546875
1451413302746,0.017578125
1451413304668,0.017578125
1451413306640,0.0185546875
1451413308399,0.017578125
1451413311813,0.021484375
1451413315062,0.021484375
1451413316742,0.01953125
1451413318592,0.01953125
1451413320913,0.017578125
1451413321961,0.017578125
1451413323881,0.017578125
1451413325792,0.0205078125
1451413327404,0.0205078125
1451413328828,0.0205078125
1451413330910,0.0185546875
1451413332840,0.017578125
1451413334227,0.017578125
1451413337785,0.021484375
1451413339165,0.0185546875
1451413340918,0.0224609375
1451413342810,0.01953125
1451413344468,0.017578125
1451413346090,0.0185546875
1451413347552,0.0205078125
1451413349333,0.0185546875
1451413351279,0.0185546875
1451413353232,0.017578125
1451413355222,0.01953125
1451413356552,0.01953125
1451413358192,0.0185546875
1451413359434,0.0224609375
1451413361305,0.0224609375
1451413362639,0.017578125
1451413364304,0.017578125
1451413365955,0.0205078125
1451413367983,0.0185546875
1451413369274,0.0185546875
1451413371182,0.01953125
1451413372923,0.0205078125
1451413374158,0.017578125
1451413376442,0.0185546875
1451413377683,0.0185546875
1451413379311,0.0224609375
1451413381243,0.0185546875
1451413382566,0.0185546875
1451413383860,0.0185546875
1451413385192,0.021484375
1451413387173,0.01953125
1451413389073,0.0185546875
1451413390917,0.017578125
1451413391651,0.017578125
1451413393309,0.017578125
1451413394537,0.021484375
1451413396090,0.0185546875
1451413397958,0.017578125
1451413399320,0.01953125
1451413400924,0.0185546875
1451413402536,0.0224609375
1451413404423,0.021484375
1451413407609,0.0205078125
1451413409188,0.0224609375
1451413410926,0.017578125
1451413413266,0.01953125
1451413415339,0.01953125
1451413416675,0.0205078125
1451413418263,0.0224609375
1451413420919,0.01953125
1451413422125,0.017578125
1451413423592,0.0185546875
1451413425234,0.0185546875
1451413427100,0.0185546875
1451413428438,0.0205078125
1451413430933,0.01953125
1451413431992,0.0185546875
1451413433545,0.017578125
1451413434999,0.0205078125
1451413436358,0.0205078125
1451413437756,0.0185546875
1451413439606,0.017578125
1451413441146,0.0185546875
1451413442885,0.01953125
1451413444897,0.0185546875
1451413447911,0.0205078125
1451413450926,0.021484375
1451413452024,0.0185546875
1451413455616,0.017578125
1451413458501,0.017578125
1451413459805,0.0205078125
1451413461243,0.021484375
1451413463470,0.0185546875
1451413464931,0.0185546875
1451413467010,0.0185546875
1451413468472,0.0205078125
1451413470932,0.0185546875
1451413471681,0.0224609375
1451413472921,0.0224609375
1451413475763,0.017578125
1451413477888,0.021484375
1451413483017,0.01953125
1451413484774,0.0205078125
1451413486013,0.017578125
1451413487679,0.01953125
1451413489631,0.0205078125
1451413492892,0.0224609375
1451413494676,0.01953125
1451413496546,0.0185546875
1451413498058,0.0185546875
1451413500931,0.021484375
1451413501443,0.017578125
1451413502895,0.017578125
1451413504151,0.0185546875
1451413508020,0.01953125
1451413509594,0.0205078125
1451413513177,0.017578125
1451413515055,0.0205078125
1451413516407,0.0224609375
1451413518752,0.0185546875
1451413520940,0.021484375
1451413521954,0.021484375
1451413523216,0.01953125
1451413524572,0.0205078125
1451413526079,0.01953125
1451413527393,0.021484375
1451413528627,0.017578125
1451413530938,0.01953125
1451413531733,0.017578125
1451413533760,0.017578125
1451413535158,0.017578125
1451413536922,0.021484375
1451413538166,0.0185546875
1451413539781,0.01953125
1451413541192,0.01953125
1451413542529,0.0185546875
1451413544419,0.017578125
1451413546067,0.017578125
1451413548692,0.017578125
1451413550940,0.0224609375
1451413552046,0.0205078125
1451413553403,0.0185546875
1451413554843,0.0185546875
1451413557999,0.0185546875
1451413559236,0.017578125
1451413562712,0.01953125
1451413564366,0.01953125
1451413567953,0.0185546875
1451413569433,0.0205078125
1451413570939,0.017578125
1451413572092,0.017578125
1451413574338,0.0224609375
1451413577142,0.021484375
1451413579026,0.017578125
1451413581272,0.017578125
1451413582569,0.01953125
1451413584025,0.0205078125
1451413585643,0.0185546875
1451413587277,0.017578125
1451413589052,0.017578125
1451413592298,0.0185546875
1451413593932,0.017578125
1451413595167,0.01953125
1451413596755,0.017578125
1451413598723,0.0224609375
1451413600952,0.0185546875
1451413601912,0.017578125
1451413603422,0.017578125
1451413606832,0.0185546875
1451413608467,0.0185546875
1451413610947,0.021484375
1451413612223,0.021484375
1451413613852,0.017578125
1451413615304,0.021484375
1451413620946,0.01953125
1451413621777,0.0224609375
1451413623555,0.021484375
1451413624791,0.017578125
1451413626288,0.021484375
1451413627940,0.01953125
1451413630956,0.01953125
1451413632114,0.01953125
1451413634334,0.017578125
1451413636009,0.017578125
1451413637381,0.021484375
1451413639379,0.0185546875
1451413641364,0.0224609375
1451413642598,0.017578125
1451413644410,0.017578125
1451413645646,0.0185546875
1451413646964,0.017578125
1451413648365,0.0205078125
1451413649703,0.0185546875
1451413651239,0.021484375
1451413653289,0.0185546875
1451413655062,0.017578125
1451413656998,0.0205078125
1451413658578,0.01953125
1451413660953,0.0185546875
1451413661612,0.0185546875
1451413662848,0.017578125
1451413664283,0.0224609375
1451413666613,0.0185546875
1451413668299,0.0185546875
1451413669668,0.01953125
1451413672488,0.0205078125
1451413674298,0.01953125
1451413676038,0.021484375
1451413677339,0.0224609375
1451413679077,0.017578125
1451413680953,0.017578125
1451413682372,0.017578125
1451413683610,0.017578125
1451413685380,0.0205078125
1451413688020,0.0205078125
1451413689641,0.0185546875
1451413691409,0.0205078125
1451413693097,0.0205078125
1451413694994,0.017578125
1451413699064,0.017578125
1451413701202,0.017578125
1451413702712,0.0185546875
1451413704237,0.021484375
1451413706209,0.0205078125
1451413707452,0.01953125
1451413709087,0.01953125
1451413710974,0.017578125
1451413712458,0.0185546875
1451413714216,0.01953125
1451413715578,0.0224609375
1451413716928,0.0205078125
1451413718421,0.0185546875
1451413720963,0.0185546875
1451413721463,0.017578125
1451413723536,0.017578125
1451413725696,0.0224609375
1451413727114,0.0205078125
1451413728352,0.0205078125
1451413729642,0.017578125
1451413731323,0.017578125
1451413734375,0.01953125
1451413735779,0.0185546875
1451413737675,0.0205078125
1451413739094,0.01953125
1451413740964,0.017578125
1451413742268,0.0224609375
1451413745601,0.01953125
1451413747099,0.01953125
1451413748547,0.017578125
1451413749791,0.0185546875
1451413751582,0.0224609375
1451413753022,0.0224609375
1451413756218,0.017578125
1451413757450,0.017578125
1451413760971,0.017578125
1451413762124,0.0224609375
1451413763762,0.0205078125
1451413765948,0.01953125
1451413768028,0.017578125
1451413769750,0.017578125
1451413771271,0.0185546875
1451413774807,0.01953125
1451413776250,0.01953125
1451413777880,0.0185546875
1451413782646,0.01953125
1451413784388,0.0205078125
1451413787051,0.017578125
1451413788971,0.01953125
1451413791619,0.01953125
1451413793096,0.021484375
1451413794668,0.021484375
1451413796106,0.017578125
1451413797819,0.0185546875
1451413799771,0.0205078125
1451413801507,0.0205078125
1451413803033,0.01953125
1451413804495,0.0205078125
1451413806212,0.01953125
1451413808476,0.01953125
1451413810970,0.01953125
1451413811728,0.0185546875
1451413816189,0.017578125
1451413817678,0.021484375
1451413820986,0.017578125
1451413822150,0.017578125
1451413827055,0.017578125
1451413828915,0.01953125
1451413832229,0.021484375
1451413833524,0.0224609375
1451413836738,0.021484375
1451413838480,0.021484375
1451413840977,0.0205078125
1451413841543,0.0205078125
1451413844539,0.0205078125
1451413846466,0.0185546875
1451413849412,0.021484375
1451413851364,0.021484375
1451413854519,0.017578125
1451413855765,0.0205078125
1451413857105,0.0185546875
1451413858659,0.017578125
1451413860984,0.0185546875
1451413862744,0.017578125
1451413864180,0.0224609375
1451413865678,0.0224609375
1451413867311,0.0185546875
1451413871402,0.0185546875
1451413872787,0.0205078125
1451413874139,0.0205078125
1451413876042,0.017578125
1451413877298,0.017578125
1451413879196,0.01953125
1451413883383,0.017578125
1451413884753,0.017578125
1451413886351,0.017578125
1451413887882,0.0224609375
1451413889236,0.021484375
1451413891010,0.0185546875
1451413892246,0.017578125
1451413894212,0.017578125
1451413896033,0.017578125
1451413897553,0.017578125
1451413901125,0.0185546875
1451413902976,0.021484375
1451413904570,0.0205078125
1451413906342,0.0205078125
1451413907986,0.021484375
1451413911247,0.0224609375
1451413914996,0.0224609375
1451413916928,0.0205078125
1451413918374,0.021484375
1451413919608,0.017578125
1451413921166,0.0224609375
1451413923171,0.0205078125
1451413924805,0.0205078125
1451413929008,0.0185546875
1451413930992,0.021484375
1451413932854,0.0205078125
1451413934504,0.017578125
1451413936862,0.017578125
1451413938207,0.01953125
1451413939622,0.0205078125
1451413942190,0.017578125
1451413943420,0.0185546875
1451413945162,0.0205078125
1451413946410,0.0224609375
1451413948130,0.0185546875
1451413949833,0.017578125
1451413953890,0.0205078125
1451413955534,0.01953125
1451413956902,0.0185546875
1451413958406,0.021484375
1451413962069,0.0205078125
1451413963486,0.0185546875
1451413964906,0.021484375
1451413966449,0.0185546875
1451413968979,0.0224609375
1451413970994,0.01953125
1451413972326,0.0205078125
1451413973586,0.0224609375
1451413974952,0.01953125
1451413980999,0.01953125
1451413983286,0.0205078125
1451413987806,0.017578125
1451413991007,0.0205078125
1451413991563,0.021484375
1451413993005,0.0224609375
1451413995394,0.01953125
1451413997005,0.0205078125
1451414001596,0.017578125
1451414002989,0.0185546875
1451414005951,0.0205078125
1451414007705,0.0185546875
1451414009395,0.021484375
1451414010997,0.0224609375
1451414012424,0.0205078125
1451414013962,0.0205078125
1451414015214,0.017578125
1451414017022,0.0185546875
1451414018753,0.021484375
1451414020999,0.0185546875
1451414022337,0.017578125
1451414025566,0.0185546875
1451414027008,0.0224609375
1451414028644,0.0185546875
1451414031777,0.017578125
1451414035975,0.0205078125
1451414037440,0.021484375
1451414039264,0.0224609375
1451414041006,0.017578125
1451414041748,0.0185546875
1451414043028,0.0185546875
1451414044643,0.0185546875
1451414046135,0.021484375
1451414048303,0.021484375
1451414051001,0.017578125
1451414051969,0.01953125
1451414053262,0.01953125
1451414054678,0.021484375
1451414057508,0.017578125
1451414062639,0.017578125
1451414064141,0.01953125
1451414066300,0.01953125
1451414071899,0.01953125
1451414073771,0.0224609375
1451414076943,0.017578125
1451414078655,0.01953125
1451414082336,0.0205078125
1451414083776,0.0185546875
1451414085216,0.01953125
1451414087059,0.01953125
1451414088423,0.021484375
1451414091009,0.0185546875
1451414092420,0.01953125
1451414093884,0.021484375
1451414096006,0.017578125
1451414097618,0.01953125
1451414099226,0.0224609375
1451414102129,0.0224609375
1451414103423,0.0205078125
1451414106488,0.01953125
1451414108234,0.0205078125
1451414109666,0.021484375
1451414111790,0.017578125
1451414113515,0.0205078125
1451414114837,0.017578125
1451414117291,0.0224609375
1451414118529,0.021484375
1451414121950,0.017578125
1451414123626,0.017578125
1451414125238,0.0205078125
1451414128795,0.01953125
1451414131022,0.0224609375
1451414132226,0.0224609375
1451414133607,0.021484375
1451414135380,0.017578125
1451414136930,0.0185546875
1451414138422,0.0185546875
1451414141012,0.017578125
1451414141537,0.0205078125
1451414142955,0.0185546875
1451414144439,0.0185546875
1451414145671,0.017578125
1451414147315,0.0205078125
1451414149014,0.021484375
1451414151016,0.0205078125
1451414151916,0.0185546875
1451414153358,0.0224609375
1451414155021,0.0224609375
1451414157169,0.0205078125
1451414159111,0.017578125
1451414161017,0.0185546875
1451414162000,0.0205078125
1451414163394,0.017578125
1451414164974,0.021484375
1451414166924,0.0224609375
1451414169049,0.0185546875
1451414171019,0.017578125
1451414171707,0.0205078125
1451414173172,0.0205078125
1451414174492,0.01953125
1451414176656,0.017578125
1451414178230,0.01953125
1451414181018,0.0224609375
1451414182545,0.017578125
1451414187583,0.0205078125
1451414189298,0.021484375
1451414191076,0.0185546875
1451414192554,0.0205078125
1451414194042,0.021484375
1451414195871,0.0205078125
1451414199057,0.017578125
1451414201083,0.01953125
1451414206903,0.0205078125
1451414208807,0.01953125
1451414211023,0.01953125
1451414213727,0.0185546875
1451414215299,0.01953125
1451414216844,0.017578125
1451414218610,0.021484375
1451414219860,0.01953125
1451414221584,0.021484375
1451414222972,0.01953125
1451414224641,0.0224609375
1451414226849,0.017578125
1451414231034,0.0205078125
1451414232430,0.0205078125
1451414233812,0.0205078125
1451414235051,0.0185546875
1451414236533,0.017578125
1451414239223,0.0185546875
1451414241059,0.0185546875
1451414242942,0.017578125
1451414244188,0.017578125
1451414247256,0.021484375
1451414249112,0.0205078125
1451414251029,0.017578125
1451414252313,0.01953125
1451414254133,0.017578125
1451414257014,0.017578125
1451414259004,0.0205078125
1451414261032,0.0205078125
1451414262262,0.0185546875
1451414263995,0.0205078125
1451414265953,0.01953125
1451414267269,0.0205078125
1451414268951,0.0224609375
1451414271032,0.017578125
1451414272238,0.0185546875
1451414273824,0.021484375
1451414275262,0.021484375
1451414276798,0.0224609375
1451414278249,0.0224609375
1451414282017,0.021484375
1451414285378,0.017578125
1451414286614,0.017578125
1451414288296,0.017578125
1451414291033,0.0205078125
1451414291637,0.021484375
1451414293577,0.0205078125
1451414296399,0.017578125
1451414298012,0.017578125
1451414299482,0.017578125
1451414301040,0.017578125
1451414303102,0.0185546875
1451414304343,0.021484375
1451414305637,0.0224609375
1451414307171,0.021484375
1451414309169,0.0205078125
1451414311059,0.0205078125
1451414316287,0.021484375
1451414317905,0.021484375
1451414321319,0.0205078125
1451414323165,0.01953125
1451414326316,0.017578125
1451414328148,0.0205078125
1451414331551,0.0205078125
1451414333147,0.01953125
1451414334441,0.0224609375
1451414337213,0.0185546875
1451414339176,0.021484375
1451414341042,0.017578125
1451414341778,0.0185546875
1451414343746,0.01953125
1451414348072,0.017578125
1451414349887,0.0205078125
1451414351413,0.017578125
1451414353006,0.021484375
1451414354554,0.01953125
1451414357880,0.01953125
1451414361055,0.0185546875
1451414363005,0.017578125
1451414364591,0.0205078125
1451414366601,0.021484375
1451414373541,0.021484375
1451414374941,0.01953125
1451414376337,0.0205078125
1451414377897,0.0185546875
1451414379425,0.0205078125
1451414381192,0.021484375
1451414383162,0.0205078125
1451414385288,0.01953125
1451414386619,0.021484375
1451414388579,0.0224609375
1451414392159,0.0224609375
1451414394128,0.0224609375
1451414396034,0.0224609375
1451414397344,0.0224609375
1451414401071,0.0205078125
1451414404177,0.0185546875
1451414405519,0.01953125
1451414406965,0.0224609375
1451414408778,0.021484375
1451414411048,0.01953125
1451414412790,0.01953125
1451414414349,0.021484375
1451414417621,0.021484375
1451414419645,0.017578125
1451414421332,0.021484375
1451414423672,0.017578125
1451414426328,0.0185546875
1451414428062,0.0205078125
1451414429901,0.01953125
1451414431307,0.01953125
1451414433092,0.0205078125
1451414434637,0.01953125
1451414436104,0.0224609375
1451414438206,0.021484375
1451414441052,0.0205078125
1451414441945,0.0205078125
1451414443181,0.017578125
1451414444411,0.0185546875
1451414446073,0.0205078125
1451414449553,0.0205078125
1451414451058,0.017578125
1451414452272,0.0224609375
1451414454075,0.0185546875
1451414455897,0.0185546875
1451414457503,0.021484375
1451414458845,0.021484375
1451414461057,0.0205078125
1451414461945,0.0205078125
1451414463544,0.0205078125
1451414465152,0.01953125
1451414468404,0.0185546875
1451414471057,0.017578125
1451414471665,0.021484375
1451414473201,0.0205078125
1451414474801,0.0205078125
1451414476830,0.01953125
1451414483995,0.017578125
1451414485221,0.017578125
1451414486785,0.017578125
1451414488766,0.0185546875
1451414491086,0.0205078125
1451414495239,0.017578125
1451414497175,0.0205078125
1451414501061,0.021484375
1451414503234,0.021484375
1451414505976,0.017578125
1451414507966,0.01953125
1451414509742,0.01953125
1451414511163,0.0224609375
1451414512609,0.0185546875
1451414514041,0.0205078125
1451414516990,0.0185546875
1451414519296,0.0224609375
1451414522988,0.01953125
1451414524653,0.0185546875
1451414527367,0.0205078125
1451414531064,0.0205078125
1451414533330,0.017578125
1451414534560,0.0205078125
1451414536242,0.0185546875
1451414537811,0.01953125
1451414539907,0.017578125
1451414542445,0.017578125
1451414544098,0.017578125
1451414546142,0.0185546875
1451414547546,0.01953125
1451414548961,0.0205078125
1451414554759,0.0185546875
1451414556385,0.01953125
1451414558414,0.0224609375
1451414559924,0.021484375
1451414563384,0.01953125
1451414565299,0.0185546875
1451414567347,0.0205078125
1451414568692,0.021484375
1451414571073,0.0205078125
1451414571664,0.021484375
1451414573148,0.0205078125
1451414574690,0.0185546875
1451414576322,0.021484375
1451414578159,0.0205078125
1451414579853,0.0185546875
1451414581687,0.0205078125
1451414583491,0.017578125
1451414585191,0.0205078125
1451414586914,0.0224609375
1451414588538,0.0205078125
1451414591076,0.0205078125
1451414591921,0.0205078125
1451414593691,0.0205078125
1451414595193,0.021484375
1451414596913,0.0205078125
1451414601424,0.017578125
1451414606247,0.01953125
1451414608055,0.0205078125
1451414612033,0.021484375
1451414613646,0.0224609375
1451414615343,0.0224609375
1451414617228,0.017578125
1451414618522,0.0224609375
1451414621075,0.0205078125
1451414621745,0.0185546875
1451414623635,0.021484375
1451414625333,0.021484375
1451414627043,0.0205078125
1451414628868,0.021484375
1451414631076,0.0224609375
1451414637133,0.0185546875
1451414638365,0.017578125
1451414639597,0.0185546875
1451414641694,0.0185546875
1451414643350,0.0185546875
1451414645100,0.0205078125
1451414646771,0.0205078125
1451414648189,0.0205078125
1451414651087,0.017578125
1451414652707,0.017578125
1451414654198,0.0224609375
1451414656164,0.01953125
1451414657762,0.0205078125
1451414659510,0.0185546875
1451414662223,0.017578125
1451414665387,0.021484375
1451414667205,0.0185546875
1451414668974,0.0205078125
1451414671100,0.0185546875
1451414671608,0.01953125
1451414673030,0.0205078125
1451414674711,0.0205078125
1451414676715,0.021484375
1451414678343,0.021484375
1451414681084,0.0205078125
1451414681770,0.021484375
1451414683383,0.021484375
1451414684920,0.021484375
1451414686452,0.0224609375
1451414688376,0.0224609375
1451414689615,0.0185546875
1451414691251,0.021484375
1451414692889,0.021484375
1451414694417,0.01953125
1451414697934,0.01953125
1451414701803,0.01953125
1451414703579,0.0205078125
1451414705359,0.01953125
1451414707524,0.0205078125
1451414709123,0.01953125
1451414713328,0.01953125
1451414715045,0.01953125
1451414717909,0.0224609375
1451414721470,0.017578125
1451414725344,0.017578125
1451414726746,0.0205078125
1451414728193,0.0205078125
1451414729609,0.0205078125
1451414731245,0.021484375
1451414732481,0.017578125
1451414734251,0.0185546875
1451414738482,0.017578125
1451414742198,0.021484375
1451414743731,0.0205078125
1451414746695,0.0185546875
1451414749738,0.021484375
1451414751546,0.0224609375
1451414752782,0.0205078125
1451414754246,0.0224609375
1451414755711,0.01953125
1451414756943,0.017578125
1451414759023,0.0224609375
1451414762024,0.01953125
1451414765536,0.01953125
1451414767240,0.01953125
1451414771097,0.017578125
1451414772105,0.0205078125
1451414773425,0.01953125
1451414774929,0.0224609375
1451414776190,0.0205078125
1451414778246,0.0205078125
1451414779968,0.0185546875
1451414782356,0.017578125
1451414785579,0.017578125
1451414786829,0.0185546875
1451414788101,0.01953125
1451414791488,0.0205078125
1451414793370,0.021484375
1451414796630,0.01953125
1451414797827,0.0205078125
1451414801207,0.01953125
1451414803437,0.021484375
1451414804712,0.021484375
1451414806290,0.021484375
1451414808078,0.0205078125
1451414809505,0.0185546875
1451414815019,0.021484375
1451414816489,0.017578125
1451414818038,0.01953125
1451414819862,0.0224609375
1451414822984,0.021484375
1451414824531,0.021484375
1451414826955,0.017578125
1451414828823,0.0224609375
1451414831608,0.0224609375
1451414833168,0.0205078125
1451414834406,0.017578125
1451414835663,0.0205078125
1451414837066,0.021484375
1451414839127,0.017578125
1451414841111,0.017578125
1451414842419,0.0205078125
1451414843816,0.0185546875
1451414852337,0.0205078125
1451414853927,0.021484375
1451414855755,0.0224609375
1451414857267,0.0185546875
1451414859213,0.021484375
1451414862576,0.01953125
1451414863912,0.0224609375
1451414869925,0.017578125
1451414871718,0.0224609375
1451414873370,0.0224609375
1451414874618,0.0185546875
1451414877548,0.021484375
1451414878796,0.0205078125
1451414881125,0.021484375
1451414881755,0.0205078125
1451414883189,0.01953125
1451414884643,0.021484375
1451414885883,0.017578125
1451414887612,0.0224609375
1451414889264,0.0185546875
1451414891188,0.01953125
1451414892500,0.0224609375
1451414894325,0.0205078125
1451414897321,0.0224609375
1451414902242,0.017578125
1451414903680,0.017578125
1451414906075,0.01953125
1451414907727,0.0224609375
1451414909167,0.0185546875
1451414911131,0.0205078125
1451414914706,0.021484375
1451414915944,0.017578125
1451414917383,0.0185546875
1451414919350,0.01953125
1451414922147,0.0185546875
1451414925043,0.0224609375
1451414927007,0.017578125
1451414929510,0.01953125
1451414931232,0.021484375
1451414932654,0.0205078125
1451414934243,0.01953125
1451414936217,0.0224609375
1451414939313,0.021484375
1451414941133,0.0205078125
1451414944014,0.0205078125
1451414945260,0.0205078125
1451414948257,0.0224609375
1451414949763,0.0185546875
1451414951825,0.01953125
1451414953147,0.01953125
1451414956152,0.0224609375
1451414957744,0.0205078125
1451414958980,0.017578125
1451414963047,0.017578125
1451414964791,0.01953125
1451414966830,0.017578125
1451414968203,0.01953125
1451414969694,0.017578125
1451414971142,0.0205078125
1451414976213,0.01953125
1451414978949,0.021484375
1451414981123,0.0205078125
1451414981548,0.0185546875
1451414982858,0.0224609375
1451414984190,0.0224609375
1451414985614,0.021484375
1451414987223,0.01953125
1451414988967,0.0205078125
1451414991125,0.0185546875
1451414994125,0.017578125
1451414995916,0.017578125
1451414997588,0.021484375
1451414998922,0.017578125
1451415001140,0.0205078125
1451415002053,0.01953125
1451415003917,0.017578125
1451415005526,0.0205078125
1451415007049,0.0224609375
1451415008599,0.01953125
1451415011128,0.0224609375
1451415012470,0.0224609375
1451415013984,0.0205078125
1451415015417,0.021484375
1451415017045,0.0205078125
1451415018693,0.0205078125
1451415021129,0.021484375
1451415022662,0.017578125
1451415024032,0.0224609375
1451415025502,0.01953125
1451415027496,0.0205078125
1451415029413,0.01953125
1451415032553,0.01953125
1451415033897,0.021484375
1451415035798,0.01953125
1451415039693,0.0205078125
1451415041536,0.01953125
1451415043015,0.01953125
1451415044733,0.0205078125
1451415047881,0.01953125
1451415049337,0.021484375
1451415052982,0.01953125
1451415054278,0.021484375
1451415055853,0.01953125
1451415057511,0.021484375
1451415059485,0.0185546875
1451415062737,0.0205078125
1451415064082,0.0185546875
1451415065654,0.0224609375
1451415067330,0.01953125
1451415069244,0.0205078125
1451415071135,0.021484375
1451415072729,0.0205078125
1451415076343,0.0185546875
1451415077970,0.021484375
1451415079310,0.01953125
1451415081144,0.021484375
1451415082390,0.017578125
1451415087107,0.01953125
1451415088399,0.021484375
1451415089813,0.01953125
1451415092510,0.017578125
1451415094224,0.0205078125
1451415098113,0.017578125
1451415099819,0.0205078125
1451415101139,0.017578125
1451415103759,0.017578125
1451415106414,0.0224609375
1451415107744,0.021484375
1451415112327,0.0205078125
1451415115479,0.0185546875
1451415116749,0.01953125
1451415117985,0.017578125
1451415122844,0.01953125
1451415124677,0.0205078125
1451415133854,0.0205078125
1451415135699,0.021484375
1451415137244,0.0205078125
1451415138753,0.01953125
1451415141153,0.0205078125
1451415141919,0.021484375
1451415143867,0.017578125
1451415145919,0.0185546875
1451415147158,0.017578125
1451415149148,0.017578125
1451415151154,0.017578125
1451415156407,0.01953125
1451415157801,0.0205078125
1451415159565,0.021484375
1451415161944,0.017578125
1451415163833,0.0224609375
1451415165740,0.0224609375
1451415167121,0.017578125
1451415168549,0.021484375
1451415171147,0.01953125
1451415171987,0.0205078125
1451415177656,0.021484375
1451415182107,0.0205078125
1451415183343,0.017578125
1451415187126,0.0205078125
1451415189968,0.017578125
1451415191380,0.021484375
1451415192672,0.01953125
1451415194105,0.0224609375
1451415195719,0.0205078125
1451415197721,0.01953125
1451415201362,0.0205078125
1451415202668,0.0205078125
1451415204556,0.01953125
1451415207487,0.017578125
1451415208727,0.01953125
1451415211211,0.01953125
1451415216322,0.01953125
1451415218178,0.0185546875
1451415221155,0.0185546875
1451415221725,0.0205078125
1451415223207,0.021484375
1451415224927,0.0224609375
1451415228462,0.0205078125
1451415232020,0.0224609375
1451415234790,0.017578125
1451415236493,0.0205078125
1451415241163,0.0224609375
1451415243482,0.017578125
1451415245068,0.0224609375
1451415246960,0.0185546875
1451415251159,0.0224609375
1451415251873,0.01953125
1451415253295,0.0224609375
1451415254966,0.0224609375
1451415261161,0.0205078125
1451415261914,0.0224609375
1451415267853,0.017578125
1451415271570,0.0224609375
1451415272990,0.0205078125
1451415274406,0.0224609375
1451415276501,0.021484375
1451415279513,0.0224609375
1451415281307,0.021484375
1451415282614,0.0185546875
1451415284294,0.0205078125
1451415286144,0.021484375
1451415287572,0.017578125
1451415289113,0.01953125
1451415291163,0.017578125
1451415291637,0.01953125
1451415294439,0.0205078125
1451415295926,0.017578125
1451415297368,0.0185546875
1451415299126,0.0185546875
1451415302047,0.017578125
1451415303523,0.0205078125
1451415304915,0.0224609375
1451415306157,0.01953125
1451415307477,0.0205078125
1451415311166,0.017578125
1451415314574,0.01953125
1451415315819,0.0205078125
1451415317185,0.0205078125
1451415319241,0.0224609375
1451415322059,0.017578125
1451415324034,0.021484375
1451415327952,0.017578125
1451415329721,0.0205078125
1451415331403,0.0185546875
1451415333287,0.0224609375
1451415335119,0.01953125
1451415336559,0.01953125
1451415337872,0.021484375
1451415339592,0.0205078125
1451415341170,0.0205078125
1451415344014,0.0185546875
1451415345467,0.0205078125
1451415346939,0.021484375
1451415348767,0.0224609375
1451415350013,0.021484375
1451415351712,0.0205078125
1451415354734,0.0224609375
1451415358125,0.01953125
1451415361449,0.017578125
1451415363317,0.01953125
1451415365119,0.021484375
1451415366560,0.0185546875
1451415369708,0.01953125
1451415371513,0.0205078125
1451415376797,0.0185546875
1451415378433,0.0224609375
1451415381176,0.0205078125
1451415383536,0.0205078125
1451415385543,0.017578125
1451415386947,0.0224609375
1451415389245,0.017578125
1451415391181,0.0224609375
1451415394362,0.0224609375
1451415395888,0.0224609375
1451415399013,0.021484375
1451415401183,0.017578125
1451415402005,0.0224609375
1451415403425,0.021484375
1451415406438,0.017578125
1451415408104,0.0185546875
1451415411181,0.017578125
1451415413557,0.01953125
1451415415084,0.0185546875
1451415416715,0.017578125
1451415418924,0.0205078125
1451415421872,0.021484375
1451415423338,0.017578125
1451415425153,0.0185546875
1451415426607,0.0224609375
1451415427923,0.0185546875
1451415429237,0.0205078125
1451415435174,0.021484375
1451415438350,0.021484375
1451415441185,0.0205078125
1451415441925,0.021484375
1451415444463,0.017578125
1451415446100,0.0224609375
1451415447568,0.021484375
1451415451196,0.017578125
1451415452234,0.021484375
1451415453969,0.01953125
1451415455557,0.0185546875
1451415456793,0.0185546875
1451415459409,0.0185546875
1451415462714,0.0224609375
1451415465989,0.0185546875
1451415467693,0.0205078125
1451415469105,0.0185546875
1451415471189,0.01953125
1451415474980,0.0224609375
1451415476216,0.021484375
1451415482601,0.021484375
1451415484601,0.0185546875
1451415486429,0.021484375
1451415488113,0.021484375
1451415489796,0.0224609375
1451415492063,0.0185546875
1451415494689,0.0205078125
1451415496279,0.0205078125
1451415498103,0.0185546875
1451415499881,0.0205078125
1451415501303,0.01953125
1451415502748,0.0224609375
1451415504730,0.017578125
1451415505974,0.017578125
1451415507252,0.021484375
1451415509401,0.017578125
1451415512789,0.021484375
1451415514687,0.0205078125
1451415518064,0.0224609375
1451415522723,0.017578125
1451415524777,0.0205078125
1451415527751,0.0224609375
1451415529842,0.0185546875
1451415531500,0.0205078125
1451415537117,0.0205078125
1451415538871,0.017578125
1451415541197,0.01953125
1451415541917,0.0185546875
1451415543532,0.01953125
1451415545208,0.01953125
1451415546592,0.0224609375
1451415548034,0.01953125
1451415549695,0.021484375
1451415553233,0.0205078125
1451415554483,0.0205078125
1451415555763,0.01953125
1451415557252,0.0205078125
1451415559278,0.01953125
1451415562937,0.017578125
1451415564197,0.0205078125
1451415566131,0.017578125
1451415568103,0.021484375
1451415571222,0.017578125
1451415572792,0.017578125
1451415574323,0.0205078125
1451415576085,0.0205078125
1451415579631,0.021484375
1451415581603,0.017578125
1451415583085,0.0185546875
1451415586210,0.01953125
1451415587710,0.01953125
1451415589831,0.0205078125
1451415591253,0.0205078125
1451415599290,0.021484375
1451415601208,0.017578125
1451415602726,0.01953125
1451415605923,0.01953125
1451415608723,0.0224609375
1451415612342,0.021484375
1451415617146,0.021484375
1451415619573,0.021484375
1451415621205,0.0224609375
1451415623250,0.021484375
1451415626096,0.021484375
1451415627730,0.021484375
1451415631222,0.0224609375
1451415631927,0.0224609375
1451415633165,0.021484375
1451415635597,0.0224609375
1451415636837,0.0224609375
1451415638078,0.0224609375
1451415641214,0.0205078125
1451415642956,0.0205078125
1451415644272,0.0205078125
1451415645761,0.021484375
1451415648193,0.021484375
1451415649427,0.021484375
1451415651210,0.021484375
1451415651903,0.0205078125
1451415653142,0.0224609375
1451415654382,0.0205078125
1451415656806,0.0224609375
1451415658046,0.0224609375
1451415659293,0.0205078125
1451415661211,0.021484375
1451415662973,0.0224609375
1451415666986,0.0205078125
1451415671223,0.0224609375
1451415673043,0.021484375
1451415674281,0.0224609375
1451415675515,0.0224609375
1451415676755,0.021484375
1451415677993,0.0224609375
1451415681214,0.021484375
1451415682852,0.0224609375
1451415684092,0.0205078125
1451415685439,0.0224609375
1451415692231,0.0224609375
1451415695838,0.021484375
1451415697074,0.0224609375
1451415699505,0.021484375
1451415701217,0.021484375
1451415703185,0.021484375
1451415704667,0.0205078125
1451415706011,0.0205078125
1451415707240,0.021484375
1451415708478,0.021484375
1451415709714,0.021484375
1451415711218,0.0224609375
1451415712180,0.0224609375
1451415714613,0.0224609375
1451415715849,0.0224609375
1451415718277,0.0205078125
1451415719523,0.0205078125
1451415722000,0.0205078125
1451415723194,0.0205078125
1451415726003,0.021484375
1451415729635,0.0205078125
1451415731223,0.0205078125
1451415733290,0.0205078125
1451415734528,0.0205078125
1451415736958,0.0224609375
1451415738192,0.0224609375
1451415739430,0.021484375
1451415741221,0.0205078125
1451415741915,0.0205078125
1451415744377,0.0224609375
1451415745845,0.0224609375
1451415747848,0.0224609375
1451415749078,0.0224609375
1451415753016,0.021484375
1451415754200,0.021484375
1451415755443,0.0224609375
1451415759064,0.021484375
1451415761227,0.021484375
1451415761606,0.0205078125
1451415763083,0.0224609375
1451415767923,0.0224609375
1451415769163,0.0224609375
1451415771227,0.021484375
1451415771631,0.021484375
1451415772867,0.021484375
1451415775296,0.0224609375
1451415778916,0.0224609375
1451415782547,0.021484375
1451415785379,0.0224609375
1451415789004,0.021484375
1451415792622,0.021484375
1451415795045,0.021484375
1451415798673,0.021484375
1451415799915,0.021484375
1451415804950,0.021484375
1451415814417,0.0224609375
1451415816848,0.021484375
1451415818086,0.0224609375
1451415819364,0.017578125
1451415821236,0.01953125
1451415822796,0.021484375
1451415824271,0.0185546875
1451415827135,0.021484375
1451415828894,0.0224609375
1451415835372,0.0224609375
1451415838235,0.01953125
1451415839943,0.01953125
1451415841497,0.01953125
1451415843714,0.01953125
1451415845014,0.0205078125
1451415846434,0.021484375
1451415848524,0.01953125
1451415849979,0.017578125
1451415851239,0.017578125
1451415852994,0.0224609375
1451415854529,0.0224609375
1451415857630,0.017578125
1451415859146,0.01953125
1451415861242,0.017578125
1451415861664,0.01953125
1451415863079,0.01953125
1451415865823,0.021484375
1451415869061,0.017578125
1451415871244,0.0224609375
1451415872914,0.017578125
1451415874574,0.0185546875
1451415877635,0.0185546875
1451415878927,0.0205078125
1451415881809,0.0224609375
1451415883500,0.021484375
1451415885246,0.01953125
1451415886488,0.021484375
1451415888475,0.0205078125
1451415889894,0.021484375
1451415891247,0.017578125
1451415893181,0.0205078125
1451415895164,0.01953125
1451415897892,0.0224609375
1451415899352,0.0205078125
1451415901242,0.0205078125
1451415902024,0.021484375
1451415904761,0.017578125
1451415906259,0.0224609375
1451415908153,0.0205078125
1451415910129,0.021484375
1451415912130,0.0224609375
1451415914156,0.0224609375
1451415915646,0.01953125
1451415917448,0.0224609375
1451415918699,0.017578125
1451415921245,0.017578125
1451415922429,0.021484375
1451415924226,0.01953125
1451415925500,0.0185546875
1451415927868,0.017578125
1451415929168,0.021484375
1451415931249,0.01953125
1451415932405,0.017578125
1451415934033,0.021484375
1451415938169,0.017578125
1451415941358,0.0205078125
1451415942782,0.021484375
1451415944374,0.0185546875
1451415946241,0.021484375
1451415948154,0.0224609375
1451415949383,0.017578125
1451415951251,0.01953125
1451415952462,0.0185546875
1451415954308,0.01953125
1451415955562,0.01953125
1451415957028,0.01953125
1451415958687,0.01953125
1451415962799,0.021484375
1451415964611,0.017578125
1451415966454,0.01953125
1451415967708,0.01953125
1451415971254,0.021484375
1451415971906,0.0205078125
1451415973855,0.01953125
1451415975697,0.0205078125
1451415977529,0.0224609375
1451415979558,0.0224609375
1451415981252,0.01953125
1451415982672,0.021484375
1451415986583,0.021484375
1451415989883,0.017578125
1451415991929,0.0205078125
1451415993922,0.017578125
1451415995154,0.0185546875
1451415997094,0.021484375
1451415998930,0.021484375
1451416001257,0.0205078125
1451416003455,0.017578125
1451416005421,0.0185546875
1451416006937,0.021484375
1451416008344,0.021484375
1451416009958,0.021484375
1451416011478,0.0205078125
1451416012838,0.021484375
1451416014073,0.017578125
1451416021258,0.01953125
1451416022210,0.0205078125
1451416023874,0.0224609375
1451416025782,0.01953125
1451416027245,0.01953125
1451416028881,0.01953125
1451416031261,0.01953125
1451416032067,0.021484375
1451416033759,0.01953125
1451416035926,0.021484375
1451416037164,0.0205078125
1451416038730,0.017578125
1451416041265,0.0224609375
1451416041481,0.021484375
1451416042834,0.021484375
1451416044425,0.0185546875
1451416046059,0.017578125
1451416047912,0.0205078125
1451416051878,0.017578125
1451416053850,0.017578125
1451416055599,0.017578125
1451416056833,0.0205078125
1451416058295,0.01953125
1451416059890,0.0224609375
1451416061697,0.0224609375
1451416063012,0.01953125
1451416064638,0.0205078125
1451416065922,0.01953125
1451416068468,0.0224609375
1451416070021,0.01953125
1451416071957,0.01953125
1451416075688,0.0185546875
1451416076924,0.017578125
1451416079710,0.0224609375
1451416083085,0.01953125
1451416084474,0.01953125
1451416086121,0.01953125
1451416088685,0.017578125
1451416091268,0.021484375
1451416091692,0.0205078125
1451416094276,0.017578125
1451416095776,0.021484375
1451416097695,0.0185546875
1451416099527,0.01953125
1451416101274,0.021484375
1451416102131,0.0205078125
1451416103526,0.0224609375
1451416105198,0.0205078125
1451416106434,0.017578125
1451416108587,0.01953125
1451416110025,0.021484375
1451416113575,0.017578125
1451416115434,0.017578125
1451416117360,0.021484375
1451416119446,0.0205078125
1451416121276,0.01953125
1451416122230,0.0224609375
1451416123691,0.0185546875
1451416126457,0.021484375
1451416128334,0.0205078125
1451416129563,0.017578125
1451416131370,0.021484375
1451416133102,0.017578125
1451416134716,0.0205078125
1451416138493,0.0205078125
1451416142203,0.0205078125
1451416143601,0.017578125
1451416145484,0.0205078125
1451416146968,0.0224609375
1451416148832,0.0185546875
1451416151277,0.0205078125
1451416153397,0.021484375
1451416155135,0.0205078125
1451416156555,0.01953125
1451416158214,0.021484375
1451416163488,0.021484375
1451416171284,0.0205078125
1451416172646,0.0185546875
1451416174378,0.0185546875
1451416176818,0.01953125
1451416178349,0.017578125
1451416179609,0.021484375
1451416181343,0.021484375
1451416182825,0.017578125
1451416184233,0.021484375
1451416187914,0.0205078125
1451416189460,0.021484375
1451416192439,0.021484375
1451416194012,0.021484375
1451416197274,0.01953125
1451416198992,0.0205078125
1451416201280,0.0185546875
1451416202222,0.021484375
1451416203624,0.01953125
1451416205424,0.01953125
1451416207021,0.021484375
1451416208505,0.01953125
1451416211414,0.021484375
1451416212830,0.01953125
1451416214074,0.021484375
1451416215444,0.0205078125
1451416217148,0.0205078125
1451416218477,0.0205078125
1451416220083,0.0185546875
1451416223057,0.0205078125
1451416224988,0.0185546875
1451416227154,0.01953125
1451416229004,0.017578125
1451416232078,0.017578125
1451416233381,0.021484375
1451416235235,0.0185546875
1451416236475,0.0205078125
1451416238389,0.0205078125
1451416241786,0.01953125
1451416243150,0.0205078125
1451416246504,0.01953125
1451416248249,0.0205078125
1451416249715,0.017578125
1451416251313,0.01953125
1451416253071,0.021484375
1451416256710,0.0224609375
1451416258584,0.0205078125
1451416260429,0.01953125
1451416263494,0.0224609375
1451416264767,0.021484375
1451416266472,0.0224609375
1451416267894,0.017578125
1451416269680,0.0205078125
1451416271294,0.017578125
1451416272982,0.021484375
1451416274817,0.021484375
1451416276473,0.0205078125
1451416277959,0.0205078125
1451416279291,0.021484375
1451416286473,0.01953125
1451416287545,0.01953125
1451416290699,0.0185546875
1451416292387,0.0224609375
1451416296482,0.017578125
1451416296880,0.017578125
1451416298148,0.0185546875
1451416302617,0.0205078125
1451416303887,0.0185546875
1451416306476,0.0185546875
1451416307139,0.017578125
1451416309028,0.01953125
1451416310746,0.01953125
1451416312304,0.0224609375
1451416313585,0.01953125
1451416314987,0.0205078125
1451416317009,0.0185546875
1451416318635,0.021484375
1451416319898,0.0224609375
1451416321358,0.01953125
1451416323038,0.0205078125
1451416324434,0.0205078125
1451416327324,0.017578125
1451416329075,0.021484375
1451416330619,0.0205078125
1451416331980,0.0185546875
1451416335092,0.021484375
1451416336518,0.0205078125
1451416338686,0.01953125
1451416340263,0.0224609375
1451416341664,0.017578125
1451416342897,0.017578125
1451416346481,0.017578125
1451416349829,0.017578125
1451416351348,0.021484375
1451416354724,0.017578125
1451416357171,0.01953125
1451416362028,0.0185546875
1451416363588,0.01953125
1451416364946,0.017578125
1451416370773,0.0205078125
1451416373485,0.017578125
1451416374881,0.0205078125
1451416376778,0.021484375
1451416378734,0.021484375
1451416381944,0.0205078125
1451416383775,0.021484375
1451416387444,0.021484375
1451416388892,0.0224609375
1451416390316,0.01953125
1451416393788,0.0205078125
1451416395023,0.017578125
1451416396495,0.0205078125
1451416398091,0.0224609375
1451416400330,0.0205078125
1451416403854,0.01953125
1451416405230,0.01953125
1451416406652,0.01953125
1451416408254,0.0205078125
1451416411351,0.021484375
1451416412637,0.01953125
1451416414469,0.021484375
1451416416788,0.017578125
1451416418014,0.021484375
1451416419484,0.021484375
1451416421376,0.0205078125
1451416423283,0.01953125
1451416424837,0.0224609375
1451416431478,0.0224609375
1451416433024,0.0224609375
1451416434428,0.017578125
1451416436492,0.0224609375
1451416437209,0.0205078125
1451416440873,0.021484375
1451416442887,0.0185546875
1451416444716,0.021484375
1451416446494,0.0224609375
1451416448088,0.01953125
1451416454377,0.021484375
1451416456504,0.0224609375
1451416456868,0.017578125
1451416458100,0.01953125
1451416459752,0.021484375
1451416461232,0.0185546875
1451416464064,0.017578125
1451416465307,0.0205078125
1451416467153,0.01953125
1451416468399,0.01953125
1451416469991,0.0224609375
1451416473128,0.017578125
1451416474660,0.017578125
1451416477656,0.017578125
1451416478886,0.017578125
1451416480709,0.021484375
1451416482149,0.021484375
1451416483587,0.0224609375
1451416486498,0.0224609375
1451416487634,0.0205078125
1451416488954,0.0224609375
1451416490562,0.0185546875
1451416492333,0.0185546875
1451416493889,0.021484375
1451416497273,0.017578125
1451416499104,0.0185546875
1451416500358,0.021484375
1451416502054,0.0205078125
1451416503752,0.0224609375
1451416505384,0.021484375
1451416506785,0.0224609375
1451416508289,0.021484375
1451416509725,0.017578125
1451416512326,0.0185546875
1451416513984,0.021484375
1451416515350,0.0224609375
1451416516693,0.0185546875
1451416522133,0.01953125
1451416523649,0.017578125
1451416526890,0.01953125
1451416536527,0.021484375
1451416540696,0.0205078125
1451416542358,0.0224609375
1451416543886,0.017578125
1451416546510,0.01953125
1451416547461,0.01953125
1451416548837,0.0224609375
1451416550449,0.0224609375
1451416551853,0.01953125
1451416556514,0.0205078125
1451416557040,0.0224609375
1451416558913,0.0205078125
1451416560160,0.0224609375
1451416561871,0.021484375
1451416563707,0.0185546875
1451416565071,0.0224609375
1451416567906,0.0205078125
1451416571426,0.0205078125
1451416574293,0.017578125
1451416576515,0.021484375
1451416578109,0.0185546875
1451416579589,0.0224609375
1451416581356,0.021484375
1451416582592,0.021484375
1451416587345,0.0205078125
1451416593163,0.0185546875
1451416594395,0.017578125
1451416597040,0.017578125
1451416598716,0.0224609375
1451416599955,0.0205078125
1451416601711,0.01953125
1451416603223,0.021484375
1451416606524,0.0224609375
1451416607859,0.0224609375
1451416609710,0.01953125
1451416611448,0.021484375
1451416613253,0.0224609375
1451416617189,0.0205078125
1451416618823,0.0224609375
1451416620249,0.0224609375
1451416631095,0.0205078125
1451416632997,0.0205078125
1451416636518,0.01953125
1451416637618,0.017578125
1451416639068,0.017578125
1451416640772,0.021484375
1451416643965,0.0224609375
1451416646524,0.0224609375
1451416650936,0.01953125
1451416652802,0.0205078125
1451416654636,0.0205078125
1451416656833,0.017578125
1451416659064,0.017578125
1451416660481,0.0205078125
1451416661960,0.01953125
1451416664884,0.021484375
1451416666574,0.0224609375
1451416669517,0.017578125
1451416673473,0.017578125
1451416674739,0.021484375
1451416676524,0.017578125
1451416677224,0.017578125
1451416678974,0.021484375
1451416680672,0.0205078125
1451416682535,0.021484375
1451416687547,0.0205078125
1451416688884,0.01953125
1451416690667,0.0224609375
1451416692170,0.01953125
1451416694792,0.0224609375
1451416696528,0.01953125
1451416698659,0.021484375
1451416700376,0.021484375
1451416701929,0.01953125
1451416703533,0.021484375
1451416704790,0.017578125
1451416707704,0.0224609375
1451416708946,0.0224609375
1451416710833,0.0205078125
1451416712979,0.017578125
1451416714567,0.021484375
1451416716531,0.0205078125
1451416717806,0.017578125
1451416719056,0.0224609375
1451416720440,0.0205078125
1451416722402,0.0224609375
1451416729715,0.0224609375
1451416731293,0.01953125
1451416732614,0.0205078125
1451416734080,0.0205078125
1451416738633,0.0224609375
1451416740440,0.021484375
1451416741875,0.021484375
1451416743189,0.021484375
1451416744512,0.0224609375
1451416746532,0.0224609375
1451416748130,0.01953125
1451416752241,0.0224609375
1451416753845,0.0224609375
1451416755305,0.017578125
1451416756817,0.0185546875
1451416758580,0.0185546875
1451416762654,0.017578125
1451416764262,0.021484375
1451416766537,0.021484375
1451416771199,0.01953125
1451416773922,0.017578125
1451416776540,0.01953125
1451416777720,0.017578125
1451416779725,0.0205078125
1451416781173,0.01953125
1451416782675,0.0205078125
1451416784199,0.0224609375
1451416786540,0.0224609375
1451416790138,0.01953125
1451416791500,0.017578125
1451416792775,0.0205078125
1451416794719,0.0205078125
1451416796549,0.021484375
1451416797605,0.017578125
1451416798835,0.0224609375
1451416801948,0.0205078125
1451416803448,0.01953125
1451416808395,0.0205078125
1451416809927,0.021484375
1451416812731,0.021484375
1451416814450,0.021484375
1451416816654,0.0205078125
1451416822923,0.0224609375
1451416827596,0.017578125
1451416829262,0.0205078125
1451416830978,0.01953125
1451416834393,0.01953125
1451416836567,0.0224609375
1451416838563,0.017578125
1451416840582,0.021484375
1451416842096,0.0205078125
1451416845344,0.0205078125
1451416847086,0.0224609375
1451416848759,0.0224609375
1451416850411,0.0205078125
1451416852891,0.0224609375
1451416854230,0.017578125
1451416857186,0.017578125
1451416859701,0.0205078125
1451416861015,0.01953125
1451416862517,0.021484375
1451416863895,0.017578125
1451416865129,0.0205078125
1451416866634,0.0205078125
1451416869522,0.0185546875
1451416870944,0.0224609375
1451416873490,0.017578125
1451416875007,0.01953125
1451416876935,0.0205078125
1451416878179,0.017578125
1451416879865,0.0185546875
1451416881245,0.021484375
1451416883930,0.021484375
1451416885388,0.017578125
1451416886914,0.017578125
1451416888160,0.017578125
1451416889871,0.0224609375
1451416896574,0.021484375
1451416896972,0.0205078125
1451416899082,0.0224609375
1451416902476,0.01953125
1451416904167,0.0205078125
1451416907065,0.021484375
1451416908654,0.0224609375
1451416912236,0.01953125
1451416913698,0.01953125
1451416915394,0.0224609375
1451416917333,0.0205078125
1451416920537,0.021484375
1451416922410,0.0224609375
1451416924278,0.01953125
1451416926578,0.021484375
1451416927824,0.0205078125
1451416929244,0.0185546875
1451416930715,0.017578125
1451416931995,0.021484375
1451416934979,0.0205078125
1451416939912,0.0205078125
1451416941314,0.0224609375
1451416942740,0.021484375
1451416944389,0.01953125
1451416946559,0.0205078125
1451416947981,0.0224609375
1451416949237,0.0205078125
1451416950484,0.017578125
1451416951802,0.0205078125
1451416954482,0.01953125
1451416956798,0.017578125
1451416959707,0.0205078125
1451416961049,0.017578125
1451416962725,0.021484375
1451416964166,0.0185546875
1451416967386,0.021484375
1451416970463,0.021484375
1451416972659,0.0185546875
1451416974305,0.0205078125
1451416976564,0.021484375
1451416977530,0.01953125
1451416979954,0.0205078125
1451416982008,0.021484375
1451416983910,0.01953125
1451416986591,0.017578125
1451416987777,0.01953125
1451416989073,0.017578125
1451416990654,0.0224609375
1451416992480,0.017578125
1451416994304,0.01953125
1451416996570,0.0224609375
1451416997765,0.0205078125
1451417000927,0.01953125
1451417003836,0.01953125
1451417006568,0.021484375
1451417007146,0.01953125
1451417008860,0.021484375
1451417012565,0.01953125
1451417016593,0.017578125
1451417017115,0.017578125
1451417019042,0.017578125
1451417020494,0.021484375
1451417021974,0.021484375
1451417024984,0.017578125
1451417026894,0.0185546875
1451417028480,0.0185546875
1451417031762,0.0205078125
1451417033542,0.021484375
1451417038178,0.0205078125
1451417039539,0.0205078125
1451417041371,0.01953125
1451417045408,0.01953125
1451417046944,0.0205078125
1451417048644,0.0185546875
1451417050550,0.021484375
1451417053181,0.017578125
1451417056575,0.01953125
1451417057485,0.017578125
1451417059549,0.021484375
1451417061482,0.0224609375
1451417063146,0.0224609375
1451417064612,0.017578125
1451417066578,0.021484375
1451417067507,0.0185546875
1451417068871,0.0185546875
1451417070357,0.0224609375
1451417072265,0.017578125
1451417076730,0.01953125
1451417078678,0.017578125
1451417079919,0.017578125
1451417081267,0.021484375
1451417083246,0.0205078125
1451417087645,0.0205078125
1451417089390,0.021484375
1451417090998,0.017578125
1451417092442,0.021484375
1451417094199,0.01953125
1451417096579,0.0205078125
1451417096857,0.0224609375
1451417098605,0.021484375
1451417103836,0.017578125
1451417106905,0.0205078125
1451417108543,0.01953125
1451417110085,0.0205078125
1451417111575,0.0224609375
1451417114465,0.0185546875
1451417116582,0.0185546875
1451417118864,0.0185546875
1451417120576,0.01953125
1451417124065,0.0205078125
1451417126591,0.0205078125
1451417127313,0.017578125
1451417128549,0.017578125
1451417129804,0.0185546875
1451417131292,0.0205078125
1451417135491,0.017578125
1451417137779,0.017578125
1451417139785,0.017578125
1451417143070,0.021484375
1451417144508,0.017578125
1451417146588,0.01953125
1451417147416,0.021484375
1451417148987,0.01953125
1451417150495,0.021484375
1451417152363,0.0224609375
1451417154305,0.0205078125
1451417156586,0.01953125
1451417157786,0.021484375
1451417159764,0.0224609375
1451417161290,0.0205078125
1451417162649,0.021484375
1451417163943,0.021484375
1451417167557,0.01953125
1451417169146,0.0205078125
1451417170632,0.0205078125
1451417172518,0.0205078125
1451417174285,0.021484375
1451417176591,0.021484375
1451417177503,0.0205078125
1451417182423,0.021484375
1451417183864,0.0224609375
1451417185116,0.0224609375
1451417186748,0.01953125
1451417189825,0.01953125
1451417191099,0.017578125
1451417192489,0.0185546875
1451417194495,0.01953125
1451417197632,0.017578125
1451417199748,0.017578125
1451417201524,0.01953125
1451417202760,0.0185546875
1451417204289,0.0205078125
1451417206603,0.0224609375
1451417207397,0.0185546875
1451417209033,0.0205078125
1451417212138,0.021484375
1451417214954,0.021484375
1451417218031,0.0205078125
1451417221331,0.017578125
1451417222807,0.0224609375
1451417226612,0.017578125
1451417227908,0.0205078125
1451417229326,0.021484375
1451417230775,0.021484375
1451417232169,0.0205078125
1451417233889,0.021484375
1451417235451,0.01953125
1451417237485,0.017578125
1451417239270,0.01953125
1451417241005,0.01953125
1451417242552,0.0224609375
1451417244345,0.021484375
1451417246603,0.01953125
1451417249247,0.017578125
1451417252352,0.0224609375
1451417254094,0.0224609375
1451417257208,0.0205078125
1451417261617,0.017578125
1451417263625,0.0205078125
1451417265102,0.0205078125
1451417268328,0.01953125
1451417269780,0.0185546875
1451417272727,0.01953125
1451417274255,0.021484375
1451417276603,0.0205078125
1451417277077,0.0205078125
1451417278315,0.0224609375
1451417281612,0.0205078125
1451417284356,0.017578125
1451417287085,0.017578125
1451417288649,0.0205078125
1451417291698,0.021484375
1451417294680,0.0205078125
1451417296604,0.0185546875
1451417299105,0.0205078125
1451417302297,0.0185546875
1451417304122,0.021484375
1451417306606,0.01953125
1451417308996,0.021484375
1451417310906,0.021484375
1451417312843,0.017578125
1451417316657,0.0224609375
1451417318475,0.0224609375
1451417319991,0.0205078125
1451417321804,0.017578125
1451417323032,0.017578125
1451417325098,0.01953125
1451417326608,0.017578125
1451417330529,0.017578125
1451417331973,0.021484375
1451417336610,0.021484375
1451417339116,0.01953125
1451417342205,0.0224609375
1451417343954,0.0205078125
1451417345317,0.017578125
1451417347070,0.01953125
1451417351405,0.01953125
1451417352928,0.0224609375
1451417354803,0.021484375
1451417356613,0.0185546875
1451417357803,0.0205078125
1451417359257,0.0185546875
1451417362776,0.0205078125
1451417364008,0.017578125
1451417365250,0.021484375
1451417366730,0.0185546875
1451417368645,0.0205078125
1451417371963,0.0224609375
1451417373365,0.0205078125
1451417374696,0.0205078125
1451417377182,0.017578125
1451417378602,0.0205078125
1451417380827,0.017578125
1451417384373,0.021484375
1451417386625,0.021484375
1451417388136,0.01953125
1451417389856,0.0224609375
1451417391166,0.01953125
1451417392676,0.0205078125
1451417394121,0.021484375
1451417396623,0.021484375
1451417397683,0.0205078125
1451417400761,0.017578125
1451417402067,0.0224609375
1451417403728,0.0205078125
1451417407444,0.0205078125
1451417410805,0.021484375
1451417412777,0.021484375
1451417414409,0.0224609375
1451417419256,0.01953125
1451417420716,0.021484375
1451417422403,0.0224609375
1451417423867,0.021484375
1451417425235,0.0205078125
1451417426749,0.021484375
1451417428305,0.0205078125
1451417430428,0.01953125
1451417434276,0.0185546875
1451417436638,0.021484375
1451417437745,0.017578125
1451417439671,0.0205078125
1451417442803,0.017578125
1451417446626,0.0185546875
1451417447476,0.01953125
1451417451215,0.0224609375
1451417452647,0.0205078125
1451417455299,0.017578125
1451417456758,0.021484375
1451417461797,0.0224609375
1451417463036,0.017578125
1451417464767,0.0185546875
1451417466637,0.021484375
1451417468466,0.01953125
1451417470085,0.01953125
1451417471420,0.01953125
1451417475070,0.021484375
1451417476629,0.0205078125
1451417479341,0.0224609375
1451417482797,0.021484375
1451417484245,0.0224609375
1451417486636,0.0224609375
1451417487674,0.017578125
1451417489518,0.0205078125
1451417490892,0.0205078125
1451417493991,0.021484375
1451417496640,0.01953125
1451417498124,0.017578125
1451417501732,0.021484375
1451417503085,0.017578125
1451417505329,0.01953125
1451417506637,0.017578125
1451417508339,0.0205078125
1451417512686,0.021484375
1451417514450,0.01953125
1451417516634,0.0185546875
1451417517425,0.0205078125
1451417518813,0.017578125
1451417520053,0.021484375
1451417521895,0.0224609375
1451417523125,0.021484375
1451417524518,0.0224609375
1451417526644,0.01953125
1451417527700,0.021484375
1451417530424,0.01953125
1451417533489,0.0205078125
1451417535105,0.01953125
1451417536635,0.0224609375
1451417540202,0.0185546875
1451417543975,0.0205078125
1451417546685,0.0224609375
1451417547253,0.021484375
1451417548649,0.021484375
1451417550367,0.021484375
1451417556682,0.01953125
1451417558564,0.017578125
1451417559943,0.0185546875
1451417562277,0.017578125
1451417568668,0.0205078125
1451417571460,0.01953125
1451417572869,0.0205078125
1451417574775,0.01953125
1451417576641,0.01953125
1451417577497,0.0224609375
1451417579092,0.0224609375
1451417581158,0.0205078125
1451417584434,0.01953125
1451417586651,0.017578125
1451417587083,0.017578125
1451417589689,0.01953125
1451417593962,0.017578125
1451417595194,0.0205078125
1451417598370,0.0205078125
1451417600261,0.0224609375
1451417602923,0.01953125
1451417604451,0.021484375
1451417606842,0.01953125
1451417608950,0.0205078125
1451417611710,0.01953125
1451417613218,0.0205078125
1451417616657,0.0224609375
1451417618021,0.0205078125
1451417619255,0.017578125
1451417620486,0.0185546875
1451417624576,0.017578125
1451417626648,0.0185546875
1451417627138,0.017578125
1451417628919,0.01953125
1451417630471,0.0185546875
1451417633655,0.0205078125
1451417635412,0.021484375
1451417638490,0.021484375
1451417640035,0.021484375
1451417641769,0.01953125
1451417643397,0.0205078125
1451417644895,0.021484375
1451417646659,0.0205078125
1451417648360,0.017578125
1451417649606,0.017578125
1451417651084,0.0224609375
1451417652736,0.0224609375
1451417654190,0.017578125
1451417656651,0.0224609375
1451417656877,0.017578125
1451417658681,0.0205078125
1451417660311,0.021484375
1451417661548,0.021484375
1451417662950,0.0205078125
1451417666652,0.01953125
1451417667858,0.021484375
1451417669341,0.021484375
1451417674175,0.0224609375
1451417676660,0.0205078125
1451417677542,0.017578125
1451417682525,0.017578125
1451417686655,0.021484375
1451417687666,0.01953125
1451417690954,0.0205078125
1451417692574,0.0185546875
1451417693915,0.01953125
1451417695415,0.021484375
1451417696915,0.01953125
1451417699355,0.01953125
1451417702892,0.021484375
1451417704678,0.021484375
1451417709099,0.0185546875
1451417712699,0.021484375
1451417714171,0.021484375
1451417716660,0.021484375
1451417718946,0.017578125
1451417720218,0.017578125
1451417722070,0.0205078125
1451417723847,0.0185546875
1451417725513,0.021484375
1451417729807,0.021484375
1451417731312,0.021484375
1451417735525,0.0205078125
1451417737115,0.01953125
1451417739043,0.017578125
1451417740299,0.01953125
1451417742241,0.0205078125
1451417744598,0.017578125
1451417746666,0.0224609375
1451417747892,0.021484375
1451417749360,0.0205078125
1451417750694,0.021484375
1451417752051,0.021484375
1451417753643,0.0205078125
1451417756665,0.01953125
1451417757184,0.0205078125
1451417758754,0.01953125
1451417760052,0.021484375
1451417761920,0.0224609375
1451417763456,0.021484375
1451417765359,0.017578125
1451417766889,0.01953125
1451417768421,0.021484375
1451417770355,0.021484375
1451417773566,0.021484375
1451417775310,0.021484375
1451417777346,0.0205078125
1451417779145,0.0205078125
1451417780953,0.0205078125
1451417782405,0.0205078125
1451417786674,0.021484375
1451417787246,0.021484375
1451417790637,0.0205078125
1451417791867,0.0224609375
1451417793289,0.017578125
1451417794581,0.017578125
1451417796679,0.01953125
1451417797858,0.01953125
1451417799678,0.017578125
1451417801350,0.021484375
1451417804646,0.021484375
1451417806675,0.021484375
1451417807817,0.0205078125
1451417809595,0.0224609375
1451417810833,0.017578125
1451417812668,0.021484375
1451417816675,0.0224609375
1451417817756,0.021484375
1451417819118,0.01953125
1451417822189,0.0224609375
1451417825528,0.0205078125
1451417828422,0.0205078125
1451417835207,0.0185546875
1451417836675,0.021484375
1451417838137,0.0224609375
1451417840026,0.0185546875
1451417841830,0.0224609375
1451417843066,0.017578125
1451417844570,0.0205078125
1451417847395,0.017578125
1451417848661,0.017578125
1451417853077,0.017578125
1451417854362,0.021484375
1451417856682,0.0205078125
1451417857656,0.01953125
1451417859818,0.017578125
1451417861439,0.01953125
1451417863421,0.017578125
1451417865135,0.0205078125
1451417866681,0.021484375
1451417869772,0.01953125
1451417871018,0.017578125
1451417874509,0.021484375
1451417876681,0.017578125
1451417879087,0.01953125
1451417882778,0.017578125
1451417886689,0.0185546875
1451417886961,0.0185546875
1451417891461,0.0205078125
1451417893526,0.0185546875
1451417894800,0.01953125
1451417896682,0.0224609375
1451417898335,0.0224609375
1451417903151,0.0205078125
1451417904719,0.01953125
1451417906694,0.01953125
1451417907710,0.0205078125
1451417912940,0.0224609375
1451417914739,0.021484375
1451417916699,0.0224609375
1451417918049,0.021484375
1451417920371,0.017578125
1451417922200,0.017578125
1451417924224,0.017578125
1451417925458,0.0205078125
1451417926838,0.021484375
1451417931403,0.0224609375
1451417932937,0.021484375
1451417934167,0.01953125
1451417937125,0.0224609375
1451417938736,0.021484375
1451417940564,0.0205078125
1451417942154,0.0205078125
1451417944107,0.0205078125
1451417945495,0.0205078125
1451417947687,0.0205078125
1451417949744,0.0185546875
1451417951352,0.01953125
1451417953296,0.01953125
1451417955329,0.021484375
1451417959291,0.017578125
1451417961761,0.017578125
1451417963346,0.0224609375
1451417964710,0.01953125
1451417969509,0.0224609375
1451417971173,0.017578125
1451417974734,0.0205078125
1451417976694,0.0185546875
1451417977552,0.0224609375
1451417978790,0.017578125
1451417982130,0.0205078125
1451417984645,0.017578125
1451417986695,0.017578125
1451417987555,0.017578125
1451417989139,0.0205078125
1451417992172,0.017578125
1451417993650,0.0224609375
1451417995066,0.0205078125
1451417996909,0.0224609375
1451417998329,0.0205078125
1451417999937,0.0185546875
1451418003607,0.0205078125
1451418005166,0.021484375
1451418008650,0.0205078125
1451418010182,0.0205078125
1451418012251,0.017578125
1451418015231,0.01953125
1451418016697,0.017578125
1451418017700,0.0224609375
1451418019672,0.021484375
1451418022950,0.021484375
1451418024408,0.0224609375
1451418026705,0.021484375
1451418027615,0.01953125
1451418029363,0.0205078125
1451418030789,0.021484375
1451418032366,0.0205078125
1451418033638,0.01953125
1451418038873,0.021484375
1451418041019,0.017578125
1451418042245,0.017578125
1451418043509,0.0205078125
1451418045320,0.0205078125
1451418046704,0.017578125
1451418048324,0.021484375
1451418049832,0.021484375
1451418051128,0.01953125
1451418052845,0.0224609375
1451418054687,0.0224609375
1451418056705,0.01953125
1451418057671,0.0205078125
1451418058935,0.0205078125
1451418060485,0.021484375
1451418062388,0.0224609375
1451418063636,0.0205078125
1451418065246,0.0224609375
1451418068483,0.0224609375
1451418071915,0.0224609375
1451418073336,0.021484375
1451418074646,0.021484375
1451418076706,0.0205078125
1451418081147,0.0185546875
1451418082949,0.0224609375
1451418086708,0.01953125
1451418087088,0.01953125
1451418088590,0.021484375
1451418089886,0.017578125
1451418092685,0.0205078125
1451418096709,0.021484375
1451418097141,0.0224609375
1451418098501,0.021484375
1451418111055,0.01953125
1451418112925,0.0224609375
1451418114318,0.017578125
1451418116712,0.0205078125
1451418117194,0.021484375
1451418120397,0.0205078125
1451418122431,0.021484375
1451418124651,0.01953125
1451418126714,0.0224609375
1451418127724,0.017578125
1451418128954,0.017578125
1451418130394,0.01953125
1451418133907,0.021484375
1451418135347,0.0224609375
1451418136761,0.0224609375
1451418138475,0.021484375
1451418140498,0.021484375
1451418141874,0.021484375
1451418143446,0.021484375
1451418144874,0.021484375
1451418146716,0.01953125
1451418148039,0.017578125
1451418151043,0.0224609375
1451418152949,0.01953125
1451418154547,0.0185546875
1451418156716,0.0205078125
1451418157668,0.0224609375
1451418160338,0.01953125
1451418162161,0.017578125
1451418163615,0.01953125
1451418165169,0.021484375
1451418168316,0.021484375
1451418171168,0.021484375
1451418172686,0.01953125
1451418174104,0.0185546875
1451418175393,0.021484375
1451418176749,0.01953125
1451418179831,0.0205078125
1451418181152,0.021484375
1451418182554,0.01953125
1451418184198,0.0224609375
1451418186720,0.021484375
1451418192479,0.01953125
1451418193717,0.0224609375
1451418195452,0.01953125
1451418198910,0.0224609375
1451418200908,0.021484375
1451418202367,0.01953125
1451418203655,0.01953125
1451418205373,0.0205078125
1451418206825,0.021484375
1451418208335,0.0205078125
1451418213924,0.01953125
1451418217505,0.01953125
1451418218839,0.021484375
1451418223407,0.0205078125
1451418226724,0.0185546875
1451418227958,0.0205078125
1451418229982,0.017578125
1451418231579,0.01953125
1451418234371,0.017578125
1451418236728,0.0224609375
1451418239038,0.0224609375
1451418240522,0.021484375
1451418243891,0.021484375
1451418245591,0.0224609375
1451418247051,0.021484375
1451418248515,0.0185546875
1451418253372,0.01953125
1451418254645,0.01953125
1451418257434,0.017578125
1451418259013,0.017578125
1451418261833,0.01953125
1451418263494,0.0205078125
1451418266756,0.0205078125
1451418268367,0.0224609375
1451418271641,0.021484375
1451418274445,0.0205078125
1451418276731,0.017578125
1451418276984,0.01953125
1451418278452,0.0224609375
1451418280256,0.0205078125
1451418283010,0.017578125
1451418286733,0.0205078125
1451418289577,0.017578125
1451418291205,0.01953125
1451418292758,0.0205078125
1451418294446,0.0205078125
1451418296736,0.021484375
1451418297533,0.0205078125
1451418298971,0.0205078125
1451418303317,0.0205078125
1451418306736,0.017578125
1451418308682,0.021484375
1451418310246,0.0224609375
1451418312237,0.021484375
1451418313631,0.021484375
1451418314897,0.01953125
1451418316739,0.021484375
1451418318050,0.0224609375
1451418319970,0.0224609375
1451418321210,0.021484375
1451418323124,0.021484375
1451418325506,0.0205078125
1451418327065,0.0205078125
1451418331834,0.0185546875
1451418333312,0.021484375
1451418334792,0.0205078125
1451418338360,0.0224609375
1451418339786,0.0224609375
1451418344827,0.01953125
1451418346744,0.01953125
1451418350426,0.017578125
1451418352116,0.0224609375
1451418354191,0.0224609375
1451418356741,0.0224609375
1451418357537,0.01953125
1451418360335,0.0224609375
1451418362160,0.01953125
1451418363950,0.0205078125
1451418365628,0.0224609375
1451418366959,0.0185546875
1451418368749,0.017578125
1451418370776,0.021484375
1451418372003,0.017578125
1451418373478,0.021484375
1451418374940,0.021484375
1451418376752,0.01953125
1451418379304,0.0224609375
1451418380916,0.0205078125
1451418383035,0.01953125
1451418384503,0.01953125
1451418387384,0.01953125
1451418388626,0.017578125
1451418389924,0.021484375
1451418391502,0.0205078125
1451418394435,0.021484375
1451418396747,0.01953125
1451418397769,0.0205078125
1451418399209,0.0205078125
1451418400924,0.021484375
1451418402502,0.01953125
1451418404692,0.0185546875
1451418408847,0.0205078125
1451418411431,0.017578125
1451418414246,0.01953125
1451418416750,0.0205078125
1451418417755,0.0185546875
1451418419236,0.0224609375
1451418421819,0.017578125
1451418423336,0.01953125
1451418426783,0.01953125
1451418428560,0.01953125
1451418429922,0.0224609375
1451418433246,0.0205078125
1451418437927,0.017578125
1451418439236,0.01953125
1451418442490,0.0205078125
1451418444208,0.021484375
1451418445564,0.0224609375
1451418446928,0.0224609375
1451418448897,0.01953125
1451418455026,0.0205078125
1451418457366,0.0205078125
1451418460802,0.017578125
1451418464603,0.0224609375
1451418466757,0.0205078125
1451418467845,0.0224609375
1451418469224,0.0185546875
1451418471078,0.021484375
1451418472434,0.021484375
1451418474068,0.0205078125
1451418475642,0.0224609375
1451418477157,0.0205078125
1451418480831,0.021484375
1451418482830,0.0224609375
1451418484270,0.0205078125
1451418486760,0.017578125
1451418487554,0.021484375
1451418492353,0.01953125
1451418496766,0.01953125
1451418499464,0.017578125
1451418503007,0.021484375
1451418504443,0.017578125
1451418506765,0.017578125
1451418507143,0.0224609375
1451418513412,0.0224609375
1451418516762,0.021484375
1451418517083,0.0224609375
1451418518329,0.021484375
1451418519575,0.0224609375
1451418520817,0.021484375
1451418522067,0.0224609375
1451418524124,0.0224609375
1451418525436,0.0224609375
1451418527862,0.0224609375
1451418529098,0.0224609375
1451418531061,0.021484375
1451418532296,0.021484375
1451418533527,0.021484375
1451418534773,0.0205078125
1451418536769,0.0224609375
1451418539642,0.0205078125
1451418543651,0.0224609375
1451418548455,0.0224609375
1451418554454,0.0224609375
1451418556776,0.021484375
1451418556984,0.021484375
1451418559419,0.021484375
1451418563257,0.0224609375
1451418568236,0.0205078125
1451418570665,0.021484375
1451418574283,0.0205078125
1451418575521,0.0205078125
1451418576783,0.021484375
1451418578001,0.021484375
1451418580440,0.0205078125
1451418588243,0.021484375
1451418589481,0.021484375
1451418593440,0.021484375
1451418598244,0.0224609375
1451418600679,0.0224609375
1451418603359,0.021484375
1451418604733,0.0224609375
1451418606778,0.0224609375
1451418607204,0.021484375
1451418608442,0.021484375
1451418609678,0.0224609375
1451418610916,0.021484375
1451418614541,0.0224609375
1451418616969,0.0224609375
1451418619405,0.0224609375
1451418621838,0.0205078125
1451418624542,0.021484375
1451418627085,0.0224609375
1451418628309,0.0224609375
1451418630729,0.0224609375
1451418631967,0.0224609375
1451418633208,0.0205078125
1451418635634,0.0224609375
1451418636875,0.021484375
1451418641699,0.0224609375
1451418642941,0.021484375
1451418649100,0.021484375
1451418650338,0.0224609375
1451418653463,0.0224609375
1451418654709,0.0205078125
1451418656795,0.0224609375
1451418658391,0.021484375
1451418659635,0.0205078125
1451418661106,0.0205078125
1451418662556,0.021484375
1451418664972,0.021484375
1451418667401,0.0224609375
1451418668643,0.0224609375
1451418671073,0.0224609375
1451418677092,0.0224609375
1451418678330,0.0205078125
1451418679578,0.0205078125
1451418687113,0.0224609375
1451418688348,0.021484375
1451418691968,0.021484375
1451418693204,0.0205078125
1451418698031,0.021484375
1451418702990,0.0224609375
1451418708009,0.0224609375
1451418710441,0.0205078125
1451418715506,0.0205078125
1451418720326,0.0224609375
1451418723161,0.0224609375
1451418724785,0.0205078125
1451418726791,0.021484375
1451418730924,0.021484375
1451418732852,0.0205078125
1451418738115,0.0205078125
1451418739601,0.0224609375
1451418744284,0.0224609375
1451418746796,0.0205078125
1451418748194,0.021484375
1451418749675,0.0205078125
1451418751027,0.021484375
1451418752869,0.021484375
1451418754592,0.0205078125
1451418757432,0.017578125
1451418758828,0.01953125
1451418760136,0.0224609375
1451418761806,0.01953125
1451418763684,0.0185546875
1451418766806,0.017578125
1451418767759,0.017578125
1451418771324,0.021484375
1451418773180,0.017578125
1451418776800,0.0205078125
1451418777799,0.0205078125
1451418779115,0.0205078125
1451418780553,0.021484375
1451418782243,0.0224609375
1451418786798,0.01953125
1451418787656,0.021484375
1451418789454,0.021484375
1451418791395,0.0224609375
1451418792969,0.0185546875
1451418794379,0.021484375
1451418796820,0.01953125
1451418799140,0.0205078125
1451418801766,0.021484375
1451418803423,0.0224609375
1451418804659,0.017578125
1451418806801,0.0205078125
1451418808500,0.017578125
1451418810449,0.01953125
1451418812256,0.017578125
1451418813694,0.017578125
1451418815188,0.0205078125
1451418816800,0.0205078125
1451418817797,0.0205078125
1451418822493,0.0224609375
1451418823833,0.0205078125
1451418826834,0.021484375
1451418827374,0.021484375
1451418830412,0.0205078125
1451418834153,0.017578125
1451418835523,0.0205078125
1451418837341,0.021484375
1451418840514,0.0224609375
1451418841752,0.0205078125
1451418843752,0.021484375
1451418845497,0.0224609375
1451418846805,0.01953125
1451418848147,0.0185546875
1451418849883,0.0224609375
1451418851129,0.017578125
1451418852794,0.0205078125
1451418854216,0.021484375
1451418859277,0.0205078125
1451418861141,0.01953125
1451418863071,0.0224609375
1451418864733,0.021484375
1451418866814,0.021484375
1451418870707,0.0224609375
1451418872003,0.021484375
1451418873509,0.021484375
1451418874753,0.017578125
1451418877485,0.021484375
1451418878826,0.017578125
1451418880466,0.0205078125
1451418881740,0.017578125
1451418884820,0.0205078125
1451418891579,0.0205078125
1451418893672,0.017578125
1451418895052,0.0185546875
1451418896974,0.021484375
1451418898422,0.0205078125
1451418899875,0.0205078125
1451418901157,0.017578125
1451418903455,0.01953125
1451418905155,0.021484375
1451418906814,0.0205078125
1451418911411,0.0224609375
1451418914995,0.01953125
1451418916833,0.0205078125
1451418918427,0.017578125
1451418919655,0.017578125
1451418920896,0.017578125
1451418922170,0.0185546875
1451418925140,0.021484375
1451418926826,0.017578125
1451418928289,0.0224609375
1451418929673,0.017578125
1451418930913,0.0224609375
1451418932567,0.0224609375
1451418934248,0.0205078125
1451418936818,0.0185546875
1451418937714,0.0185546875
1451418940995,0.021484375
1451418944255,0.01953125
1451418947099,0.017578125
1451418948504,0.021484375
1451418952552,0.017578125
1451418954519,0.017578125
1451418957621,0.01953125
1451418959383,0.0224609375
1451418960753,0.01953125
1451418966822,0.0205078125
1451418967360,0.0224609375
1451418968955,0.0224609375
1451418970381,0.021484375
1451418972273,0.0224609375
1451418974234,0.0224609375
1451418975514,0.017578125
1451418976844,0.0224609375
1451418979846,0.0185546875
1451418984739,0.0185546875
1451418986826,0.021484375
1451418987411,0.0185546875
1451418989197,0.0224609375
1451418990812,0.0205078125
1451418992366,0.0224609375
1451418994518,0.0205078125
1451418996827,0.0205078125
1451418997483,0.017578125
1451418998917,0.017578125
1451419000157,0.021484375
1451419004892,0.017578125
1451419007130,0.0205078125
1451419008646,0.0224609375
1451419010259,0.0205078125
1451419012155,0.0205078125
1451419015367,0.017578125
1451419016892,0.01953125
1451419022878,0.017578125
1451419024465,0.01953125
1451419026835,0.0224609375
1451419027125,0.017578125
1451419028619,0.0205078125
1451419031398,0.021484375
1451419032804,0.01953125
1451419034874,0.0224609375
1451419039595,0.0185546875
1451419041251,0.01953125
1451419042703,0.0224609375
1451419044298,0.0185546875
1451419047272,0.0224609375
1451419051465,0.0185546875
1451419053271,0.0224609375
1451419060570,0.017578125
1451419062250,0.0205078125
1451419065666,0.01953125
1451419068133,0.017578125
1451419069479,0.021484375
1451419074068,0.01953125
1451419076834,0.021484375
1451419078295,0.01953125
1451419079766,0.0205078125
1451419081317,0.01953125
1451419083209,0.0205078125
1451419084939,0.0185546875
1451419086838,0.021484375
1451419088022,0.01953125
1451419089726,0.021484375
1451419092769,0.01953125
1451419094587,0.0224609375
1451419096859,0.01953125
1451419100078,0.0205078125
1451419101500,0.021484375
1451419102992,0.021484375
1451419104672,0.0185546875
1451419106841,0.0205078125
1451419108325,0.0185546875
1451419111479,0.01953125
1451419113272,0.0205078125
1451419114718,0.01953125
1451419116840,0.0205078125
1451419117873,0.0185546875
1451419119251,0.0224609375
1451419122109,0.021484375
1451419127816,0.0185546875
1451419129434,0.021484375
1451419131008,0.01953125
1451419132800,0.017578125
1451419135107,0.0224609375
1451419136843,0.0224609375
1451419139994,0.0205078125
1451419141686,0.021484375
1451419143060,0.017578125
1451419146853,0.0224609375
1451419147709,0.021484375
1451419149511,0.01953125
1451419151046,0.0224609375
1451419152741,0.01953125
1451419154192,0.017578125
1451419155650,0.0205078125
1451419158756,0.017578125
1451419160595,0.021484375
1451419161971,0.021484375
1451419163649,0.0205078125
1451419165555,0.01953125
1451419166908,0.01953125
1451419168606,0.0224609375
1451419172204,0.01953125
1451419173993,0.0185546875
1451419175357,0.0224609375
1451419177223,0.0205078125
1451419178863,0.0224609375
1451419180641,0.01953125
1451419182550,0.0224609375
1451419186865,0.021484375
1451419188375,0.017578125
1451419189937,0.0205078125
1451419194217,0.0224609375
1451419197250,0.017578125
1451419201821,0.0205078125
1451419203353,0.01953125
1451419205259,0.0205078125
1451419208420,0.021484375
1451419212650,0.0205078125
1451419213896,0.017578125
1451419215445,0.017578125
1451419216867,0.021484375
1451419218077,0.021484375
1451419220007,0.01953125
1451419222116,0.0224609375
1451419223954,0.01953125
1451419226856,0.0224609375
1451419228787,0.01953125
1451419230627,0.0205078125
1451419232281,0.021484375
1451419235271,0.0224609375
1451419236858,0.0185546875
1451419238436,0.0185546875
1451419239694,0.021484375
1451419242276,0.021484375
1451419243997,0.01953125
1451419246859,0.021484375
1451419247889,0.017578125
1451419249262,0.0224609375
1451419252630,0.021484375
1451419253866,0.01953125
1451419256871,0.017578125
1451419259087,0.021484375
1451419260464,0.01953125
1451419261836,0.0205078125
1451419265496,0.01953125
1451419267148,0.021484375
1451419268380,0.021484375
1451419269785,0.0205078125
1451419273071,0.0205078125
1451419274447,0.017578125
1451419277330,0.0224609375
1451419278768,0.021484375
1451419280656,0.0224609375
1451419282601,0.0224609375
1451419285603,0.017578125
1451419287096,0.0205078125
1451419289003,0.021484375
1451419290496,0.021484375
1451419292280,0.021484375
1451419294486,0.021484375
1451419296870,0.021484375
1451419297482,0.0185546875
1451419302009,0.0205078125
1451419303984,0.021484375
1451419305430,0.021484375
1451419309890,0.017578125
1451419311605,0.017578125
1451419314933,0.0205078125
1451419316751,0.0224609375
1451419318742,0.0205078125
1451419319982,0.017578125
1451419321628,0.01953125
1451419324135,0.0224609375
1451419325631,0.0224609375
1451419327437,0.01953125
1451419331607,0.01953125
1451419332167,0.0185546875
1451419333870,0.01953125
1451419335286,0.017578125
1451419336634,0.0185546875
1451419341893,0.01953125
1451419343331,0.01953125
1451419345099,0.0205078125
1451419346516,0.0205078125
1451419347756,0.017578125
1451419349316,0.021484375
1451419351628,0.0185546875
1451419351980,0.01953125
1451419353809,0.0224609375
1451419361610,0.017578125
1451419363816,0.017578125
1451419365046,0.0205078125
1451419366302,0.0185546875
1451419368555,0.017578125
1451419369783,0.017578125
1451419371613,0.0205078125
1451419374438,0.0205078125
1451419376540,0.017578125
1451419377984,0.0224609375
1451419379341,0.0185546875
1451419381633,0.021484375
1451419382561,0.017578125
1451419384427,0.017578125
1451419386182,0.0224609375
1451419387626,0.01953125
1451419388986,0.0205078125
1451419392354,0.01953125
1451419394119,0.01953125
1451419397151,0.01953125
1451419398641,0.0205078125
1451419403700,0.0205078125
1451419405266,0.021484375
1451419407109,0.0224609375
1451419408657,0.021484375
1451419410439,0.0205078125
1451419412049,0.0205078125
1451419413618,0.021484375
1451419415354,0.0205078125
1451419416762,0.021484375
1451419418006,0.0205078125
1451419423159,0.01953125
1451419424691,0.01953125
1451419425963,0.017578125
1451419427277,0.0205078125
1451419429386,0.017578125
1451419431622,0.01953125
1451419432818,0.0185546875
1451419434556,0.017578125
1451419436893,0.017578125
1451419439081,0.01953125
1451419440416,0.0205078125
1451419441934,0.0224609375
1451419443402,0.017578125
1451419444940,0.021484375
1451419451625,0.01953125
1451419455047,0.021484375
1451419456336,0.0224609375
1451419458004,0.01953125
1451419462225,0.01953125
1451419463525,0.0205078125
1451419466619,0.01953125
1451419468320,0.021484375
1451419469806,0.0205078125
1451419471640,0.01953125
1451419472860,0.017578125
1451419474541,0.0185546875
1451419476169,0.0205078125
1451419477793,0.0185546875
1451419481631,0.0205078125
1451419482430,0.0205078125
1451419484148,0.0224609375
1451419485868,0.021484375
1451419487231,0.021484375
1451419489447,0.017578125
1451419491851,0.0205078125
1451419493383,0.021484375
1451419494867,0.021484375
1451419496848,0.017578125
1451419498716,0.0224609375
1451419501669,0.0185546875
1451419503353,0.0205078125
1451419505117,0.0205078125
1451419506901,0.021484375
1451419510006,0.0185546875
1451419511630,0.021484375
1451419512824,0.0205078125
1451419514668,0.0205078125
1451419516300,0.021484375
1451419517763,0.021484375
1451419519557,0.01953125
1451419521636,0.0224609375
1451419524454,0.021484375
1451419525828,0.0224609375
1451419527730,0.021484375
1451419529582,0.021484375
1451419531651,0.017578125
1451419533423,0.01953125
1451419535170,0.021484375
1451419536634,0.017578125
1451419537896,0.017578125
1451419539558,0.0205078125
1451419542340,0.017578125
1451419544177,0.0205078125
1451419545849,0.0205078125
1451419547243,0.01953125
1451419548721,0.021484375
1451419551640,0.017578125
1451419553080,0.0185546875
1451419554803,0.0205078125
1451419557689,0.0205078125
1451419559621,0.01953125
1451419561656,0.021484375
1451419562653,0.021484375
1451419564546,0.0205078125
1451419566178,0.0185546875
1451419567784,0.0224609375
1451419569818,0.0205078125
1451419571639,0.017578125
1451419572545,0.021484375
1451419573799,0.021484375
1451419575235,0.0205078125
1451419578244,0.0224609375
1451419580266,0.021484375
1451419581646,0.017578125
1451419582754,0.021484375
1451419584154,0.0224609375
1451419585391,0.017578125
1451419589633,0.021484375
1451419591656,0.021484375
1451419592964,0.0205078125
1451419594332,0.0205078125
1451419595718,0.0185546875
1451419596958,0.0224609375
1451419598829,0.01953125
1451419601639,0.017578125
1451419602415,0.017578125
1451419603821,0.0205078125
1451419606786,0.017578125
1451419608472,0.0224609375
1451419612244,0.01953125
1451419615245,0.021484375
1451419616845,0.0224609375
1451419618733,0.017578125
1451419623316,0.021484375
1451419624857,0.0205078125
1451419626255,0.0224609375
1451419627631,0.0185546875
1451419629071,0.017578125
1451419630305,0.017578125
1451419632143,0.021484375
1451419633887,0.017578125
1451419635438,0.0224609375
1451419636774,0.021484375
1451419638277,0.0224609375
1451419642773,0.021484375
1451419644633,0.0205078125
1451419647660,0.0205078125
1451419649504,0.021484375
1451419651660,0.0205078125
1451419652602,0.0205078125
1451419653906,0.021484375
1451419656633,0.0205078125
1451419658073,0.01953125
1451419662684,0.0205078125
1451419664190,0.021484375
1451419665560,0.021484375
1451419667029,0.0185546875
1451419669031,0.0185546875
1451419671687,0.017578125
1451419673512,0.01953125
1451419674808,0.0224609375
1451419676046,0.017578125
1451419678498,0.017578125
1451419679924,0.0205078125
1451419681663,0.0224609375
1451419685975,0.021484375
1451419691652,0.021484375
1451419692393,0.01953125
1451419693986,0.0205078125
1451419697049,0.01953125
1451419698855,0.0224609375
1451419700421,0.01953125
1451419701756,0.01953125
1451419702990,0.017578125
1451419707298,0.017578125
1451419708959,0.0205078125
1451419714087,0.0205078125
1451419715332,0.0224609375
1451419718540,0.0205078125
1451419719790,0.0205078125
1451419721656,0.01953125
1451419722511,0.017578125
1451419725169,0.01953125
1451419726651,0.0205078125
1451419729834,0.021484375
1451419736106,0.021484375
1451419738047,0.017578125
1451419739545,0.01953125
1451419741693,0.01953125
1451419744930,0.0224609375
1451419746332,0.0205078125
1451419748931,0.017578125
1451419751663,0.0224609375
1451419752006,0.0185546875
1451419753331,0.0185546875
1451419756566,0.0205078125
1451419758152,0.021484375
1451419759900,0.0224609375
1451419761661,0.0205078125
1451419762999,0.021484375
1451419764437,0.0205078125
1451419765941,0.017578125
1451419771674,0.0224609375
1451419772222,0.01953125
1451419776947,0.01953125
1451419783121,0.021484375
1451419785990,0.017578125
1451419787688,0.0224609375
1451419790271,0.017578125
1451419792779,0.017578125
1451419794595,0.01953125
1451419796449,0.0224609375
1451419798266,0.017578125
1451419800186,0.0185546875
1451419801678,0.0205078125
1451419803040,0.01953125
1451419804266,0.017578125
1451419806105,0.0224609375
1451419807945,0.0205078125
1451419809279,0.0205078125
1451419811668,0.021484375
1451419813166,0.017578125
1451419814410,0.021484375
1451419816258,0.0185546875
1451419819047,0.017578125
1451419821677,0.01953125
1451419822229,0.017578125
1451419826618,0.017578125
1451419827848,0.017578125
1451419829154,0.0205078125
1451419830394,0.021484375
1451419832001,0.0224609375
1451419834905,0.0185546875
1451419836365,0.021484375
1451419837838,0.0224609375
1451419839240,0.01953125
1451419841672,0.0224609375
1451419842264,0.017578125
1451419844251,0.01953125
1451419848211,0.0205078125
1451419849595,0.0205078125
1451419852000,0.017578125
1451419853466,0.021484375
1451419855326,0.021484375
1451419856552,0.01953125
1451419858566,0.021484375
1451419859891,0.0205078125
1451419861686,0.0205078125
1451419865996,0.0224609375
1451419867770,0.0224609375
1451419871676,0.01953125
1451419872215,0.021484375
1451419873571,0.0185546875
1451419874821,0.021484375
1451419878625,0.0185546875
1451419882937,0.017578125
1451419884218,0.0224609375
1451419885824,0.0224609375
1451419888727,0.017578125
1451419890546,0.0205078125
1451419892182,0.0185546875
1451419893712,0.01953125
1451419895344,0.0224609375
1451419897026,0.01953125
1451419899786,0.0224609375
1451419901687,0.0205078125
1451419902319,0.017578125
1451419903557,0.0205078125
1451419904901,0.021484375
1451419906484,0.021484375
1451419907974,0.01953125
1451419909748,0.0224609375
1451419911981,0.017578125
1451419913226,0.017578125
1451419914906,0.0224609375
1451419916537,0.0205078125
1451419918555,0.0224609375
1451420295076,0.021484375
1451420296640,0.021484375
1451420298379,0.0224609375
1451420299617,0.017578125
1451420304800,0.0224609375
1451420308372,0.021484375
1451420313106,0.0205078125
1451420314671,0.021484375
1451420317497,0.017578125
1451420320436,0.0185546875
1451420322174,0.01953125
1451420325395,0.0205078125
1451420327427,0.021484375
1451420330789,0.0205078125
1451420332436,0.01953125
1451420334116,0.0185546875
1451420335640,0.0205078125
1451420337258,0.021484375
1451420339081,0.0205078125
1451420341999,0.017578125
1451420343163,0.01953125
1451420346012,0.01953125
1451420347408,0.0205078125
1451420350884,0.0205078125
1451420352339,0.0205078125
1451420354981,0.017578125
1451420359162,0.01953125
1451420360752,0.0205078125
1451420362600,0.0205078125
1451420365708,0.01953125
1451420367495,0.0185546875
1451420370712,0.021484375
1451420372047,0.01953125
1451420375110,0.0205078125
1451420377018,0.01953125
1451420378634,0.01953125
1451420382025,0.01953125
1451420383297,0.01953125
1451420389078,0.017578125
1451420393417,0.01953125
1451420394927,0.021484375
1451420396561,0.021484375
1451420398513,0.021484375
1451420399872,0.0205078125
1451420402004,0.0224609375
1451420402730,0.01953125
1451420404138,0.021484375
1451420406003,0.0205078125
1451420407241,0.01953125
1451420412342,0.01953125
1451420414336,0.017578125
1451420415758,0.0205078125
1451420417666,0.01953125
1451420420257,0.017578125
1451420422021,0.021484375
1451420427848,0.017578125
1451420429158,0.0205078125
1451420432310,0.0205078125
1451420433688,0.021484375
1451420435261,0.0224609375
1451420437215,0.01953125
1451420440608,0.021484375
1451420442254,0.0224609375
1451420445227,0.021484375
1451420446594,0.017578125
1451420449141,0.0185546875
1451420452027,0.021484375
1451420453663,0.01953125
1451420455396,0.0205078125
1451420457352,0.0185546875
1451420459062,0.01953125
1451420460727,0.0224609375
1451420462315,0.01953125
1451420463555,0.021484375
1451420466614,0.0205078125
1451420470049,0.017578125
1451420472942,0.0205078125
1451420474911,0.017578125
1451420478431,0.0224609375
1451420480335,0.01953125
1451420483266,0.01953125
1451420484750,0.0205078125
1451420492855,0.0224609375
1451420494093,0.017578125
1451420495400,0.0224609375
1451420497178,0.021484375
1451420498510,0.0205078125
1451420502014,0.0205078125
1451420503459,0.0224609375
1451420505269,0.0205078125
1451420506841,0.0185546875
1451420508087,0.017578125
1451420509332,0.021484375
1451420514376,0.0185546875
1451420515793,0.01953125
1451420517053,0.0205078125
1451420519041,0.01953125
1451420520401,0.0185546875
1451420522021,0.0205078125
1451420524867,0.01953125
1451420526558,0.0205078125
1451420527976,0.01953125
1451420529385,0.021484375
1451420532019,0.021484375
1451420533119,0.021484375
1451420535559,0.017578125
1451420537308,0.021484375
1451420539207,0.017578125
1451420540720,0.021484375
1451420542542,0.0205078125
1451420545049,0.017578125
1451420546291,0.0224609375
1451420547541,0.0205078125
1451420550894,0.0224609375
1451420556056,0.01953125
1451420558781,0.0224609375
1451420560019,0.0205078125
1451420562027,0.021484375
1451420563200,0.01953125
1451420564930,0.0205078125
1451420569692,0.021484375
1451420577808,0.017578125
1451420579610,0.0185546875
1451420582034,0.0205078125
1451420582814,0.021484375
1451420584394,0.0205078125
1451420587895,0.0185546875
1451420589707,0.01953125
1451420592382,0.0224609375
1451420593870,0.0205078125
1451420596028,0.017578125
1451420597782,0.0224609375
1451420600339,0.017578125
1451420602243,0.0224609375
1451420608698,0.021484375
1451420610290,0.0205078125
1451420612031,0.0224609375
1451420615639,0.0205078125
1451420618427,0.0224609375
1451420619668,0.0185546875
1451420625927,0.021484375
1451420627389,0.021484375
1451420629041,0.01953125
1451420630911,0.021484375
1451420632669,0.0205078125
1451420637520,0.021484375
1451420642406,0.017578125
1451420645171,0.0205078125
1451420648650,0.0224609375
1451420650120,0.021484375
1451420657107,0.017578125
1451420658339,0.017578125
1451420660267,0.021484375
1451420663234,0.0224609375
1451420664596,0.0205078125
1451420670596,0.021484375
1451420672351,0.0224609375
1451420674432,0.01953125
1451420677244,0.021484375
1451420679070,0.021484375
1451420680405,0.021484375
1451420682941,0.0205078125
1451420685972,0.017578125
1451420689480,0.0205078125
1451420693114,0.0185546875
1451420694745,0.017578125
1451420698977,0.0224609375
1451420702964,0.017578125
1451420704520,0.0205078125
1451420706396,0.0205078125
1451420712043,0.0224609375
1451420714176,0.0224609375
1451420716567,0.017578125
1451420722053,0.0205078125
1451420722959,0.01953125
1451420724486,0.021484375
1451420726029,0.0224609375
1451420730314,0.017578125
1451420733424,0.01953125
1451420734994,0.017578125
1451420738167,0.0224609375
1451420739887,0.021484375
1451420742412,0.017578125
1451420746470,0.0205078125
1451420749070,0.0185546875
1451420750533,0.01953125
1451420753423,0.0224609375
1451420754667,0.017578125
1451420756450,0.0205078125
1451420758218,0.0185546875
1451420759684,0.017578125
1451420762522,0.017578125
1451420767185,0.01953125
1451420770210,0.0205078125
1451420772058,0.0205078125
1451420773370,0.0205078125
1451420774988,0.021484375
1451420782304,0.017578125
1451420784208,0.0205078125
1451420787240,0.0205078125
1451420790115,0.021484375
1451420792929,0.01953125
1451420794301,0.01953125
1451420795877,0.021484375
1451420797640,0.021484375
1451420802712,0.01953125
1451420806079,0.017578125
1451420807317,0.01953125
1451420808629,0.0205078125
1451420810317,0.021484375
1451420812064,0.0205078125
1451420813606,0.021484375
1451420814967,0.021484375
1451420816426,0.021484375
1451420825352,0.021484375
1451420826648,0.0205078125
1451420828216,0.017578125
1451420830224,0.0185546875
1451420832059,0.0205078125
1451420832949,0.0205078125
1451420837046,0.01953125
1451420838979,0.0224609375
1451420842115,0.017578125
1451420844859,0.0205078125
1451420846305,0.0185546875
1451420847697,0.0185546875
1451420852069,0.021484375
1451420852620,0.01953125
1451420854022,0.01953125
1451420855476,0.0205078125
1451420858990,0.01953125
1451420860597,0.01953125
1451420862061,0.0224609375
1451420866226,0.0224609375
1451420868158,0.01953125
1451420872837,0.0224609375
1451420875725,0.0224609375
1451420877225,0.0205078125
1451420878463,0.017578125
1451420880173,0.0224609375
1451420882064,0.0205078125
1451420885246,0.0205078125
1451420887025,0.01953125
1451420890425,0.01953125
1451420892258,0.0205078125
1451420893796,0.0205078125
1451420898356,0.017578125
1451420899604,0.017578125
1451420903437,0.0224609375
1451420904877,0.021484375
1451420907800,0.021484375
1451420909738,0.021484375
1451420912588,0.0224609375
1451420913977,0.021484375
1451420917377,0.0224609375
1451420918993,0.0224609375
1451420922424,0.021484375
1451420924082,0.0205078125
1451420925964,0.0205078125
1451420928945,0.021484375
1451420930283,0.021484375
1451420932077,0.0224609375
1451420933084,0.0224609375
1451420935928,0.0205078125
1451420939244,0.0205078125
1451420942076,0.0224609375
1451420943001,0.0205078125
1451420944513,0.0185546875
1451420946145,0.01953125
1451420947738,0.0205078125
1451420949166,0.01953125
1451420950572,0.0224609375
1451420952076,0.0185546875
1451420954031,0.0205078125
1451420956025,0.021484375
1451420958019,0.017578125
1451420959293,0.0205078125
1451420963872,0.021484375
1451420965338,0.021484375
1451420966650,0.0205078125
1451420968397,0.0224609375
1451420972077,0.01953125
1451420973003,0.021484375
1451420974491,0.0224609375
1451420976232,0.0224609375
1451420977740,0.0224609375
1451420982077,0.0205078125
1451420983767,0.021484375
1451420985041,0.021484375
1451420986343,0.0224609375
1451420987757,0.01953125
1451420989074,0.021484375
1451420990512,0.0224609375
1451420992086,0.017578125
1451420994930,0.01953125
1451420998511,0.0185546875
1451421000229,0.01953125
1451421002082,0.017578125
1451421009481,0.021484375
1451421010961,0.0205078125
1451421012849,0.0224609375
1451421016257,0.0224609375
1451421017838,0.0205078125
1451421019500,0.0205078125
1451421022400,0.017578125
1451421023829,0.021484375
1451421033468,0.0224609375
1451421035094,0.0224609375
1451421036670,0.0205078125
1451421039299,0.01953125
1451421040885,0.0205078125
1451421044334,0.021484375
1451421045768,0.01953125
1451421047292,0.021484375
1451421048736,0.021484375
1451421052519,0.01953125
1451421054007,0.021484375
1451421055289,0.0205078125
1451421058008,0.01953125
1451421059682,0.0205078125
1451421062085,0.021484375
1451421062917,0.01953125
1451421065797,0.01953125
1451421068300,0.021484375
1451421069595,0.021484375
1451421073206,0.0205078125
1451421074682,0.017578125
1451421076408,0.0205078125
1451421077761,0.0205078125
1451421079717,0.021484375
1451421083157,0.017578125
1451421090653,0.0205078125
1451421092419,0.01953125
1451421093991,0.017578125
1451421095415,0.021484375
1451421099320,0.017578125
1451421100548,0.017578125
1451421102300,0.01953125
1451421103900,0.01953125
1451421105429,0.0205078125
1451421106935,0.0205078125
1451421108645,0.021484375
1451421112100,0.017578125
1451421114698,0.0185546875
1451421116159,0.0224609375
1451421117722,0.0185546875
1451421118998,0.0224609375
1451421123323,0.0205078125
1451421126408,0.01953125
1451421127766,0.0205078125
1451421135333,0.01953125
1451421143308,0.017578125
1451421145290,0.01953125
1451421146605,0.0185546875
1451421150965,0.0185546875
1451421154324,0.01953125
1451421155878,0.0224609375
1451421157452,0.0185546875
1451421158934,0.0205078125
1451421162373,0.0205078125
1451421163813,0.0205078125
1451421165419,0.021484375
1451421166842,0.0185546875
1451421170130,0.01953125
1451421172104,0.01953125
1451421173202,0.0224609375
1451421174517,0.0224609375
1451421175963,0.01953125
1451421177429,0.0205078125
1451421179213,0.01953125
1451421180582,0.0224609375
1451421182110,0.0205078125
1451421186102,0.0205078125
1451421187731,0.01953125
1451421189235,0.0185546875
1451421190685,0.0205078125
1451421194458,0.0205078125
1451421196117,0.0205078125
1451421199430,0.017578125
1451421202107,0.021484375
1451421203261,0.017578125
1451421206612,0.0185546875
1451421209550,0.021484375
1451421210998,0.021484375
1451421214267,0.021484375
1451421218017,0.01953125
1451421219801,0.0224609375
1451421222110,0.0224609375
1451421224254,0.017578125
1451421225578,0.0205078125
1451421228589,0.017578125
1451421229977,0.017578125
1451421232111,0.0205078125
1451421235544,0.0205078125
1451421236780,0.01953125
1451421238794,0.021484375
1451421242187,0.0224609375
1451421245257,0.021484375
1451421246825,0.01953125
1451421250430,0.0224609375
1451421252348,0.0205078125
1451421254543,0.0224609375
1451421255791,0.01953125
1451421257321,0.0224609375
1451421259721,0.017578125
1451421262117,0.0205078125
1451421263340,0.017578125
1451421264590,0.017578125
1451421266002,0.021484375
1451423685864,0.0205078125
1451423687328,0.01953125
1451423690471,0.0205078125
1451423691837,0.021484375
1451423694907,0.021484375
1451423696969,0.01953125
1451423698272,0.0205078125
1451423751107,0.0224609375
1451423752611,0.0224609375
1451423754500,0.0224609375
1451423756448,0.01953125
1451423757840,0.021484375
1451423759245,0.021484375
1451423760951,0.0205078125
1451423762333,0.01953125
1451423764333,0.021484375
1451423766450,0.017578125
1451423766980,0.0205078125
1451423769908,0.0205078125
1451423772773,0.021484375
1451423776457,0.0205078125
1451423777723,0.0224609375
1451423778959,0.017578125
1451423781194,0.0185546875
1451423782450,0.017578125
1451423784999,0.01953125
1451423786673,0.0185546875
1451423788251,0.017578125
1451423789709,0.017578125
1451423794582,0.021484375
1451423796461,0.0185546875
1451423797809,0.021484375
1451423799158,0.0224609375
1451423800829,0.01953125
1451423802433,0.01953125
1451423806465,0.01953125
1451423807318,0.0224609375
1451423811350,0.017578125
1451423814773,0.017578125
1451423820206,0.01953125
1451423822826,0.01953125
1451423824110,0.0205078125
1451423826468,0.021484375
1451423828747,0.0224609375
1451423829990,0.017578125
1451423831433,0.0224609375
1451423832750,0.01953125
1451423836472,0.017578125
1451423837216,0.0205078125
1451423838609,0.021484375
1451423840037,0.021484375
1451423843339,0.01953125
1451423846461,0.0185546875
1451423847623,0.021484375
1451423848934,0.01953125
1451423850254,0.021484375
1451423851644,0.021484375
1451423853416,0.0205078125
1451423856665,0.01953125
1451423858367,0.0185546875
1451423860063,0.0224609375
1451423866684,0.021484375
1451423869975,0.0185546875
1451423873109,0.017578125
1451423876649,0.0205078125
1451423877936,0.017578125
1451423879469,0.01953125
1451423880796,0.017578125
1451423882070,0.021484375
1451423886473,0.01953125
1451423887363,0.0185546875
1451423888893,0.01953125
1451423890452,0.0205078125
1451423893246,0.017578125
1451423894710,0.0224609375
1451423896471,0.01953125
1451423897781,0.021484375
1451423899218,0.017578125
1451423902830,0.0185546875
1451423904255,0.017578125
1451423906474,0.0185546875
1451423906818,0.0205078125
1451423908486,0.0185546875
1451423911903,0.021484375
1451423915279,0.021484375
1451423916652,0.021484375
1451423918242,0.0205078125
1451423919778,0.0205078125
1451423921222,0.01953125
1451423922529,0.021484375
1451423926473,0.01953125
1451423927533,0.0205078125
1451423929639,0.0205078125
1451423933268,0.0224609375
1451423934638,0.0205078125
1451423937559,0.017578125
1451423938961,0.021484375
1451423940277,0.021484375
1451423942759,0.0224609375
1451423944486,0.0224609375
1451423946474,0.0185546875
1451423947257,0.01953125
1451423950096,0.0224609375
1451423951583,0.0205078125
1451423953383,0.021484375
1451423955140,0.021484375
1451423960994,0.0224609375
1451423962824,0.021484375
1451423964271,0.01953125
1451423966485,0.0185546875
1451423967105,0.021484375
1451423968735,0.021484375
1451423972090,0.0224609375
1451423973492,0.0224609375
1451423976768,0.01953125
1451423978252,0.021484375
1451423979779,0.0185546875
1451423981215,0.017578125
1451423982927,0.021484375
1451423987836,0.0205078125
1451423989149,0.017578125
1451423992425,0.0185546875
1451423996484,0.017578125
1451423998332,0.0185546875
1451423999668,0.0224609375
1451424001266,0.0205078125
1451424002780,0.021484375
1451424004175,0.0224609375
1451424009226,0.021484375
1451424012550,0.021484375
1451424013874,0.0205078125
1451424015103,0.017578125
1451424018077,0.021484375
1451424022862,0.0185546875
1451424024293,0.01953125
1451424026960,0.021484375
1451424028552,0.0205078125
1451424030104,0.0205078125
1451424032897,0.017578125
1451424034257,0.017578125
1451424036497,0.0224609375
1451424040538,0.0224609375
1451424042168,0.01953125
1451424043646,0.01953125
1451424051869,0.017578125
1451424054178,0.017578125
1451424056488,0.01953125
1451424057274,0.021484375
1451424058846,0.0224609375
1451424060215,0.0205078125
1451424062335,0.0185546875
1451424063794,0.01953125
1451424068850,0.021484375
1451424070268,0.0185546875
1451424073446,0.021484375
1451424074887,0.021484375
1451424076489,0.0205078125
1451424078977,0.017578125
1451424080332,0.017578125
1451424086738,0.0185546875
1451424088320,0.01953125
1451424091385,0.01953125
1451424092621,0.021484375
1451424094041,0.021484375
1451424095362,0.017578125
1451424098049,0.0224609375
1451424099512,0.0224609375
1451424101232,0.021484375
1451424104347,0.01953125
1451424106505,0.01953125
1451424108826,0.017578125
1451424110064,0.017578125
1451424111958,0.0205078125
1451424114793,0.017578125
1451424116781,0.021484375
1451424120781,0.0205078125
1451424122388,0.01953125
1451424124134,0.0205078125
1451424126506,0.0205078125
1451424127436,0.01953125
1451424137146,0.0224609375
1451424138874,0.0205078125
1451424140256,0.0224609375
1451424142014,0.0205078125
1451424143419,0.0224609375
1451424144831,0.021484375
1451424146499,0.0224609375
1451424149457,0.017578125
1451424151252,0.0205078125
1451424152486,0.017578125
1451424156509,0.021484375
1451424157211,0.0205078125
1451424163713,0.0224609375
1451424165202,0.0205078125
1451424166528,0.0205078125
1451424168220,0.0224609375
1451424170633,0.017578125
1451424172487,0.0185546875
1451424174621,0.017578125
1451424177244,0.0224609375
1451424178894,0.0224609375
1451424180716,0.01953125
1451424182321,0.0205078125
1451424184889,0.0224609375
1451424186513,0.021484375
1451424189009,0.0224609375
1451424190569,0.01953125
1451424192104,0.0205078125
1451424193758,0.021484375
1451424195369,0.021484375
1451424198507,0.021484375
1451424200173,0.0205078125
1451424202015,0.0224609375
1451424203517,0.021484375
1451424204766,0.017578125
1451424206512,0.01953125
1451424207680,0.0205078125
1451424212469,0.021484375
1451424213943,0.021484375
1451424216553,0.0224609375
1451424218982,0.021484375
1451424221408,0.021484375
1451424222648,0.0224609375
1451424226519,0.0224609375
1451424227515,0.021484375
1451424229931,0.021484375
1451424234250,0.0205078125
1451424236667,0.0224609375
1451424237904,0.0224609375
1451424239139,0.0205078125
1451424240373,0.0205078125
1451424243999,0.0205078125
1451424245238,0.021484375
1451424246520,0.0224609375
1451424247724,0.021484375
1451424250156,0.0224609375
1451424255339,0.0205078125
1451424256575,0.0224609375
1451424257817,0.021484375
1451424260250,0.0205078125
1451424261482,0.021484375
1451424263912,0.021484375
1451424265151,0.0205078125
1451424268779,0.0224609375
1451424270021,0.0224609375
1451424271265,0.0205078125
1451424272661,0.021484375
1451424274126,0.0224609375
1451424276558,0.0205078125
1451424280179,0.0224609375
1451424282675,0.0205078125
1451424283849,0.0205078125
1451424285087,0.021484375
1451424288708,0.0205078125
1451424296523,0.021484375
1451424297367,0.0205078125
1451424306949,0.0224609375
1451424308187,0.021484375
1451424309431,0.021484375
1451424310679,0.0224609375
1451424312124,0.021484375
1451424313582,0.0205078125
1451424314830,0.021484375
1451424317259,0.0205078125
1451424319689,0.0224609375
1451424320929,0.021484375
1451424323357,0.021484375
1451424326530,0.0205078125
1451424328216,0.021484375
1451424330654,0.021484375
1451424331892,0.021484375
1451424333355,0.021484375
1451424334801,0.0205078125
1451424337231,0.0205078125
1451424338475,0.021484375
1451424340902,0.021484375
1451424343329,0.021484375
1451424346530,0.021484375
1451424349379,0.0205078125
1451424350623,0.021484375
1451424354333,0.021484375
1451424358080,0.021484375
1451424360509,0.021484375
1451424361747,0.0224609375
1451424364181,0.0205078125
1451424366611,0.0224609375
1451424369042,0.0224609375
1451424370290,0.021484375
1451424371534,0.0205078125
1451424373018,0.0224609375
1451424376529,0.021484375
1451424378040,0.0205078125
1451424379277,0.0224609375
1451424381709,0.021484375
1451424384138,0.021484375
1451424386582,0.0224609375
1451424387819,0.0224609375
1451424391443,0.021484375
1451424392687,0.0205078125
1451424399066,0.0205078125
1451424400306,0.0224609375
1451424403925,0.0205078125
1451424405165,0.021484375
1451424407594,0.0205078125
1451424408837,0.021484375
1451424410084,0.0224609375
1451424416537,0.0205078125
1451424421192,0.0224609375
1451424422432,0.017578125
1451424425396,0.021484375
1451424428180,0.0205078125
1451424431181,0.01953125
1451424432421,0.0185546875
1451424434489,0.0224609375
1451424436536,0.017578125
1451424437604,0.017578125
1451424438948,0.021484375
1451424440506,0.01953125
1451424443066,0.0224609375
1451424448944,0.0185546875
1451424453792,0.0185546875
1451424455414,0.0205078125
1451424456939,0.0224609375
1451424458427,0.0185546875
1451424459897,0.017578125
1451424466548,0.0205078125
1451424470746,0.021484375
1451424471973,0.017578125
1451424473985,0.017578125
1451424476854,0.017578125
1451424478304,0.0224609375
1451424479948,0.0185546875
1451424481266,0.017578125
1451424483024,0.021484375
1451424486589,0.0205078125
1451424487981,0.021484375
1451424491021,0.01953125
1451424496544,0.01953125
1451424498246,0.021484375
1451424499645,0.0185546875
1451424500988,0.01953125
1451424503871,0.0224609375
1451424506552,0.017578125
1451424508762,0.0224609375
1451424512447,0.021484375
1451424514387,0.021484375
1451424516549,0.0224609375
1451424517877,0.0205078125
1451424519148,0.0224609375
1451424520818,0.021484375
1451424523444,0.021484375
1451424526881,0.021484375
1451424528681,0.017578125
1451424530161,0.017578125
1451424531441,0.017578125
1451424533317,0.017578125
1451424795769,0.017578125
1451424798804,0.021484375
1451424801705,0.0224609375
1451424803017,0.021484375
1451424804647,0.0185546875
1451424806336,0.0224609375
1451424807760,0.017578125
1451424809242,0.0185546875
1451424811226,0.021484375
1451424812459,0.0185546875
1451424814263,0.0205078125
1451424818939,0.0205078125
1451424821906,0.021484375
1451424823406,0.01953125
1451424824758,0.0224609375
1451424826172,0.0205078125
1451424832716,0.0224609375
1451424834614,0.0185546875
1451424835952,0.017578125
1451424837458,0.0185546875
1451424838910,0.021484375
1451424841167,0.01953125
1451424843721,0.0185546875
1451424845423,0.021484375
1451424846920,0.0224609375
1451424848388,0.021484375
1451424849918,0.021484375
1451424851640,0.021484375
1451424853845,0.0205078125
1451424856131,0.017578125
1451424858097,0.01953125
1451424862244,0.01953125
1451424865050,0.0224609375
1451424869793,0.0224609375
1451424871171,0.0224609375
1451424872477,0.0185546875
1451424875654,0.0185546875
1451424877258,0.0185546875
1451424881173,0.01953125
1451424881829,0.021484375
1451424888429,0.0205078125
1451424889996,0.021484375
1451424891456,0.01953125
1451424892879,0.0205078125
1451424895615,0.0185546875
1451424897317,0.0205078125
1451424901175,0.01953125
1451424903422,0.0185546875
1451424908089,0.0224609375
1451424909525,0.0205078125
1451424915316,0.0205078125
1451424917362,0.017578125
1451424918610,0.017578125
1451424921662,0.01953125
1451424927985,0.021484375
1451424931180,0.0224609375
1451424932660,0.0224609375
1451424934680,0.0205078125
1451424936061,0.017578125
1451424937487,0.0224609375
1451424938977,0.01953125
1451424941179,0.0205078125
1451424941999,0.0224609375
1451424943630,0.0224609375
1451424947488,0.0185546875
1451424948976,0.017578125
1451424951203,0.0205078125
1451424952277,0.0224609375
1451424955217,0.0185546875
1451424956910,0.0224609375
1451424958584,0.01953125
1451424961182,0.0205078125
1451424961689,0.0205078125
1451424963133,0.021484375
1451424964510,0.021484375
1451424968135,0.01953125
1451424969778,0.017578125
1451424971190,0.0185546875
1451424972582,0.021484375
1451424975514,0.017578125
1451424977971,0.017578125
1451424979275,0.01953125
1451424982011,0.0205078125
1451424983396,0.0224609375
1451424986522,0.0205078125
1451424988312,0.017578125
1451424989769,0.0205078125
1451424991195,0.0205078125
1451424995959,0.0205078125
1451424997464,0.0185546875
1451424998782,0.0185546875
1451425001188,0.021484375
1451425001598,0.0224609375
1451425003090,0.0224609375
1451425004450,0.01953125
1451425006065,0.0185546875
1451425009031,0.021484375
1451425011206,0.021484375
1451425012042,0.017578125
1451425013430,0.017578125
1451425016064,0.021484375
1451425021189,0.0205078125
1451425022031,0.01953125
1451425025522,0.017578125
1451425035793,0.017578125
1451425037655,0.017578125
1451425039136,0.0205078125
1451425041210,0.021484375
1451425042298,0.01953125
1451425046597,0.0224609375
1451425048003,0.0185546875
1451425051269,0.0185546875
1451425052758,0.0205078125
1451425054150,0.017578125
1451425055722,0.01953125
1451425057708,0.01953125
1451425059054,0.0224609375
1451425061200,0.01953125
1451425061881,0.021484375
1451425063619,0.01953125
1451425065100,0.0224609375
1451425067608,0.017578125
1451425069272,0.021484375
1451425071224,0.0185546875
1451425072010,0.0205078125
1451425073487,0.0224609375
1451425077580,0.017578125
1451425079098,0.0205078125
1451425081198,0.0224609375
1451425082042,0.0205078125
1451425083313,0.0224609375
1451425085070,0.0224609375
1451425093720,0.0205078125
1451425095680,0.017578125
1451425097514,0.017578125
1451425099038,0.017578125
1451425101220,0.017578125
1451425103311,0.0205078125
1451425108246,0.021484375
1451425109622,0.021484375
1451425111208,0.0185546875
1451425112704,0.0205078125
1451425116045,0.0205078125
1451425117531,0.01953125
1451425119123,0.01953125
1451425121204,0.021484375
1451425122286,0.017578125
1451425123768,0.0185546875
1451425125090,0.017578125
1451425127843,0.021484375
1451425129667,0.0224609375
1451425132933,0.0205078125
1451425134171,0.0224609375
1451425135532,0.021484375
1451425137612,0.0205078125
1451425144075,0.021484375
1451425145399,0.0205078125
1451425148905,0.021484375
1451425154328,0.017578125
1451425156155,0.017578125
1451425157861,0.017578125
1451425159587,0.0205078125
1451425161222,0.0185546875
1451425164102,0.0224609375
1451425166084,0.017578125
1451425167612,0.01953125
1451425168939,0.0205078125
1451425171209,0.017578125
1451425171538,0.0224609375
1451425173261,0.0224609375
1451425174908,0.0224609375
1451425176136,0.0205078125
1451425177626,0.0224609375
1451425181210,0.0205078125
1451425184331,0.021484375
1451425185799,0.0224609375
1451425187519,0.01953125
1451425189344,0.021484375
1451425191224,0.017578125
1451425192050,0.01953125
1451425197879,0.01953125
1451425199487,0.021484375
1451425201213,0.0205078125
1451425206116,0.0205078125
1451425207606,0.0185546875
1451425211215,0.021484375
1451425212145,0.0224609375
1451425213747,0.017578125
1451425216342,0.0205078125
1451425219272,0.017578125
1451425221228,0.0224609375
1451425222388,0.0205078125
1451425223719,0.021484375
1451425225403,0.01953125
1451425226875,0.0224609375
1451425229862,0.0185546875
1451425231510,0.01953125
1451425234508,0.021484375
1451425237341,0.01953125
1451425240043,0.01953125
1451425241487,0.0224609375
1451425243075,0.017578125
1451425244346,0.021484375
1451425247280,0.021484375
1451425249452,0.0224609375
1451425251232,0.021484375
1451425252739,0.01953125
1451425254251,0.017578125
1451425255909,0.0205078125
1451425259028,0.021484375
1451425261220,0.0224609375
1451425261882,0.021484375
1451425263212,0.0224609375
1451425264801,0.021484375
1451425271838,0.017578125
1451425273564,0.01953125
1451425274988,0.0205078125
1451425277229,0.017578125
1451425279283,0.01953125
1451425281235,0.01953125
1451425282565,0.0224609375
1451425285306,0.0185546875
1451425291224,0.021484375
1451425293021,0.0205078125
1451425297713,0.0185546875
1451425299362,0.021484375
1451425301226,0.017578125
1451425302314,0.01953125
1451425303664,0.01953125
1451425305261,0.021484375
1451425306625,0.0205078125
1451425309605,0.0224609375
1451425311240,0.021484375
1451425312520,0.0224609375
1451425316474,0.01953125
1451425318134,0.0185546875
1451425319497,0.0205078125
1451425321285,0.0205078125
1451425322767,0.017578125
1451425324327,0.021484375
1451425329552,0.0205078125
1451425331230,0.0185546875
1451425332455,0.0205078125
1451425333813,0.0224609375
1451425338119,0.017578125
1451425339360,0.021484375
1451425342442,0.017578125
1451425343794,0.017578125
1451425345032,0.01953125
1451425348021,0.0224609375
1451425349523,0.0205078125
1451425351233,0.017578125
1451425352316,0.01953125
1451425353778,0.0205078125
1451425355282,0.0205078125
1451425356704,0.021484375
1451425358344,0.021484375
1451425361567,0.0224609375
1451425363360,0.01953125
1451425364781,0.0205078125
1451425366454,0.021484375
1451425367864,0.021484375
1451425369104,0.017578125
1451425372332,0.021484375
1451425373790,0.01953125
1451425375483,0.01953125
1451425381240,0.021484375
1451425381800,0.01953125
1451425383242,0.0224609375
1451425384816,0.0224609375
1451425386566,0.0205078125
1451425388119,0.0185546875
1451425389640,0.021484375
1451425391242,0.0205078125
1451425392303,0.0205078125
1451425394102,0.01953125
1451425395586,0.0224609375
1451425397400,0.017578125
1451425400564,0.017578125
1451425402717,0.0205078125
1451425403293,0.0205078125
1451425404763,0.021484375
1451425407880,0.01953125
1451425409406,0.0224609375
1451425410982,0.021484375
1451425412718,0.0224609375
1451425413817,0.021484375
1451425417095,0.021484375
1451425418635,0.0205078125
1451425420422,0.01953125
1451425423692,0.0205078125
1451425425202,0.021484375
1451425426803,0.0224609375
1451425428225,0.0185546875
1451425431269,0.017578125
1451425432751,0.01953125
1451425433982,0.017578125
1451425442725,0.01953125
1451425443967,0.01953125
1451425445212,0.01953125
1451425446460,0.017578125
1451425448014,0.021484375
1451425449400,0.0205078125
1451425451270,0.0205078125
1451425452768,0.021484375
1451425454177,0.0224609375
1451425455649,0.017578125
1451425463252,0.017578125
1451425465194,0.017578125
1451425470177,0.01953125
1451425472725,0.0224609375
1451425473271,0.01953125
1451425476010,0.0205078125
1451425478156,0.0205078125
1451425479642,0.017578125
1451425481100,0.0224609375
1451425482779,0.021484375
1451425484357,0.0205078125
1451425491470,0.0185546875
1451425493152,0.0224609375
1451425494490,0.0224609375
1451425495832,0.021484375
1451425497077,0.017578125
1451425498343,0.0224609375
1451425499747,0.021484375
1451425501166,0.0185546875
1451425508864,0.0205078125
1451425510359,0.0224609375
1451425513421,0.021484375
1451425515053,0.0205078125
1451425518862,0.017578125
1451425526515,0.017578125
1451425532732,0.017578125
1451425533894,0.021484375
1451425535534,0.0185546875
1451425536799,0.0185546875
1451425539915,0.0185546875
1451425541279,0.021484375
1451425544033,0.021484375
1451425545686,0.0205078125
1451425547278,0.01953125
1451425550775,0.01953125
1451425552735,0.0185546875
1451425556031,0.0205078125
1451425558878,0.0205078125
1451425560262,0.0224609375
1451425563528,0.0205078125
1451425565065,0.017578125
1451425566751,0.0205078125
1451425568257,0.0205078125
1451425572760,0.017578125
1451425574490,0.0205078125
1451425576104,0.0205078125
1451425580875,0.021484375
1451425584970,0.01953125
1451425587908,0.01953125
1451425589330,0.021484375
1451425590843,0.0185546875
1451425595489,0.0224609375
1451425602740,0.01953125
1451425607063,0.017578125
1451425608355,0.0205078125
1451425609975,0.0224609375
1451425611243,0.01953125
1451425615810,0.0205078125
1451425617262,0.017578125
1451425621150,0.0205078125
1451425622881,0.01953125
1451425624405,0.01953125
1451425625758,0.0224609375
1451425627176,0.01953125
1451425630458,0.0205078125
1451425632745,0.021484375
1451425633479,0.0224609375
1451425636807,0.021484375
1451425639330,0.017578125
1451425640956,0.01953125
1451425645486,0.017578125
1451425647327,0.021484375
1451425653380,0.017578125
1451425656442,0.0185546875
1451425657930,0.0205078125
1451425661361,0.0185546875
1451425662897,0.021484375
1451425664189,0.0185546875
1451425665430,0.017578125
1451425666902,0.01953125
1451425668408,0.021484375
1451425670018,0.0205078125
1451425671358,0.021484375
1451425673072,0.021484375
1451425674555,0.0185546875
1451425676021,0.0205078125
1451425682752,0.017578125
1451425685174,0.0205078125
1451425686710,0.01953125
1451425691091,0.01953125
1451425692753,0.0224609375
1451425693831,0.021484375
1451425695086,0.021484375
1451425696374,0.01953125
1451425700010,0.0185546875
1451425701319,0.021484375
1451425702781,0.0224609375
1451425705737,0.0205078125
1451425707326,0.0205078125
1451425712756,0.0185546875
1451425713592,0.01953125
1451425720185,0.01953125
1451425722758,0.0185546875
1451425725286,0.0205078125
1451425726776,0.0185546875
1451425728163,0.021484375
1451425729431,0.01953125
1451425732757,0.021484375
1451425735162,0.0224609375
1451425736816,0.0224609375
1451425738194,0.021484375
1451425741599,0.017578125
1451425743089,0.01953125
1451425747930,0.0224609375
1451425749822,0.0185546875
1451425754770,0.0185546875
1451425758155,0.021484375
1451425759849,0.017578125
1451425763954,0.021484375
1451425765612,0.01953125
1451425767569,0.017578125
1451425772763,0.0205078125
1451425774202,0.021484375
1451425776972,0.0224609375
1451425778748,0.01953125
1451425780002,0.021484375
1451425781596,0.021484375
1451425782834,0.0185546875
1451425784237,0.0205078125
1451425787583,0.0185546875
1451425788825,0.021484375
1451425790213,0.0185546875
1451425792776,0.0185546875
1451425793680,0.01953125
1451425794988,0.0205078125
1451425796691,0.021484375
1451425804418,0.0205078125
1451425806060,0.0205078125
1451425809162,0.021484375
1451425810525,0.0205078125
1451425813247,0.0224609375
1451425814830,0.01953125
1451425816967,0.0185546875
1451425818628,0.0185546875
1451425820690,0.017578125
1451425822780,0.0185546875
1451425823384,0.017578125
1451425828270,0.017578125
1451425829714,0.021484375
1451425831560,0.0185546875
1451425832940,0.01953125
1451425834358,0.021484375
1451425835999,0.0205078125
1451425837481,0.0205078125
1451425842773,0.0205078125
1451425843315,0.0185546875
1451425851540,0.01953125
1451425853011,0.021484375
1451425856175,0.021484375
1451425857624,0.0205078125
1451425860740,0.017578125
1451425865230,0.01953125
1451425867993,0.017578125
1451425869581,0.01953125
1451425871084,0.017578125
1451425874086,0.0224609375
1451425876120,0.0224609375
1451425877622,0.017578125
1451425881107,0.017578125
1451425882787,0.017578125
1451425884337,0.0205078125
1451425887590,0.017578125
1451425889200,0.021484375
1451425895781,0.021484375
1451425898419,0.0224609375
1451425902782,0.0205078125
1451425903336,0.021484375
1451425905303,0.01953125
1451425906621,0.017578125
1451425908059,0.01953125
1451425911379,0.0205078125
1451425917422,0.01953125
1451425921345,0.017578125
1451425925836,0.0205078125
1451425929070,0.01953125
1451425930530,0.01953125
1451425932784,0.0185546875
1451425936527,0.0224609375
1451425937883,0.0205078125
1451425941382,0.0224609375
1451425942794,0.0205078125
1451425944002,0.0224609375
1451425947508,0.017578125
1451425949621,0.0205078125
1451425957198,0.0224609375
1451425958998,0.0205078125
1451425963805,0.0205078125
1451425965580,0.0205078125
1451425966961,0.01953125
1451425968318,0.021484375
1451425969766,0.021484375
1451425973092,0.021484375
1451425974601,0.0185546875
1451425975845,0.017578125
1451425977107,0.0205078125
1451425980053,0.0224609375
1451425984396,0.0224609375
1451425985686,0.01953125
1451425989661,0.017578125
1451425993315,0.0205078125
1451425996234,0.0185546875
1451425997694,0.017578125
1451425998994,0.021484375
1451426002805,0.017578125
1451426003961,0.021484375
1451426005675,0.0224609375
1451426007022,0.0224609375
1451426008880,0.01953125
1451426010130,0.021484375
1451426012794,0.0205078125
1451426013260,0.021484375
1451426014987,0.017578125
1451426016439,0.017578125
1451426019795,0.0224609375
1451426021275,0.0224609375
1451426022974,0.0205078125
1451426024350,0.0224609375
1451426029002,0.0205078125
1451426032803,0.0224609375
1451426033593,0.021484375
1451426034887,0.021484375
1451426036230,0.0205078125
1451426041261,0.0185546875
1451426042801,0.0224609375
1451426045883,0.021484375
1451426047563,0.01953125
1451426052800,0.021484375
1451426053396,0.01953125
1451426056577,0.0224609375
1451426058285,0.01953125
1451426059933,0.021484375
1451426062811,0.017578125
1451426064016,0.021484375
1451426065288,0.0224609375
1451426066644,0.017578125
1451426070297,0.017578125
1451426072805,0.0205078125
1451426073485,0.021484375
1451426076243,0.0205078125
1451426079704,0.0205078125
1451426081196,0.0224609375
1451426082804,0.0205078125
1451426084431,0.0205078125
1451426085673,0.0205078125
1451426090601,0.01953125
1451426092812,0.021484375
1451426095224,0.01953125
1451426097969,0.01953125
1451426100545,0.0185546875
1451426105634,0.0224609375
1451426107230,0.01953125
1451426108801,0.01953125
1451426110093,0.021484375
1451426113499,0.0185546875
1451426115047,0.0185546875
1451426119960,0.021484375
1451426122818,0.017578125
1451426124068,0.017578125
1451426125621,0.021484375
1451426127465,0.021484375
1451426129601,0.017578125
1451426130886,0.017578125
1451426132810,0.017578125
1451426133692,0.01953125
1451426135068,0.0205078125
1451426140621,0.017578125
1451426143739,0.0205078125
1451426145236,0.01953125
1451426146772,0.0185546875
1451426148014,0.017578125
1451426152819,0.01953125
1451426153977,0.021484375
1451426156753,0.0205078125
1451426161230,0.021484375
1451426164314,0.021484375
1451426167155,0.0205078125
1451426172820,0.0205078125
1451426173670,0.017578125
1451426175148,0.017578125
1451426183968,0.017578125
1451426185271,0.021484375
1451426186822,0.0224609375
1451426188976,0.017578125
1451426190761,0.01953125
1451426192818,0.0224609375
1451426193563,0.0205078125
1451426196727,0.021484375
1451426199538,0.0185546875
1451426200968,0.021484375
1451426205768,0.021484375
1451426208983,0.0185546875
1451426210873,0.0185546875
1451426212823,0.017578125
1451426213362,0.017578125
1451426216310,0.0224609375
1451426218488,0.0224609375
1451426219933,0.017578125
1451426221189,0.017578125
1451426222821,0.0185546875
1451426225595,0.0205078125
1451426226991,0.01953125
1451426228858,0.0224609375
1451426230540,0.021484375
1451426234715,0.01953125
1451426236183,0.0185546875
1451426237647,0.0205078125
1451426239305,0.01953125
1451426240895,0.0205078125
1451426244014,0.017578125
1451426245579,0.01953125
1451426246960,0.0205078125
1451426251227,0.0205078125
1451426252825,0.021484375
1451426255222,0.01953125
1451426256578,0.0185546875
1451426258141,0.021484375
1451426259641,0.0205078125
1451426261131,0.017578125
1451426262827,0.017578125
1451426264007,0.021484375
1451426265619,0.01953125
1451426267172,0.021484375
1451426268892,0.021484375
1451426270592,0.017578125
1451426272828,0.0205078125
1451426273666,0.01953125
1451426279727,0.0205078125
1451426281088,0.0185546875
1451426282830,0.0224609375
1451426286474,0.017578125
1451426287805,0.0224609375
1451426290503,0.0224609375
1451426298094,0.0224609375
1451426299900,0.01953125
1451426301469,0.017578125
1451426303927,0.01953125
1451426305175,0.017578125
1451426306603,0.0205078125
1451426308737,0.021484375
1451426310570,0.017578125
1451426312834,0.021484375
1451426313552,0.021484375
1451426315016,0.0205078125
1451426316897,0.021484375
1451426318207,0.0224609375
1451426319665,0.017578125
1451426322870,0.021484375
1451426324231,0.0205078125
1451426327898,0.021484375
1451426329499,0.021484375
1451426331107,0.01953125
1451426332837,0.0224609375
1451426333903,0.021484375
1451426337207,0.0224609375
1451426338582,0.0224609375
1451426343605,0.01953125
1451426345199,0.0185546875
1451426346805,0.0205078125
1451426349840,0.01953125
1451426351328,0.01953125
1451426354351,0.017578125
1451426355656,0.0205078125
1451426357249,0.021484375
1451426358627,0.0224609375
1451426360063,0.021484375
1451426364012,0.017578125
1451426365244,0.021484375
1451426366836,0.0205078125
1451426368112,0.01953125
1451426369485,0.0224609375
1451426372841,0.017578125
1451426373399,0.0205078125
1451426376755,0.0205078125
1451426378344,0.0224609375
1451426382842,0.01953125
1451426385955,0.021484375
1451426387477,0.0185546875
1451426390562,0.0224609375
1451426392844,0.021484375
1451426393600,0.0224609375
1451426395172,0.017578125
1451426396651,0.017578125
1451426399689,0.0205078125
1451426407360,0.017578125
1451426408596,0.017578125
1451426410162,0.0205078125
1451426411416,0.0205078125
1451426412857,0.0185546875
1451426415537,0.021484375
1451426416885,0.0224609375
1451426418652,0.017578125
1451426420136,0.017578125
1451426424404,0.021484375
1451426425884,0.017578125
1451426428839,0.021484375
1451426430864,0.017578125
1451426433838,0.021484375
1451426438853,0.017578125
1451426443227,0.017578125
1451426444471,0.0205078125
1451426446018,0.0205078125
1451426447340,0.0205078125
1451426448716,0.01953125
1451426450240,0.0224609375
1451426451482,0.0205078125
1451426453027,0.0224609375
1451426454795,0.017578125
1451426460862,0.0205078125
1451426465255,0.0205078125
1451426469683,0.01953125
1451426472866,0.021484375
1451426474690,0.0205078125
1451426476025,0.0205078125
1451426477344,0.0224609375
1451426478858,0.0205078125
1451426481597,0.0224609375
1451426484099,0.017578125
1451426487486,0.0205078125
1451426489032,0.021484375
1451426490976,0.017578125
1451426493927,0.021484375
1451426495283,0.01953125
1451426496605,0.01953125
1451426498031,0.0224609375
1451426499491,0.0224609375
1451426500996,0.021484375
1451426502858,0.0224609375
1451426505742,0.021484375
1451426507143,0.017578125
1451426508807,0.0224609375
1451426510505,0.017578125
1451426513622,0.021484375
1451426516916,0.0205078125
1451426518590,0.01953125
1451426520031,0.021484375
1451426523935,0.0185546875
1451426525323,0.0224609375
1451426526721,0.0224609375
1451426530478,0.01953125
1451426532862,0.021484375
1451426533715,0.0205078125
1451426535239,0.0224609375
1451426538047,0.017578125
1451426539381,0.021484375
1451426540951,0.0205078125
1451426544288,0.017578125
1451426545860,0.0205078125
1451426547184,0.0205078125
1451426548827,0.0205078125
1451426551377,0.017578125
1451426553679,0.0224609375
1451426555022,0.0224609375
1451426558346,0.021484375
1451426559578,0.017578125
1451426563129,0.0224609375
1451426568212,0.0185546875
1451426569452,0.021484375
1451426570770,0.0205078125
1451426572868,0.021484375
1451426575557,0.0205078125
1451426576883,0.0224609375
1451426578219,0.0205078125
1451426582868,0.021484375
1451426584356,0.021484375
1451426587062,0.0205078125
1451426592955,0.0185546875
1451426594697,0.021484375
1451426596830,0.0224609375
1451426598484,0.021484375
1451426600084,0.0224609375
1451426601514,0.01953125
1451426602997,0.0205078125
1451426604887,0.017578125
1451426606557,0.0224609375
1451426611702,0.017578125
1451426614460,0.0185546875
1451426616059,0.01953125
1451426621760,0.0185546875
1451426623826,0.0185546875
1451426627124,0.01953125
1451426631505,0.021484375
1451426633179,0.01953125
1451426634534,0.021484375
1451426635889,0.01953125
1451426639180,0.0224609375
1451426642877,0.0205078125
1451426643641,0.021484375
1451426645111,0.021484375
1451426646915,0.021484375
1451426650598,0.021484375
1451426652878,0.0224609375
1451426653356,0.0224609375
1451426658997,0.0224609375
1451426660701,0.0205078125
1451426663690,0.017578125
1451426666856,0.017578125
1451426668692,0.0224609375
1451426674995,0.0205078125
1451426676341,0.0185546875
1451426677714,0.01953125
1451426683875,0.021484375
1451426685365,0.021484375
1451426688243,0.0205078125
1451426690749,0.017578125
1451426694188,0.0224609375
1451426696946,0.0205078125
1451426700893,0.017578125
1451426704197,0.0205078125
1451426708664,0.0205078125
1451426710202,0.0224609375
1451426711447,0.0224609375
1451426713111,0.021484375
1451426714953,0.0205078125
1451426716267,0.017578125
1451426717507,0.017578125
1451426718748,0.0224609375
1451426720444,0.0224609375
1451426722886,0.021484375
1451426723378,0.017578125
1451426725134,0.017578125
1451426728607,0.021484375
1451426730467,0.017578125
1451426733196,0.017578125
1451426735520,0.01953125
1451426737197,0.0185546875
1451426738552,0.0205078125
1451426740245,0.0224609375
1451426745141,0.021484375
1451426747774,0.021484375
1451426749271,0.0185546875
1451426750520,0.0205078125
1451426752891,0.01953125
1451426753505,0.017578125
1451426754879,0.0205078125
1451426758097,0.017578125
1451426759348,0.0224609375
1451426762892,0.0224609375
1451426769071,0.021484375
1451426770781,0.0205078125
1451426772893,0.0205078125
1451426773860,0.021484375
1451426775172,0.01953125
1451426776692,0.017578125
1451426778101,0.0205078125
1451426781103,0.01953125
1451426782895,0.0224609375
1451426787150,0.017578125
1451426788708,0.021484375
1451426793492,0.017578125
1451426795783,0.0224609375
1451426797175,0.017578125
1451426798585,0.01953125
1451426800260,0.0205078125
1451426803146,0.0185546875
1451426806541,0.0205078125
1451426808237,0.0185546875
1451426809857,0.0205078125
1451426811297,0.017578125
1451426814190,0.021484375
1451426815564,0.021484375
1451426817008,0.01953125
1451426820274,0.0224609375
1451426822899,0.017578125
1451426825051,0.0224609375
1451426826665,0.0205078125
1451426829826,0.0185546875
1451426831308,0.0205078125
1451426832960,0.0205078125
1451426834231,0.0224609375
1451426836669,0.0224609375
1451426840293,0.0224609375
1451426849451,0.0224609375
1451426853991,0.0205078125
1451426855240,0.0205078125
1451426856480,0.0205078125
1451426859166,0.021484375
1451426860520,0.0205078125
1451426864133,0.0224609375
1451426865371,0.0224609375
1451426866609,0.0224609375
1451426869034,0.021484375
1451426870272,0.0205078125
1451426871508,0.021484375
1451426873932,0.021484375
1451426875181,0.021484375
1451426877611,0.021484375
1451426881610,0.0205078125
1451426882908,0.0205078125
1451426885274,0.0224609375
1451426887702,0.0224609375
1451426890135,0.0205078125
1451426891369,0.021484375
1451426896199,0.0205078125
1451426897440,0.021484375
1451426898682,0.0224609375
1451426903825,0.0224609375
1451426907871,0.0224609375
1451426913974,0.021484375
1451426919191,0.021484375
1451426921629,0.0224609375
1451426924058,0.021484375
1451426925298,0.021484375
1451426926536,0.0224609375
1451426927774,0.0224609375
1451426930202,0.0205078125
1451426931441,0.021484375
1451426932915,0.0205078125
1451426933931,0.021484375
1451426935172,0.021484375
1451426936415,0.0205078125
1451426937702,0.0224609375
1451426939184,0.0224609375
1451426940502,0.0224609375
1451426942923,0.021484375
1451426945351,0.0205078125
1451426946591,0.021484375
1451426949017,0.021484375
1451426953832,0.021484375
1451426955076,0.0205078125
1451426956320,0.0205078125
1451426957563,0.0205078125
1451426959023,0.0205078125
1451426960471,0.0224609375
1451426965294,0.0205078125
1451426969488,0.0205078125
1451426970733,0.0224609375
1451426983850,0.0205078125
1451426985089,0.0224609375
1451426987519,0.021484375
1451426989945,0.021484375
1451426992924,0.0224609375
1451426993621,0.0224609375
1451426994862,0.0224609375
1451426997380,0.0224609375
1451427001279,0.0224609375
1451427004902,0.0205078125
1451427006136,0.021484375
1451427008562,0.021484375
1451427010991,0.0205078125
1451427012925,0.021484375
1451427014667,0.0205078125
1451427018351,0.0224609375
1451427021046,0.0205078125
1451427022926,0.0224609375
1451427027693,0.0224609375
1451427034482,0.021484375
1451427035884,0.021484375
1451427039689,0.0224609375
1451427040929,0.0205078125
1451427044541,0.0224609375
1451427048161,0.021484375
1451427050592,0.021484375
1451427053015,0.0224609375
1451427054333,0.017578125
1451427056183,0.021484375
1451427057643,0.021484375
1451427059083,0.0185546875
1451427060510,0.0205078125
1451427063231,0.0224609375
1451427064828,0.0185546875
1451427068041,0.01953125
1451427069503,0.0224609375
1451427070842,0.021484375
1451427074186,0.0224609375
1451427075604,0.01953125
1451427076988,0.01953125
1451427078372,0.0205078125
1451427081403,0.017578125
1451427082935,0.017578125
1451427084187,0.0205078125
1451427085611,0.0205078125
1451427086981,0.0205078125
1451427088736,0.017578125
1451427090246,0.021484375
1451427091704,0.021484375
1451427094879,0.017578125
1451427098021,0.021484375
1451427099955,0.0224609375
1451427101447,0.0205078125
1451427103008,0.0185546875
1451427107652,0.01953125
1451427109203,0.0185546875
1451427110577,0.021484375
1451427112937,0.0205078125
1451427113903,0.021484375
1451427115280,0.0185546875
1451427116664,0.0224609375
1451427120086,0.0205078125
1451427121349,0.0224609375
1451427122975,0.01953125
1451427124457,0.017578125
1451427126175,0.01953125
1451427127405,0.017578125
1451427128678,0.0224609375
1451427130102,0.0205078125
1451427131335,0.0205078125
1451427132942,0.021484375
1451427135333,0.021484375
1451427136667,0.0185546875
1451427138453,0.01953125
1451427139815,0.0224609375
1451427144401,0.01953125
1451427146321,0.01953125
1451427148628,0.017578125
1451427151535,0.01953125
1451427153241,0.01953125
1451427155260,0.017578125
1451427156492,0.017578125
1451427157866,0.0185546875
1451427160960,0.0224609375
1451427162945,0.021484375
1451427164145,0.017578125
1451427168699,0.01953125
1451427172946,0.0224609375
1451427173395,0.021484375
1451427177719,0.0224609375
1451427179685,0.01953125
1451427183004,0.021484375
1451427187350,0.0224609375
1451427189217,0.0185546875
1451427190692,0.017578125
1451427192949,0.0224609375
1451427194827,0.0185546875
1451427197472,0.021484375
1451427199108,0.021484375
1451427202950,0.0185546875
1451427203479,0.0224609375
1451427204835,0.0224609375
1451427206551,0.0224609375
1451427208821,0.017578125
1451427210680,0.01953125
1451427212952,0.0185546875
1451427215664,0.0205078125
1451427217240,0.021484375
1451427218639,0.021484375
1451427220183,0.0224609375
1451427223279,0.01953125
1451427225878,0.017578125
1451427228690,0.0205078125
1451427233375,0.0185546875
1451427234639,0.0205078125
1451427236113,0.021484375
1451427237532,0.0205078125
1451427238896,0.0185546875
1451427240528,0.01953125
1451427242957,0.0224609375
1451427243497,0.0205078125
1451427246795,0.0205078125
1451427248213,0.021484375
1451427249809,0.01953125
1451427252956,0.0185546875
1451427254306,0.0224609375
1451427255992,0.0185546875
1451427257331,0.017578125
1451427258709,0.0185546875
1451427260235,0.0185546875
1451427264541,0.01953125
1451427269388,0.01953125
1451427271124,0.021484375
1451427274167,0.017578125
1451427276687,0.017578125
1451427277969,0.0224609375
1451427280850,0.01953125
1451427282960,0.0185546875
1451427283885,0.01953125
1451427285260,0.021484375
1451427286625,0.017578125
1451427291165,0.0205078125
1451427292962,0.01953125
1451427375978,0.017578125
1451427377314,0.0205078125
1451427379226,0.0205078125
1451427380006,0.01953125
1451427381437,0.0224609375
1451427382957,0.0224609375
1451427384679,0.01953125
1451427386159,0.021484375
1451427389352,0.0205078125
1451427392484,0.0224609375
1451427400995,0.021484375
1451427402616,0.021484375
1451427405630,0.01953125
1451427410461,0.0224609375
1451427412109,0.0205078125
1451427413610,0.0224609375
1451427414904,0.021484375
1451427416404,0.01953125
1451427419755,0.0205078125
1451427421128,0.0205078125
1451427422472,0.0224609375
1451427425138,0.0205078125
1451427426810,0.01953125
1451427428599,0.01953125
1451427429820,0.021484375
1451427432034,0.017578125
1451427434462,0.01953125
1451427435691,0.017578125
1451427438759,0.021484375
1451427441336,0.0205078125
1451427442900,0.021484375
1451427446346,0.01953125
1451427448601,0.021484375
1451427449043,0.01953125
1451427451111,0.0205078125
1451427452712,0.021484375
1451427454223,0.0185546875
1451427457290,0.017578125
1451427460250,0.0185546875
1451427466237,0.0224609375
1451427472788,0.0205078125
1451427474170,0.0185546875
1451427476778,0.021484375
1451427478632,0.017578125
1451427480329,0.0205078125
1451427481964,0.01953125
1451427484944,0.0224609375
1451427486344,0.01953125
1451427491609,0.017578125
1451427493992,0.017578125
1451427495695,0.01953125
1451427497270,0.0205078125
1451427500393,0.021484375
1451427501885,0.021484375
1451427503453,0.0205078125
1451427505043,0.0224609375
1451427508607,0.021484375
1451427509798,0.0205078125
1451427512614,0.0224609375
1451427517041,0.0205078125
1451427518609,0.021484375
1451427521319,0.0185546875
1451427522833,0.017578125
1451427524082,0.017578125
1451427525490,0.01953125
1451427528755,0.01953125
1451427532947,0.0185546875
1451427535757,0.0205078125
1451427541092,0.021484375
1451427543963,0.021484375
1451427547043,0.0224609375
1451427548687,0.017578125
1451427555346,0.0185546875
1451427556579,0.017578125
1451427558617,0.01953125
1451427562633,0.021484375
1451427565656,0.01953125
1451427568616,0.0185546875
1451427570750,0.0185546875
1451427572191,0.0205078125
1451427573565,0.0224609375
1451427578618,0.021484375
1451427582894,0.0185546875
1451427584742,0.01953125
1451427588617,0.0224609375
1451427591188,0.01953125
1451427594292,0.0205078125
1451427595734,0.0205078125
1451427602053,0.0185546875
1451427603619,0.0205078125
1451427608622,0.0185546875
1451427609774,0.0205078125
1451427614046,0.0205078125
1451427750817,0.0205078125
1451427753783,0.0205078125
1451427755815,0.021484375
1451427756856,0.0224609375
1451427759048,0.017578125
1451427760368,0.0224609375
1451427762177,0.017578125
1451427763667,0.017578125
1451427765817,0.017578125
1451427766256,0.0224609375
1451427769543,0.021484375
1451427774535,0.0185546875
1451427775909,0.0205078125
1451427778957,0.0205078125
1451427780403,0.0224609375
1451427786574,0.0205078125
1451427792479,0.0205078125
1451427795822,0.0205078125
1451427796986,0.021484375
1451427802474,0.0224609375
1451427803772,0.01953125
1451427805821,0.01953125
1451427807087,0.021484375
1451427809507,0.017578125
1451427811790,0.017578125
1451427813420,0.0185546875
1451427819605,0.017578125
1451427822883,0.021484375
1451427824174,0.0224609375
1451427826134,0.0205078125
1451427828970,0.0224609375
1451427833877,0.017578125
1451427835826,0.017578125
1451427836902,0.01953125
1451427843256,0.017578125
1451427845827,0.0205078125
1451427846241,0.01953125
1451427848913,0.0224609375
1451427850351,0.021484375
1451427852226,0.0185546875
1451427853522,0.0205078125
1451427855828,0.0205078125
1451427856484,0.0224609375
1451427858263,0.017578125
1451427859513,0.017578125
1451427861223,0.021484375
1451427862597,0.01953125
1451427865830,0.021484375
1451427866646,0.017578125
1451427869610,0.017578125
1451427871435,0.0185546875
1451427872759,0.0205078125
1451427876387,0.0224609375
1451427877638,0.017578125
1451427879176,0.0205078125
1451427882456,0.0185546875
1451427884088,0.0205078125
1451427889807,0.0205078125
1451427891417,0.0205078125
1451427893262,0.021484375
1451427894582,0.021484375
1451427895990,0.0185546875
1451427897500,0.0224609375
1451427899030,0.017578125
1451427900507,0.017578125
1451427901751,0.01953125
1451427903247,0.0224609375
1451427908090,0.01953125
1451427909702,0.021484375
1451427911734,0.0224609375
1451427913289,0.0185546875
1451427914673,0.017578125
1451427917813,0.021484375
1451427919053,0.017578125
1451427921624,0.01953125
1451427923214,0.0185546875
1451427925836,0.0224609375
1451427926457,0.0205078125
1451427930491,0.0185546875
1451427932151,0.0185546875
1451427935838,0.01953125
1451427936508,0.017578125
1451427938026,0.0205078125
1451427939471,0.0205078125
1451427941005,0.0205078125
1451427942619,0.0224609375
1451427943937,0.0205078125
1451427945839,0.0205078125
1451427948278,0.0224609375
1451427952657,0.017578125
1451427956101,0.021484375
1451427957661,0.0205078125
1451427963674,0.0224609375
1451427965842,0.017578125
1451427967026,0.01953125
1451427969711,0.021484375
1451427971577,0.021484375
1451427974494,0.0224609375
1451427975910,0.021484375
1451427978852,0.0224609375
1451427981955,0.01953125
1451427983677,0.0205078125
1451427985845,0.0224609375
1451427986597,0.017578125
1451427988362,0.0205078125
1451427991342,0.0205078125
1451427992976,0.0224609375
1451427994403,0.0224609375
1451427995845,0.0224609375
1451427997459,0.0224609375
1451428000572,0.021484375
1451428003306,0.021484375
1451428004588,0.0185546875
1451428005944,0.0224609375
1451428007463,0.017578125
1451428009161,0.017578125
1451428012297,0.0224609375
1451428013903,0.01953125
1451428017126,0.021484375
1451428018672,0.0205078125
1451428021714,0.0205078125
1451428023073,0.021484375
1451428024537,0.021484375
1451428026006,0.0224609375
1451428031726,0.01953125
1451428033184,0.0185546875
1451428034416,0.017578125
1451428035868,0.0205078125
1451428037119,0.017578125
1451428039013,0.021484375
1451428040395,0.0185546875
1451428041838,0.0205078125
1451428043572,0.01953125
1451428048352,0.01953125
1451428051309,0.017578125
1451428058508,0.01953125
1451428061400,0.017578125
1451428063114,0.021484375
1451428069143,0.0205078125
1451428070536,0.0224609375
1451428071962,0.021484375
1451428075857,0.017578125
1451428076532,0.017578125
1451428079417,0.0185546875
1451428080709,0.0205078125
1451428083733,0.0185546875
1451428085858,0.0224609375
1451428086924,0.021484375
1451428091057,0.0224609375
1451428092301,0.0205078125
1451428093837,0.01953125
1451428095859,0.01953125
1451428096959,0.0224609375
1451428098634,0.0205078125
1451428100190,0.0185546875
1451428101442,0.0205078125
1451428102776,0.021484375
1451428104097,0.0224609375
1451428107253,0.0205078125
1451428110485,0.017578125
1451428112554,0.017578125
1451428113830,0.017578125
1451428115860,0.021484375
1451428117130,0.01953125
1451428118543,0.017578125
1451428119783,0.01953125
1451428121397,0.0205078125
1451428122914,0.017578125
1451428124378,0.021484375
1451428125968,0.0185546875
1451428127514,0.0185546875
1451428128886,0.01953125
1451428130286,0.017578125
1451428131897,0.0185546875
1451428133361,0.0224609375
1451428135863,0.0205078125
1451428136427,0.021484375
1451428139267,0.0224609375
1451428141232,0.0185546875
1451428142621,0.0205078125
1451428145865,0.021484375
1451428147399,0.021484375
1451428150385,0.021484375
1451428151852,0.017578125
1451428155913,0.021484375
1451428157610,0.0205078125
1451428159327,0.021484375
1451428161095,0.01953125
1451428162599,0.021484375
1451428164236,0.0205078125
1451428165867,0.0205078125
1451428166878,0.021484375
1451428168382,0.021484375
1451428171712,0.017578125
1451428174049,0.017578125
1451428175869,0.017578125
1451428176825,0.01953125
1451428179778,0.0224609375
1451428182612,0.01953125
1451428185871,0.0224609375
1451428187327,0.021484375
1451428194702,0.0205078125
1451428199219,0.0185546875
1451428201095,0.0185546875
1451428203029,0.017578125
1451428206113,0.021484375
1451428207532,0.017578125
1451428209056,0.021484375
1451428210706,0.017578125
1451428212118,0.0224609375
1451428213515,0.021484375
1451428215873,0.021484375
1451428218149,0.0224609375
1451428219992,0.021484375
1451428221380,0.0185546875
1451428222672,0.021484375
1451428223968,0.021484375
1451428225877,0.0185546875
1451428226840,0.0224609375
1451428232981,0.017578125
1451428234612,0.021484375
1451428235986,0.01953125
1451428239092,0.01953125
1451428242633,0.0205078125
1451428244183,0.0185546875
1451428245879,0.0185546875
1451428246823,0.021484375
1451428248436,0.0224609375
1451428249686,0.0205078125
1451428251048,0.021484375
1451428253892,0.017578125
1451428256629,0.01953125
1451428263200,0.0224609375
1451428264490,0.0224609375
1451428265926,0.0224609375
1451428267293,0.0224609375
1451428270637,0.0224609375
1451428272357,0.0205078125
1451428273778,0.021484375
1451428275883,0.0224609375
1451428279393,0.0224609375
1451428282671,0.021484375
1451428285883,0.0224609375
1451428291052,0.017578125
1451428292892,0.017578125
1451428295889,0.017578125
1451428296831,0.0205078125
1451428301246,0.021484375
1451428305886,0.0205078125
1451428312089,0.021484375
1451428313469,0.0205078125
1451428315887,0.021484375
1451428318480,0.0205078125
1451428321194,0.021484375
1451428327711,0.021484375
1451428332722,0.021484375
1451428334424,0.0224609375
1451428340443,0.021484375
1451428341891,0.017578125
1451428343773,0.0205078125
1451428348712,0.021484375
1451428353357,0.017578125
1451428354743,0.01953125
1451428357856,0.0205078125
1451428359466,0.01953125
1451428360854,0.0205078125
1451428363957,0.0185546875
1451428365895,0.0224609375
1451428367449,0.021484375
1451428369183,0.01953125
1451428370422,0.021484375
1451428371778,0.0205078125
1451428376407,0.0185546875
1451428377769,0.021484375
1451428379287,0.0205078125
1451428381239,0.01953125
1451428382703,0.017578125
1451428386332,0.0224609375
1451428387682,0.01953125
1451428388954,0.021484375
1451428390407,0.0205078125
1451428395897,0.021484375
1451428398504,0.021484375
1451428402324,0.01953125
1451428408735,0.01953125
1451428410205,0.021484375
1451428412189,0.01953125
1451428414094,0.017578125
1451428419573,0.0205078125
1451428422243,0.01953125
1451428424007,0.0224609375
1451428427694,0.0205078125
1451428429328,0.01953125
1451428433601,0.0205078125
1451428435903,0.0185546875
1451428436289,0.021484375
1451428437705,0.01953125
1451428439142,0.01953125
1451428440835,0.0205078125
1451428442176,0.0205078125
1451428443538,0.0224609375
1451428446805,0.0205078125
1451428448045,0.01953125
1451428449443,0.0205078125
1451428451409,0.0224609375
1451428452667,0.017578125
1451428454162,0.021484375
1451428456049,0.021484375
1451428458823,0.0224609375
1451428461085,0.0224609375
1451428465205,0.01953125
1451428466455,0.017578125
1451428471090,0.0224609375
1451428473307,0.017578125
1451428475089,0.021484375
1451428478663,0.01953125
1451428479916,0.021484375
1451428486092,0.021484375
1451428487557,0.0185546875
1451428491087,0.0205078125
1451428495208,0.01953125
1451428496468,0.021484375
1451428497950,0.021484375
1451428499430,0.01953125
1451428501089,0.021484375
1451428501999,0.01953125
1451428504857,0.0224609375
1451428507346,0.017578125
1451428511512,0.0224609375
1451428516227,0.021484375
1451428517761,0.0205078125
1451428519243,0.0205078125
1451428529743,0.0224609375
1451428531183,0.0205078125
1451428533245,0.017578125
1451428535681,0.017578125
1451428537662,0.0224609375
1451428539132,0.0224609375
1451428542405,0.0205078125
1451428543951,0.0224609375
1451428545389,0.0205078125
1451428549904,0.0205078125
1451428551260,0.0224609375
1451428552764,0.021484375
1451428554207,0.017578125
1451428555743,0.01953125
1451428557057,0.021484375
1451428558779,0.0185546875
1451428561098,0.0185546875
1451428562717,0.01953125
1451428563978,0.0205078125
1451428565546,0.021484375
1451428568791,0.0224609375
1451428571103,0.0224609375
1451428572017,0.01953125
1451428573394,0.0224609375
1451428576642,0.0205078125
1451428578094,0.0205078125
1451428579736,0.0224609375
1451428581589,0.0224609375
1451428583355,0.0185546875
1451428585221,0.0205078125
1451428586783,0.0205078125
1451428588743,0.0224609375
1451428591100,0.021484375
1451428592388,0.0205078125
1451428593966,0.021484375
1451428596125,0.017578125
1451428597447,0.0205078125
1451428601107,0.0205078125
1451428604936,0.017578125
1451428606638,0.021484375
1451428613043,0.021484375
1451428622831,0.021484375
1451428625701,0.0205078125
1451428627619,0.021484375
1451428631110,0.017578125
1451428632428,0.0205078125
1451428633806,0.0205078125
1451428635290,0.021484375
1451428643048,0.01953125
1451428644426,0.0205078125
1451428647544,0.01953125
1451428651108,0.0224609375
1451428653563,0.017578125
1451428654959,0.017578125
1451428657597,0.017578125
1451428661114,0.0205078125
1451428661832,0.0185546875
1451428668001,0.0185546875
1451428669771,0.0205078125
1451428671198,0.017578125
1451428672650,0.017578125
1451428674508,0.021484375
1451428677772,0.0205078125
1451428679249,0.0185546875
1451428681117,0.021484375
1451428683719,0.021484375
1451428685328,0.0205078125
1451428688222,0.021484375
1451428691176,0.0224609375
1451428695355,0.017578125
1451428696807,0.017578125
1451428698299,0.0205078125
1451428699560,0.0224609375
1451428701524,0.0185546875
1451428702932,0.0224609375
1451428704478,0.0185546875
1451428707701,0.0224609375
1451428714382,0.017578125
1451428718344,0.0224609375
1451468790488,0.01953125
1451468797990,0.0205078125
1451468805969,0.01953125
1451468809934,0.0205078125
1451468817263,0.021484375
1451468821268,0.017578125
1451468825022,0.0205078125
1451468831143,0.017578125
1451468838745,0.0205078125
1451468840695,0.017578125
1451468855517,0.0224609375
1451468857389,0.021484375
1451468859915,0.0185546875
1451468878452,0.017578125
1451468887849,0.0224609375
1451468889087,0.017578125
1451468893626,0.017578125
1451468917751,0.0224609375
1451468924739,0.017578125
1451468940913,0.0224609375
1451468942520,0.0224609375
1451468946304,0.017578125
1451468947534,0.017578125
1451468957506,0.0185546875
1451468959758,0.017578125
1451468962580,0.021484375
1451468964746,0.0185546875
1451468987123,0.017578125
1451468994851,0.0224609375
1451468996123,0.017578125
1451469018934,0.017578125
1451469020404,0.017578125
1451469030076,0.0185546875
1451469040442,0.01953125
1451469045650,0.0224609375
1451469047243,0.01953125
1451469050051,0.01953125
1451469070242,0.017578125
1451469074903,0.021484375
1451469078952,0.0185546875
1451469087151,0.017578125
1451469091906,0.017578125
1451469110850,0.017578125
1451469116181,0.021484375
1451469117419,0.0224609375
1451469121172,0.021484375
1451469125935,0.0185546875
1451469134769,0.0224609375
1451469144767,0.01953125
1451469149594,0.0205078125
1451469155909,0.0224609375
1451469166324,0.01953125
1451469170308,0.017578125
1451469178086,0.0224609375
1451469179328,0.017578125
1451469182888,0.017578125
1451469184773,0.0224609375
1451469186629,0.0224609375
1451469188259,0.01953125
1451469201925,0.017578125
1451469216129,0.0205078125
1451469221958,0.017578125
1451469231309,0.0185546875
1451469241781,0.0185546875
1451469255477,0.017578125
1451469264782,0.017578125
1451469280519,0.021484375
1451469287306,0.017578125
1451469301574,0.0224609375
1451469305426,0.0224609375
1451469311427,0.021484375
1451469325143,0.017578125
1451469339032,0.0205078125
1451469344794,0.017578125
1451469354798,0.017578125
1451469362617,0.017578125
1451469370388,0.017578125
1451469373338,0.0224609375
1451469378521,0.017578125
1451469384798,0.0205078125
1451469387236,0.0224609375
1451469392060,0.021484375
1451469397174,0.0205078125
1451469400995,0.017578125
1451469407563,0.0185546875
1451469411653,0.017578125
1451469418010,0.0224609375
1451469420793,0.021484375
1451469434806,0.0224609375
1451469455233,0.017578125
1451469459363,0.017578125
1451469461998,0.0224609375
1451469467579,0.0205078125
1451469474811,0.0185546875
1451469481328,0.0224609375
1451469486825,0.017578125
1451469494938,0.017578125
1451469515967,0.017578125
1451469520038,0.021484375
1451469527803,0.0224609375
1451469538704,0.017578125
1451469549132,0.0205078125
1451469562380,0.017578125
1451469565442,0.017578125
1451469573346,0.017578125
1451469578603,0.0205078125
1451469581681,0.0205078125
1451469596889,0.0185546875
1451469601054,0.017578125
1451469608485,0.0205078125
1451469609721,0.017578125
1451469618104,0.01953125
1451469622647,0.017578125
1451469624829,0.0205078125
1451469627370,0.017578125
1451469630208,0.017578125
1451469641916,0.0224609375
1451469643412,0.017578125
1451469657898,0.01953125
1451469662373,0.0224609375
1451469668276,0.01953125
1451469673133,0.0185546875
1451469685038,0.017578125
1451469695408,0.0224609375
1451469704844,0.0185546875
1451469719158,0.0185546875
1451469724842,0.021484375
1451469726912,0.017578125
1451469729811,0.017578125
1451469732403,0.0224609375
1451469742130,0.017578125
1451469743367,0.0224609375
1451469745764,0.017578125
1451469748754,0.017578125
1451469754992,0.021484375
1451469764856,0.0224609375
1451469766764,0.021484375
1451469773461,0.0185546875
1451469778498,0.017578125
1451469781192,0.0224609375
1451469784851,0.0224609375
1451469803064,0.017578125
1451469806852,0.017578125
1451469809347,0.01953125
1451469816118,0.01953125
1451469820103,0.021484375
1451469821336,0.017578125
1451469826347,0.017578125
1451469832750,0.0224609375
1451469836891,0.0224609375
1451469838234,0.0185546875
1451469865024,0.017578125
1451469868825,0.017578125
1451469880175,0.017578125
1451469899193,0.0224609375
1451469912453,0.017578125
1451469920731,0.017578125
1451469923571,0.017578125
1451469927662,0.017578125
1451469952097,0.017578125
1451469958298,0.0205078125
1451469965815,0.017578125
1451469981302,0.017578125
1451469988070,0.017578125
1451470003494,0.0224609375
1451470015907,0.017578125
1451470019874,0.017578125
1451470031751,0.017578125
1451470043407,0.017578125
1451470047237,0.017578125
1451470058411,0.017578125
1451470061515,0.017578125
1451470068764,0.017578125
1451470072597,0.021484375
1451470074894,0.017578125
1451470081068,0.017578125
1451470111242,0.017578125
1451470114893,0.0185546875
1451470129655,0.017578125
1451470133366,0.0224609375
1451470144898,0.01953125
1451470148268,0.017578125
1451470153655,0.0205078125
1451470158626,0.017578125
1451470183335,0.021484375
1451470198291,0.0205078125
1451470200964,0.0224609375
1451470234908,0.0224609375
1451470247266,0.021484375
1451470250991,0.017578125
1451470256382,0.017578125
1451470264919,0.017578125
1451470268177,0.017578125
1451470280472,0.017578125
1451470286568,0.0185546875
1451470290613,0.01953125
1451470294917,0.017578125
1451470301602,0.0185546875
1451470313328,0.017578125
1451470317002,0.017578125
1451470330063,0.017578125
1451470342539,0.0224609375
1451470346565,0.0224609375
1451470347791,0.0224609375
1451470349023,0.021484375
1451470350313,0.021484375
1451470351564,0.021484375
1451470352802,0.0224609375
1451470354926,0.0205078125
1451470355427,0.0205078125
1451470360443,0.021484375
1451470366445,0.0224609375
1451470367688,0.021484375
1451470371307,0.0205078125
1451470372551,0.0224609375
1451470374992,0.021484375
1451470379032,0.0205078125
1451470384931,0.021484375
1451470386325,0.021484375
1451470387562,0.0224609375
1451470389989,0.021484375
1451470391224,0.021484375
1451470397226,0.021484375
1451470398723,0.021484375
1451470402518,0.021484375
1451470403759,0.0224609375
1451470407838,0.021484375
1451470409065,0.0205078125
1451470410824,0.021484375
1451470413261,0.021484375
1451470414933,0.021484375
1451470418469,0.021484375
1451470420896,0.0205078125
1451470424946,0.021484375
1451470425754,0.021484375
1451470430568,0.021484375
1451470431816,0.0224609375
1451470433056,0.021484375
1451470434936,0.0224609375
1451470444935,0.021484375
1451470446699,0.021484375
1451470447944,0.0224609375
1451470451566,0.0205078125
1451470452812,0.0205078125
1451470455245,0.0224609375
1451470456614,0.021484375
1451470458089,0.0205078125
1451470459344,0.021484375
1451470460580,0.021484375
1451470463006,0.021484375
1451470465435,0.021484375
1451470468584,0.0205078125
1451470469825,0.0224609375
1451470477885,0.0205078125
1451470479122,0.0224609375
1451470481551,0.0224609375
1451470484953,0.0224609375
1451470487658,0.0224609375
1451470490094,0.0224609375
1451470491339,0.0224609375
1451470495164,0.0205078125
1451470500149,0.0224609375
1451470503776,0.0205078125
1451470505008,0.0224609375
1451470507438,0.0224609375
1451470509879,0.0205078125
1451470511124,0.021484375
1451470513557,0.0205078125
1451470514964,0.0205078125
1451470517640,0.0224609375
1451470518888,0.0224609375
1451470521316,0.021484375
1451470523749,0.021484375
1451470526171,0.021484375
1451470528983,0.0205078125
1451470530984,0.021484375
1451470532223,0.021484375
1451470533634,0.021484375
1451470536282,0.0224609375
1451470539902,0.0205078125
1451470541139,0.0224609375
1451470544964,0.0205078125
1451470548390,0.0205078125
1451470549634,0.021484375
1451470550877,0.0224609375
1451470554951,0.0205078125
1451470555989,0.01953125
1451470557456,0.0205078125
1451470558712,0.021484375
1451470561137,0.021484375
1451470562378,0.021484375
1451470564955,0.021484375
1451470567231,0.021484375
1451470568470,0.0224609375
1451470569712,0.01953125
1451470570954,0.021484375
1451470572204,0.021484375
1451470573444,0.021484375
1451470586328,0.017578125
1451470595124,0.0205078125
1451470602164,0.017578125
1451470610417,0.017578125
1451470617752,0.01953125
1451470627322,0.0224609375
1451470632275,0.017578125
1451470645265,0.017578125
1451470650290,0.017578125
1451470660197,0.017578125
1451470663465,0.017578125
1451470667664,0.017578125
1451470668891,0.0185546875
1451470677708,0.0185546875
1451470690021,0.0224609375
1451470694978,0.021484375
1451470700844,0.017578125
1451470719147,0.017578125
1451470727676,0.017578125
1451470733424,0.017578125
1451470745937,0.0224609375
1451470754987,0.017578125
1451470770527,0.017578125
1451470778093,0.017578125
1451470800314,0.0205078125
1451470808743,0.017578125
1451470819124,0.0185546875
1451470823851,0.017578125
1451470829774,0.017578125
1451470833548,0.017578125
1451470843835,0.017578125
1451470854993,0.021484375
1451470863743,0.0185546875
1451470870030,0.0224609375
1451470875655,0.021484375
1451470879907,0.017578125
1451470893443,0.017578125
1451470901366,0.017578125
1451470925066,0.021484375
1451470929886,0.017578125
1451470935005,0.021484375
1451470955386,0.017578125
1451470958774,0.017578125
1451470965410,0.017578125
1451470982654,0.017578125
1451470990111,0.017578125
1451471000927,0.0224609375
1451471010149,0.017578125
1451471015015,0.017578125
1451471021708,0.021484375
1451471038656,0.021484375
1451471042741,0.0224609375
1451471051388,0.021484375
1451471061715,0.017578125
1451471068681,0.017578125
1451471071571,0.017578125
1451471075622,0.017578125
1451471087018,0.017578125
1451471090648,0.017578125
1451471111972,0.021484375
1451471136451,0.017578125
1451471152031,0.017578125
1451471160085,0.0224609375
1451471165049,0.01953125
1451471173838,0.017578125
1451471178499,0.021484375
1451471182826,0.017578125
1451471186520,0.021484375
1451471190323,0.017578125
1451471200090,0.017578125
1451471214056,0.021484375
1451471233305,0.0205078125
1451471246273,0.017578125
1451471250245,0.017578125
1451471253528,0.017578125
1451471255514,0.017578125
1451471260099,0.017578125
1451471263713,0.017578125
1451471270738,0.0224609375
1451471274639,0.021484375
1451471284264,0.021484375
1451471287029,0.017578125
1451471290948,0.017578125
1451471305111,0.0205078125
1451471313581,0.017578125
1451471317319,0.017578125
1451471328297,0.017578125
1451471338084,0.017578125
1451471340110,0.0185546875
1451471356659,0.017578125
1451471362112,0.0185546875
1451471365924,0.017578125
1451471372925,0.017578125
1451471375472,0.017578125
1451471376725,0.01953125
1451471380114,0.0224609375
1451471383903,0.0224609375
1451471418568,0.017578125
1451471424907,0.021484375
1451471433281,0.0185546875
1451471436905,0.017578125
1451471438687,0.021484375
1451471447209,0.0224609375
1451471450845,0.017578125
1451471468654,0.0205078125
1451471473674,0.017578125
1451471490131,0.01953125
1451471494959,0.017578125
1451471498446,0.017578125
1451471506175,0.0185546875
1451471514058,0.0185546875
1451471530169,0.01953125
1451471541896,0.017578125
1451471555030,0.017578125
1451471581972,0.017578125
1451471601285,0.017578125
1451471613172,0.0224609375
1451471615991,0.017578125
1451471618077,0.017578125
1451471622692,0.0224609375
1451471626403,0.0224609375
1451471632171,0.017578125
1451471645219,0.017578125
1451471660149,0.017578125
1451471663084,0.0224609375
1451471664330,0.017578125
1451471670857,0.01953125
1451471678844,0.017578125
1451471682449,0.017578125
1451471691536,0.0205078125
1451471710179,0.01953125
1451471717011,0.017578125
1451471721450,0.0224609375
1451471746364,0.0224609375
1451471748945,0.0205078125
1451471752473,0.01953125
1451471756188,0.017578125
1451471776286,0.0224609375
1451471790168,0.0224609375
1451471795356,0.021484375
1451471800420,0.017578125
1451471806467,0.017578125
1451471813912,0.017578125
1451471822439,0.017578125
1451471834313,0.017578125
1451471838410,0.017578125
1451471851976,0.0205078125
1451471853216,0.017578125
1451471856340,0.017578125
1451471860405,0.017578125
1451471870178,0.017578125
1451471871762,0.017578125
1451471884684,0.0185546875
1451471890983,0.0205078125
1451471932364,0.017578125
1451471940209,0.0224609375
1451471942807,0.021484375
1451471944316,0.017578125
1451471947296,0.021484375
1451471948538,0.017578125
1451472084086,0.0224609375
1451472085326,0.029296875
1451472091199,0.03125
1451472094801,0.0205078125
1451472100718,0.021484375
1451472103901,0.01953125
1451472106543,0.0302734375
1451472110266,0.0185546875
1451472114002,0.0185546875
1451472117146,0.029296875
1451472125580,0.0302734375
1451472129364,0.0205078125
1451472131293,0.0302734375
1451472135793,0.0185546875
1451472140256,0.0224609375
1451472143568,0.01953125
1451472147349,0.02734375
1451472151097,0.025390625
1451472153722,0.03125
1451472182800,0.0322265625
1451472184049,0.0244140625
1451472185299,0.0263671875
1451472187365,0.03125
1451472187797,0.0244140625
1451472189047,0.0244140625
1451472190301,0.0224609375
1451472191547,0.0224609375
1451472193026,0.021484375
1451472194288,0.021484375
1451472197362,0.03515625
1451472197952,0.0234375
1451472199192,0.0234375
1451472200432,0.0234375
1451472201675,0.0224609375
1451472202919,0.021484375
1451472204163,0.021484375
1451472205407,0.0224609375
1451472207364,0.0224609375
1451472207912,0.0205078125
1451472209160,0.025390625
1451472210408,0.021484375
1451472211686,0.021484375
1451472213172,0.0205078125
1451472214509,0.0205078125
1451472215745,0.0205078125
1451472217375,0.0224609375
1451472218235,0.0224609375
1451472219477,0.0224609375
1451472220724,0.0205078125
1451472221970,0.033203125
1451472223210,0.021484375
1451472224454,0.0224609375
1451472225696,0.0224609375
1451472227371,0.0234375
1451472228185,0.0234375
1451472229431,0.021484375
1451472230681,0.0205078125
1451472232115,0.0234375
1451472233589,0.021484375
1451472234854,0.0205078125
1451472236088,0.0302734375
1451472237368,0.0244140625
1451472238590,0.0234375
1451472240456,0.0205078125
1451472241687,0.0244140625
1451472243673,0.0205078125
1451472244923,0.0205078125
1451472246167,0.0234375
1451472247466,0.0234375
1451472248943,0.0234375
1451472250210,0.0263671875
1451472251452,0.0234375
1451472252696,0.0224609375
1451472253985,0.0224609375
1451472255173,0.0205078125
1451472257371,0.0224609375
1451472257705,0.0234375
1451472258943,0.0234375
1451472260189,0.0224609375
1451472261434,0.0244140625
1451472263880,0.0234375
1451472265128,0.021484375
1451472267372,0.0205078125
1451472267679,0.021484375
1451472269195,0.0224609375
1451472270607,0.01953125
1451472271845,0.021484375
1451472273087,0.021484375
1451472274329,0.0224609375
1451472275574,0.0224609375
1451472277374,0.0234375
1451472278058,0.0234375
1451472279302,0.0283203125
1451472280540,0.0234375
1451472281786,0.0205078125
1451472283023,0.021484375
1451472284275,0.021484375
1451472285525,0.0205078125
1451472287373,0.021484375
1451472288184,0.0224609375
1451472289672,0.0224609375
1451472290924,0.021484375
1451472292166,0.0205078125
1451472293404,0.01953125
1451472294652,0.0205078125
1451472295896,0.021484375
1451472297375,0.0205078125
1451472298383,0.0205078125
1451472299621,0.0205078125
1451472301427,0.0205078125
1451472303411,0.021484375
1451472304878,0.021484375
1451472306184,0.021484375
1451472307420,0.0224609375
1451472308666,0.021484375
1451472311097,0.0224609375
1451472312339,0.0224609375
1451472313587,0.033203125
1451472314829,0.0224609375
1451472316073,0.0224609375
1451472317380,0.0234375
1451472318552,0.0322265625
1451472319802,0.0283203125
1451472321048,0.0205078125
1451472322299,0.0205078125
1451472323547,0.0224609375
1451472324999,0.0234375
1451472327381,0.021484375
1451472327739,0.0224609375
1451472328973,0.021484375
1451472330218,0.021484375
1451472331460,0.0380859375
1451472332702,0.0224609375
1451472333944,0.0322265625
1451472335190,0.0224609375
1451472337382,0.021484375
1451472337706,0.0205078125
1451472338961,0.025390625
1451472341399,0.021484375
1451472342649,0.0205078125
1451472397598,0.021484375
1451472398846,0.0224609375
1451472400082,0.0234375
1451472401340,0.029296875
1451472402854,0.0205078125
1451472403837,0.01953125
1451472405086,0.01953125
1451472406379,0.01953125
1451472407873,0.0205078125
1451472409119,0.0205078125
1451472410368,0.0205078125
1451472411608,0.021484375
1451472412856,0.0224609375
1451472414094,0.0224609375
1451472415350,0.0302734375
1451472418514,0.0341796875
1451472419785,0.029296875
1451472423299,0.037109375
1451472426772,0.0283203125
1451472428022,0.017578125
1451472431117,0.0224609375
1451472434094,0.025390625
1451472436573,0.037109375
1451472437923,0.029296875
1451472439646,0.02734375
1451472442860,0.029296875
1451472443530,0.025390625
1451472445058,0.0341796875
1451472446331,0.033203125
1451472448691,0.033203125
1451472452862,0.021484375
1451472455116,0.0224609375
1451472456528,0.017578125
1451472459165,0.0302734375
1451472460407,0.017578125
1451472462971,0.02734375
1451472464607,0.0302734375
1451472467756,0.033203125
1451472470326,0.0244140625
1451472472865,0.0302734375
1451472475196,0.0322265625
1451472478049,0.025390625
1451472479371,0.025390625
1451472482864,0.0244140625
1451472485910,0.0283203125
1451472487453,0.021484375
1451472490533,0.02734375
1451472492865,0.0302734375
1451472494198,0.0390625
1451472495440,0.017578125
1451472498916,0.025390625
1451472500156,0.0224609375
1451472502867,0.021484375
1451472504003,0.0302734375
1451472506661,0.02734375
1451472507914,0.017578125
1451472511190,0.0224609375
1451472513704,0.0283203125
1451472515621,0.03515625
1451472517796,0.03515625
1451472519493,0.017578125
1451472521542,0.0400390625
1451472525242,0.0322265625
1451472526990,0.02734375
1451472529549,0.0361328125
1451472531237,0.0322265625
1451472534866,0.0185546875
1451472536948,0.0263671875
1451472538326,0.0283203125
1451472539744,0.0283203125
1451472541143,0.0234375
1451472543891,0.02734375
1451472545125,0.017578125
1451472548526,0.0419921875
1451472549768,0.017578125
1451472553034,0.03125
1451472554277,0.017578125
1451472556811,0.0263671875
1451472559261,0.037109375
1451472563058,0.03515625
1451472565391,0.02734375
1451472567664,0.037109375
1451472568989,0.0322265625
1451472570229,0.017578125
1451472572877,0.0341796875
1451472573981,0.01953125
1451472577154,0.0380859375
1451472579044,0.01953125
1451472581492,0.033203125
1451472584129,0.0302734375
1451472585485,0.017578125
1451472586886,0.029296875
1451472588130,0.017578125
1451472589364,0.0205078125
1451472590862,0.02734375
1451472592880,0.0302734375
1451472595054,0.0244140625
1451472596289,0.017578125
1451472599817,0.0322265625
1451472602886,0.0234375
1451472603976,0.0283203125
1451472605220,0.017578125
1451472607584,0.029296875
1451472608879,0.017578125
1451472612884,0.0390625
1451472616059,0.025390625
1451472618588,0.025390625
1451472621050,0.0244140625
1451472622882,0.017578125
1451472624763,0.0224609375
1451472626379,0.0361328125
1451472629522,0.025390625
1451472630776,0.021484375
1451472634326,0.02734375
1451472637709,0.0185546875
1451472640773,0.0322265625
1451472642885,0.0244140625
1451472645182,0.0322265625
1451472649800,0.029296875
1451472652889,0.0283203125
1451472653735,0.0361328125
1451472656527,0.03515625
1451472657777,0.017578125
1451472660130,0.0322265625
1451472662888,0.02734375
1451472664255,0.025390625
1451472665853,0.021484375
1451472668849,0.03515625
1451472671417,0.0302734375
1451472672902,0.0244140625
1451472674906,0.029296875
1451472676146,0.017578125
1451472678625,0.0380859375
1451472682891,0.0361328125
1451472683563,0.02734375
1451472686418,0.0224609375
1451472687666,0.025390625
1451472690597,0.041015625
1451472692893,0.0205078125
1451472694387,0.0263671875
1451472696353,0.029296875
1451472699228,0.017578125
1451472702897,0.0380859375
1451472703550,0.017578125
1451472704796,0.029296875
1451472708073,0.0302734375
1451472709325,0.017578125
1451472712896,0.0302734375
1451472713636,0.0224609375
1451472716648,0.0244140625
1451472717888,0.02734375
1451472720407,0.021484375
1451472721649,0.017578125
1451472724870,0.0263671875
1451472726214,0.025390625
1451472727456,0.0205078125
1451472729984,0.02734375
1451472731232,0.0185546875
1451472733807,0.03125
1451472735051,0.01953125
1451472736421,0.0244140625
1451472738755,0.0263671875
1451472741314,0.0322265625
1451472742900,0.0263671875
1451472745552,0.0283203125
1451472746795,0.017578125
1451472750009,0.03125
1451472752900,0.0322265625
1451472754074,0.0302734375
1451472755336,0.0302734375
1451472758772,0.0283203125
1451472761096,0.017578125
1451472762903,0.0341796875
1451472764461,0.0244140625
1451472765733,0.029296875
1451472768980,0.03125
1451472770234,0.0263671875
1451472773444,0.029296875
1451472775977,0.0341796875
1451472778763,0.0263671875
1451472780314,0.03515625
1451472781596,0.025390625
1451472784124,0.0361328125
1451472785370,0.017578125
1451472789009,0.03125
1451472792911,0.0283203125
1451472794213,0.041015625
1451472796884,0.0302734375
1451472798126,0.03515625
1451472801405,0.029296875
1451472802907,0.017578125
1451472805167,0.0302734375
1451472807850,0.03125
1451472809091,0.017578125
1451472811702,0.0302734375
1451472812950,0.017578125
1451472816419,0.02734375
1451472818839,0.017578125
1451472821410,0.0322265625
1451472822910,0.0185546875
1451472826129,0.0283203125
1451472827685,0.0263671875
1451472830387,0.02734375
1451472831627,0.017578125
1451472833067,0.025390625
1451472834311,0.017578125
1451472837424,0.0224609375
1451472838966,0.0263671875
1451472840228,0.021484375
1451472841727,0.017578125
1451472844667,0.03515625
1451472845901,0.017578125
1451472848300,0.0322265625
1451472849542,0.017578125
1451472852912,0.02734375
1451472854188,0.0322265625
1451472857396,0.03515625
1451472860007,0.033203125
1451472861260,0.017578125
1451472863738,0.0224609375
1451472864982,0.03515625
1451472868201,0.0283203125
1451472869621,0.01953125
1451472873271,0.029296875
1451472876846,0.02734375
1451472878552,0.017578125
1451472881140,0.017578125
1451472883347,0.0419921875
1451472884591,0.017578125
1451472887933,0.0283203125
1451472889181,0.017578125
1451472892920,0.029296875
1451472894296,0.017578125
1451472896659,0.0302734375
1451472897903,0.0205078125
1451472900480,0.025390625
1451472901723,0.02734375
1451472904062,0.033203125
1451472905307,0.01953125
1451472909405,0.033203125
1451472910646,0.0185546875
1451472913039,0.025390625
1451472914289,0.017578125
1451472917600,0.0302734375
1451472920432,0.033203125
1451472922924,0.01953125
1451472925437,0.0234375
1451472927977,0.0322265625
1451472929302,0.033203125
1451472930546,0.0205078125
1451472934094,0.029296875
1451472936430,0.0234375
1451472939441,0.017578125
1451472941759,0.017578125
1451472944308,0.017578125
1451472948252,0.0205078125
1451472950628,0.03125
1451472952927,0.0263671875
1451472954225,0.0234375
1451472956649,0.03125
1451472957890,0.017578125
1451472960027,0.025390625
1451472961340,0.033203125
1451472964589,0.0234375
1451472965837,0.0205078125
1451472968315,0.021484375
1451472969561,0.0185546875
1451472972930,0.0361328125
1451472973246,0.017578125
1451472976770,0.0244140625
1451472978261,0.0205078125
1451473125908,0.017578125
1451473127388,0.0283203125
1451473129833,0.02734375
1451473131277,0.0400390625
1451473133754,0.0234375
1451473135003,0.0205078125
1451473138198,0.03125
1451473139956,0.03125
1451473142772,0.03515625
1451473144017,0.0185546875
1451473147291,0.029296875
1451473148719,0.037109375
1451473151524,0.0302734375
1451473153020,0.0341796875
1451473154490,0.037109375
1451473156047,0.0361328125
1451473157283,0.017578125
1451473160155,0.02734375
1451473162778,0.02734375
1451473164032,0.017578125
1451473166994,0.0234375
1451473171281,0.0234375
1451473173029,0.02734375
1451473174303,0.0283203125
1451473177442,0.0341796875
1451473179820,0.0234375
1451473181334,0.0361328125
1451473182716,0.0302734375
1451473186459,0.017578125
1451473189852,0.025390625
1451473192806,0.01953125
1451473194062,0.017578125
1451473196187,0.0283203125
1451473197423,0.017578125
1451473199899,0.02734375
1451473201287,0.017578125
1451473204450,0.0234375
1451473205794,0.0341796875
1451473209232,0.025390625
1451473213366,0.0341796875
1451473214814,0.0234375
1451473217435,0.0341796875
1451473218698,0.017578125
1451473222118,0.041015625
1451473223433,0.0263671875
1451473227107,0.0263671875
1451473229739,0.029296875
1451473231288,0.0263671875
1451473232236,0.017578125
1451473235824,0.0205078125
1451473239073,0.0341796875
1451473241289,0.017578125
1451473242605,0.0263671875
1451473246794,0.017578125
1451473251306,0.021484375
1451473253657,0.0234375
1451473254899,0.017578125
1451473257417,0.025390625
1451473260140,0.025390625
1451473261384,0.0244140625
1451473263534,0.029296875
1451473265877,0.0302734375
1451473267125,0.0205078125
1451473269693,0.03125
1451473271359,0.03125
1451473275430,0.0244140625
1451473276964,0.029296875
1451473279673,0.0322265625
1451473281309,0.017578125
1451473283503,0.0322265625
1451473284823,0.0283203125
1451473286084,0.025390625
1451473287872,0.0283203125
1451473289112,0.02734375
1451473291663,0.03515625
1451473292909,0.0185546875
1451473296123,0.0322265625
1451473297369,0.017578125
1451473301298,0.0380859375
1451473302376,0.0234375
1451473306495,0.017578125
1451473308229,0.0263671875
1451473309503,0.025390625
1451473311299,0.017578125
1451473312822,0.02734375
1451473314070,0.01953125
1451473316442,0.0322265625
1451473317702,0.0302734375
1451473319711,0.0185546875
1451473321821,0.0380859375
1451473324475,0.03515625
1451473327012,0.03125
1451473328254,0.01953125
1451473332250,0.029296875
1451473333497,0.0234375
1451473336359,0.033203125
1451473337605,0.01953125
1451473339971,0.0400390625
1451473342290,0.0341796875
1451473343538,0.017578125
1451473346126,0.0244140625
1451473347645,0.0244140625
1451473349105,0.025390625
1451473352222,0.0263671875
1451473353877,0.041015625
1451473356478,0.0234375
1451473357986,0.025390625
1451473359436,0.0322265625
1451473361775,0.02734375
1451473363017,0.017578125
1451473366593,0.017578125
1451473368422,0.025390625
1451473369684,0.029296875
1451473371308,0.0302734375
1451473372340,0.017578125
1451473374550,0.0224609375
1451473376889,0.0322265625
1451473379419,0.0283203125
1451473381308,0.017578125
1451473382984,0.0390625
1451473384226,0.017578125
1451473386624,0.0322265625
1451473387875,0.017578125
1451473391309,0.0322265625
1451473391835,0.017578125
1451473395141,0.01953125
1451473398444,0.02734375
1451473400136,0.03515625
1451473402817,0.0341796875
1451473404059,0.017578125
1451473406663,0.029296875
1451473408155,0.0361328125
1451473411312,0.021484375
1451473412166,0.0322265625
1451473413684,0.0263671875
1451473415010,0.0283203125
1451473416257,0.017578125
1451473418687,0.033203125
1451473419943,0.017578125
1451473422424,0.0224609375
1451473423984,0.02734375
1451473426752,0.0234375
1451473428282,0.0302734375
1451473431315,0.0341796875
1451473432175,0.017578125
1451473435321,0.03125
1451473436577,0.0205078125
1451473438772,0.025390625
1451473441456,0.037109375
1451473444269,0.0263671875
1451473445758,0.0341796875
1451473448329,0.0234375
1451473449610,0.02734375
1451473451997,0.021484375
1451473454804,0.025390625
1451473458437,0.025390625
1451473461319,0.029296875
1451473462145,0.017578125
1451473464616,0.02734375
1451473467254,0.02734375
1451473468786,0.02734375
1451473471323,0.017578125
1451473472737,0.0244140625
1451473477552,0.0283203125
1451473480130,0.033203125
1451473481726,0.0234375
1451473484599,0.025390625
1451473486981,0.017578125
1451473489919,0.0283203125
1451473492400,0.0263671875
1451473493888,0.0283203125
1451473495206,0.0224609375
1451473497538,0.033203125
1451473498985,0.0341796875
1451473501323,0.017578125
1451473502535,0.0224609375
1451473503777,0.017578125
1451473507214,0.0380859375
1451473508830,0.0322265625
1451473511703,0.029296875
1451473512945,0.017578125
1451473515445,0.025390625
1451473516857,0.0283203125
1451473518258,0.03125
1451473519760,0.03515625
1451473521326,0.017578125
1451473524159,0.037109375
1451473525859,0.033203125
1451473528445,0.03125
1451473529687,0.017578125
1451473531884,0.03125
1451473535514,0.0234375
1451473536754,0.017578125
1451473537993,0.0205078125
1451473541329,0.0390625
1451473541883,0.029296875
1451473546392,0.033203125
1451473549520,0.017578125
1451473551940,0.021484375
1451473554151,0.0322265625
1451473556723,0.03515625
1451473557973,0.02734375
1451473561334,0.025390625
1451473561974,0.017578125
1451473565488,0.02734375
1451473566736,0.017578125
1451473571337,0.0283203125
1451473571959,0.017578125
1451473573942,0.0244140625
1451473576250,0.041015625
1451473577494,0.017578125
1451473580064,0.0302734375
1451473581337,0.0185546875
1451473583513,0.0341796875
1451473586133,0.0283203125
1451473587376,0.029296875
1451473591336,0.0390625
1451473593385,0.0224609375
1451473595853,0.0302734375
1451473598657,0.0390625
1451473600172,0.021484375
1451473601742,0.021484375
1451473602990,0.0283203125
1451473604277,0.017578125
1451473607577,0.017578125
1451473611343,0.017578125
1451473612197,0.017578125
1451473614368,0.025390625
1451473616822,0.0380859375
1451473618068,0.017578125
1451473621341,0.025390625
1451473622955,0.0205078125
1451473625757,0.0283203125
1451473626999,0.017578125
1451473631342,0.0263671875
1451473632866,0.029296875
1451473634111,0.017578125
1451473637813,0.03125
1451473639053,0.029296875
1451473641412,0.0322265625
1451473645036,0.021484375
1451473646282,0.017578125
1451473648797,0.0283203125
1451473651603,0.0283203125
1451473653081,0.017578125
1451473655592,0.0283203125
1451473658190,0.0283203125
1451473659436,0.017578125
1451473661979,0.037109375
1451473663301,0.03515625
1451473664545,0.01953125
1451473667825,0.017578125
1451473671782,0.03125
1451473673246,0.017578125
1451473676305,0.0234375
1451473677549,0.0244140625
1451473678797,0.0244140625
1451473681729,0.025390625
1451473685160,0.041015625
1451473687772,0.0283203125
1451473689014,0.017578125
1451473691351,0.0341796875
1451473692523,0.021484375
1451473695872,0.025390625
1451473698237,0.0283203125
1451473699646,0.021484375
1451473702056,0.041015625
1451473705681,0.025390625
1451473708110,0.0322265625
1451473709351,0.0234375
1451473711498,0.029296875
1451473712740,0.017578125
1451473715852,0.0390625
1451473717219,0.0283203125
1451473718459,0.017578125
1451473721351,0.0283203125
1451473722303,0.0244140625
1451473723556,0.0322265625
1451473726064,0.029296875
1451473728650,0.017578125
1451473731355,0.03125
1451473732355,0.03515625
1451473735177,0.01953125
1451473737722,0.02734375
1451473738962,0.033203125
1451473741730,0.0302734375
1451473742972,0.017578125
1451473746349,0.0361328125
1451473747597,0.017578125
1451473749796,0.029296875
1451473753424,0.02734375
1451473755646,0.02734375
1451473756889,0.017578125
1451473759287,0.0322265625
1451473761357,0.0400390625
1451473763816,0.0341796875
1451473765056,0.0322265625
1451473768216,0.02734375
1451473771359,0.025390625
1451473771805,0.025390625
1451473773057,0.0185546875
1451473775939,0.0341796875
1451473777186,0.017578125
1451473781360,0.0234375
1451473782892,0.0380859375
1451473787013,0.017578125
1451473788245,0.03515625
1451473791551,0.017578125
1451473792792,0.017578125
1451473794988,0.025390625
1451473796234,0.017578125
1451473798663,0.02734375
1451473799911,0.017578125
1451473802279,0.0419921875
1451473804861,0.03515625
1451473806094,0.017578125
1451473807328,0.017578125
1451473809742,0.037109375
1451473811368,0.017578125
1451473814267,0.025390625
1451473817869,0.03125
1451473819189,0.0263671875
1451473821366,0.017578125
1451473823728,0.0283203125
1451473826132,0.037109375
1451473827381,0.021484375
1451473828629,0.017578125
1451473831421,0.0224609375
1451473834656,0.0263671875
1451473835972,0.0322265625
1451473837216,0.0244140625
1451473839341,0.0283203125
1451473841369,0.0341796875
1451473842913,0.03125
1451473844155,0.017578125
1451473846612,0.0322265625
1451473848828,0.017578125
1451473851774,0.0263671875
1451473853551,0.0234375
1451473855921,0.033203125
1451473857243,0.0390625
1451473859387,0.0302734375
1451473862116,0.0341796875
1451473863416,0.0302734375
1451473866753,0.0322265625
1451473868141,0.02734375
1451473871371,0.0322265625
1451473873163,0.033203125
1451473875888,0.0302734375
1451473878556,0.037109375
1451473880042,0.017578125
1451473883275,0.0283203125
1451473884509,0.017578125
1451473886629,0.0322265625
1451473887876,0.017578125
1451473891374,0.0302734375
1451473892590,0.025390625
1451473894689,0.0234375
1451473896055,0.0263671875
1451473897709,0.0380859375
1451473901376,0.03125
1451473901914,0.017578125
1451473904390,0.0244140625
1451473905640,0.017578125
1451473908655,0.017578125
1451473913329,0.03515625
1451473915716,0.03515625
1451473918306,0.033203125
1451473919645,0.029296875
1451473922921,0.0244140625
1451473924357,0.0380859375
1451473927635,0.0322265625
1451473931380,0.0380859375
1451473932918,0.0244140625
1451473934210,0.0390625
1451473936783,0.033203125
1451473938395,0.02734375
1451473941390,0.033203125
1451473942634,0.0185546875
1451473946054,0.0302734375
1451473948562,0.0361328125
1451473949813,0.017578125
1451473951933,0.0283203125
1451473953208,0.0244140625
1451473954451,0.017578125
1451473956958,0.03515625
1451473958444,0.017578125
1451473961382,0.0322265625
1451473962127,0.029296875
1451473965295,0.041015625
1451473968205,0.017578125
1451473971394,0.017578125
1451473972814,0.0283203125
1451473974256,0.0263671875
1451473976873,0.0390625
1451473978241,0.0322265625
1451473980028,0.041015625
1451473982638,0.02734375
1451473983882,0.017578125
1451473986232,0.0322265625
1451473987474,0.0283203125
1451473991387,0.02734375
1451473992723,0.021484375
1451473995155,0.0205078125
1451473996396,0.0390625
1451473997644,0.021484375
1451473998892,0.0234375
1451474000140,0.0263671875
1451474001396,0.0224609375
1451474002685,0.0400390625
1451474004155,0.0224609375
1451474005483,0.0224609375
1451474006715,0.0234375
1451474007959,0.0224609375
1451474009201,0.0224609375
1451474011390,0.0234375
1451474011694,0.0224609375
1451474012934,0.021484375
1451474014176,0.021484375
1451474015416,0.021484375
1451474016667,0.0205078125
1451474017913,0.021484375
1451474019163,0.0224609375
1451474021393,0.0205078125
1451474021707,0.0224609375
1451474023213,0.021484375
1451474024656,0.0205078125
1451474025892,0.0224609375
1451474027138,0.021484375
1451474029080,0.0224609375
1451474031393,0.0205078125
1451474032469,0.0205078125
1451474033717,0.0400390625
1451474034965,0.021484375
1451474036213,0.0380859375
1451474037461,0.0205078125
1451474038918,0.02734375
1451474041396,0.0224609375
1451474041678,0.0224609375
1451474042922,0.0224609375
1451474044167,0.021484375
1451474045409,0.021484375
1451474046653,0.021484375
1451474047897,0.0205078125
1451474049137,0.0205078125
1451474051396,0.01953125
1451474051662,0.0224609375
1451474052916,0.0224609375
1451474054168,0.0224609375
1451474055414,0.021484375
1451474056664,0.0205078125
1451474057916,0.0205078125
1451474059409,0.0234375
1451474061397,0.0224609375
1451474062039,0.0205078125
1451474063284,0.0205078125
1451474064530,0.0205078125
1451474065772,0.01953125
1451474067014,0.0205078125
1451474068256,0.0341796875
1451474069498,0.021484375
1451474071407,0.0205078125
1451474071987,0.0205078125
1451474073227,0.021484375
1451474074477,0.021484375
1451474075728,0.021484375
1451474076970,0.0234375
1451474078395,0.0205078125
1451474079868,0.0234375
1451474081400,0.0224609375
1451474083558,0.0361328125
1451474084800,0.037109375
1451474086048,0.0224609375
1451474087293,0.0224609375
1451474089201,0.0224609375
1451474093097,0.0234375
1451474094356,0.0205078125
1451474095607,0.0224609375
1451474097072,0.0205078125
1451474099590,0.01953125
1451474101408,0.01953125
1451474102073,0.01953125
1451474103315,0.029296875
1451474104559,0.0205078125
1451474105802,0.021484375
1451474107048,0.0224609375
1451474108290,0.0224609375
1451474109532,0.0224609375
1451474111402,0.021484375
1451474112022,0.0390625
1451474113271,0.0224609375
1451474114521,0.021484375
1451474115763,0.03515625
1451474117248,0.021484375
1451474118688,0.01953125
1451474119940,0.021484375
1451474121404,0.0302734375
1451474122428,0.0224609375
1451474123672,0.0224609375
1451474124916,0.0224609375
1451474126165,0.0224609375
1451474127407,0.021484375
1451474128651,0.0205078125
1451474129887,0.03125
1451474131407,0.03125
1451474132388,0.0205078125
1451474133634,0.021484375
1451474134882,0.0205078125
1451474136178,0.01953125
1451474137678,0.0224609375
1451474138944,0.021484375
1451474140176,0.03125
1451474141417,0.0205078125
1451474142661,0.0205078125
1451474143905,0.0224609375
1451474145147,0.021484375
1451474146387,0.025390625
1451474147628,0.01953125
1451474148868,0.0224609375
1451474151413,0.0400390625
1451474152992,0.0224609375
1451474154436,0.0205078125
1451474155673,0.0224609375
1451474156917,0.021484375
1451474158163,0.021484375
1451474161410,0.0224609375
1451474161840,0.021484375
1451474163082,0.01953125
1451474164328,0.0224609375
1451474165569,0.021484375
1451474166808,0.0234375
1451474168048,0.01953125
1451474169299,0.021484375
1451474171411,0.0205078125
1451474171795,0.021484375
1451474173233,0.0205078125
1451474174710,0.0224609375
1451474175974,0.021484375
1451474177218,0.01953125
1451474178458,0.0205078125
1451474179700,0.021484375
1451474181412,0.0244140625
1451474182179,0.0205078125
1451474183419,0.021484375
1451474184659,0.0224609375
1451474185899,0.0205078125
1451474187149,0.0234375
1451474188400,0.021484375
1451474189644,0.0205078125
1451474190892,0.0224609375
1451474192186,0.021484375
1451474194891,0.021484375
1451474196127,0.0283203125
1451474197367,0.021484375
1451474198917,0.0224609375
1451474199855,0.0224609375
1451474201095,0.01953125
1451474202338,0.0205078125
1451474203578,0.021484375
1451474204818,0.01953125
1451474206064,0.0302734375
1451474207308,0.0205078125
1451474208923,0.01953125
1451474210813,0.01953125
1451474212918,0.0205078125
1451474214147,0.01953125
1451474215389,0.021484375
1451474216638,0.0224609375
1451474218922,0.0205078125
1451474219162,0.01953125
1451474220400,0.0205078125
1451474221642,0.0263671875
1451474222891,0.0224609375
1451474224137,0.025390625
1451474225387,0.0224609375
1451474226635,0.017578125
1451474229832,0.0400390625
1451474231330,0.017578125
1451474234360,0.02734375
1451474235598,0.025390625
1451474238925,0.0322265625
1451474239267,0.03125
1451474241569,0.0244140625
1451474243163,0.0234375
1451474246208,0.02734375
1451474247446,0.017578125
1451474251499,0.03125
1451474252747,0.017578125
1451474256008,0.0302734375
1451474257252,0.017578125
1451474260730,0.03125
1451474263422,0.0234375
1451474265733,0.03515625
1451474268929,0.03125
1451474271506,0.025390625
1451474272742,0.037109375
1451474275322,0.0322265625
1451474276964,0.0302734375
1451474279539,0.033203125
1451474280843,0.0185546875
1451474284698,0.0244140625
1451474287092,0.0322265625
1451474290707,0.021484375
1451474293349,0.0361328125
1451474294591,0.017578125
1451474298932,0.033203125
1451474299492,0.03515625
1451474303102,0.029296875
1451474305721,0.03125
1451474306965,0.0390625
1451474310163,0.0283203125
1451474311802,0.025390625
1451474314754,0.0224609375
1451474316358,0.0244140625
1451474318938,0.0390625
1451474320125,0.03515625
1451474321367,0.017578125
1451474323552,0.0419921875
1451474324794,0.0224609375
1451474328934,0.029296875
1451474329428,0.01953125
1451474332245,0.01953125
1451474335323,0.017578125
1451474336785,0.0244140625
1451474338978,0.033203125
1451474340508,0.02734375
1451474341748,0.01953125
1451474343998,0.02734375
1451474345241,0.017578125
1451474348938,0.029296875
1451474351431,0.03515625
1451474352678,0.0263671875
1451474355180,0.029296875
1451474358938,0.029296875
1451474359233,0.0224609375
1451474362303,0.03125
1451474363796,0.017578125
1451474366770,0.037109375
1451474368940,0.01953125
1451474371004,0.025390625
1451474372251,0.0283203125
1451474374259,0.033203125
1451474375501,0.0205078125
1451474378941,0.0302734375
1451474379794,0.017578125
1451474382256,0.0283203125
1451474383504,0.041015625
1451474384750,0.0283203125
1451474386003,0.017578125
1451474389751,0.0244140625
1451474391687,0.017578125
1451474394198,0.0283203125
1451474396462,0.0283203125
1451474399196,0.03125
1451474400437,0.017578125
1451474402583,0.0224609375
1451474404923,0.03125
1451474408946,0.025390625
1451474409920,0.017578125
1451474413407,0.02734375
1451474414893,0.0263671875
1451474418947,0.0380859375
1451474419225,0.017578125
1451474421556,0.029296875
1451474422872,0.0244140625
1451474424146,0.0400390625
1451474427581,0.03125
1451474430005,0.0361328125
1451474431247,0.03125
1451474433569,0.033203125
1451474434846,0.02734375
1451474437400,0.0283203125
1451474438950,0.017578125
1451474441651,0.025390625
1451474443121,0.0302734375
1451474446739,0.0224609375
1451474448952,0.0263671875
1451474451036,0.0390625
1451474453252,0.017578125
1451474456093,0.025390625
1451474459801,0.029296875
1451474461156,0.0322265625
1451474465320,0.0224609375
1451474466554,0.02734375
1451474469829,0.025390625
1451474471071,0.017578125
1451474474419,0.0263671875
1451474475718,0.029296875
1451474476958,0.017578125
1451474479758,0.033203125
1451474481002,0.0185546875
1451474484213,0.029296875
1451474485461,0.0234375
1451474487809,0.0341796875
1451474489056,0.017578125
1451474492466,0.0234375
1451474494086,0.02734375
1451474496643,0.03125
1451474498959,0.021484375
1451474500138,0.02734375
1451474501375,0.017578125
1451474504502,0.0263671875
1451474505938,0.0244140625
1451474508958,0.0302734375
1451474509959,0.03125
1451474513197,0.029296875
1451474515231,0.029296875
1451474516466,0.0322265625
1451474517710,0.017578125
1451474520838,0.0263671875
1451474522479,0.0224609375
1451474525537,0.029296875
1451474529233,0.0361328125
1451474530472,0.0234375
1451474532728,0.0322265625
1451474533972,0.017578125
1451474536551,0.0283203125
1451474540277,0.03125
1451474541667,0.017578125
1451474543877,0.03125
1451474545398,0.029296875
1451474548964,0.0234375
1451474550703,0.0283203125
1451474553487,0.0322265625
1451474555875,0.037109375
1451474557120,0.0263671875
1451474559796,0.025390625
1451474561044,0.017578125
1451474564452,0.029296875
1451474565699,0.017578125
1451474568967,0.0244140625
1451474569375,0.017578125
1451474573552,0.037109375
1451474575398,0.017578125
1451474579091,0.0302734375
1451474581455,0.0283203125
1451474582737,0.0322265625
1451474584324,0.037109375
1451474587454,0.025390625
1451474588968,0.025390625
1451474590920,0.01953125
1451474593203,0.0205078125
1451474595819,0.0302734375
1451474597065,0.0283203125
1451474600282,0.029296875
1451474601708,0.025390625
1451474604973,0.03125
1451474606213,0.017578125
1451474608971,0.0283203125
1451474610055,0.029296875
1451474611536,0.03515625
1451474615002,0.0283203125
1451474617536,0.0263671875
1451474618973,0.017578125
1451474622399,0.025390625
1451474625950,0.0322265625
1451474627328,0.02734375
1451474628976,0.0302734375
1451474629986,0.017578125
1451474632861,0.0283203125
1451474636355,0.033203125
1451474639020,0.0263671875
1451474640812,0.025390625
1451474642586,0.041015625
1451474645315,0.0361328125
1451474647733,0.03125
1451474649395,0.029296875
1451474652394,0.033203125
1451474654702,0.03125
1451474656146,0.0302734375
1451474659268,0.0302734375
1451474660585,0.0283203125
1451474662867,0.0263671875
1451474664117,0.0205078125
1451474667268,0.03515625
1451474668980,0.033203125
1451474672008,0.025390625
1451474674611,0.03125
1451474678981,0.0244140625
1451474679651,0.0205078125
1451474682882,0.0400390625
1451474685288,0.0361328125
1451474686737,0.03125
1451474688983,0.017578125
1451474691035,0.03125
1451474695184,0.017578125
1451474697064,0.02734375
1451474699541,0.03515625
1451474701155,0.0380859375
1451474704007,0.03515625
1451474705249,0.0205078125
1451474706568,0.03125
1451474707804,0.017578125
1451474711178,0.03125
1451474712416,0.017578125
1451474716077,0.025390625
1451474718988,0.0283203125
1451474719811,0.029296875
1451474722116,0.0283203125
1451474724984,0.0302734375
1451474726526,0.0234375
1451474730023,0.033203125
1451474731263,0.01953125
1451474734494,0.0322265625
1451474736816,0.033203125
1451474738988,0.0263671875
1451474740930,0.0361328125
1451474743549,0.029296875
1451474744803,0.0224609375
1451474747015,0.0302734375
1451474750576,0.029296875
1451474752452,0.01953125
1451474755079,0.0322265625
1451474756968,0.017578125
1451474759008,0.0361328125
1451474759989,0.017578125
1451474761222,0.017578125
1451474763946,0.0244140625
1451474765190,0.02734375
1451474768993,0.029296875
1451474769755,0.025390625
1451474771035,0.0302734375
1451474775212,0.02734375
1451474776456,0.017578125
1451474779658,0.0361328125
1451474782113,0.0322265625
1451474784771,0.029296875
1451474786011,0.017578125
1451474789052,0.0302734375
1451474789978,0.017578125
1451474792384,0.0361328125
1451474795788,0.033203125
1451474797033,0.017578125
1451474799527,0.02734375
1451474800931,0.017578125
1451474803412,0.0283203125
1451474804958,0.03125
1451474807742,0.0302734375
1451474809001,0.0361328125
1451474811261,0.033203125
1451474812521,0.017578125
1451474814996,0.017578125
1451474819010,0.041015625
1451474820496,0.0302734375
1451474821980,0.017578125
1451474824067,0.021484375
1451474825303,0.0185546875
1451474827673,0.033203125
1451474829002,0.017578125
1451474831840,0.029296875
1451474834488,0.037109375
1451474835734,0.029296875
1451474839005,0.03125
1451474840137,0.01953125
1451474843330,0.0283203125
1451474844576,0.017578125
1451474847714,0.0341796875
1451474850345,0.0302734375
1451474851843,0.017578125
1451474854829,0.0341796875
1451474857145,0.0263671875
1451474859006,0.0185546875
1451474861964,0.03125
1451474863204,0.017578125
1451474866363,0.0283203125
1451474867603,0.017578125
1451474870723,0.0341796875
1451474871966,0.017578125
1451474875716,0.0263671875
1451474877142,0.0341796875
1451474880231,0.02734375
1451474882613,0.03125
1451474883990,0.0322265625
1451474886972,0.02734375
1451474890352,0.0361328125
1451474892619,0.03125
1451474893861,0.017578125
1451474896325,0.03515625
1451474899010,0.02734375
1451474900148,0.0322265625
1451474901394,0.017578125
1451474904197,0.0263671875
1451474906767,0.0234375
1451474909019,0.037109375
1451474911220,0.0283203125
1451474913588,0.0244140625
1451474914834,0.017578125
1451474917422,0.02734375
1451474919013,0.0390625
1451474921107,0.033203125
1451474922353,0.017578125
1451474924870,0.0341796875
1451474927276,0.033203125
1451474929014,0.0263671875
1451474929964,0.017578125
1451474932715,0.0283203125
1451474935533,0.017578125
1451474939072,0.0302734375
1451474939848,0.017578125
1451474943246,0.0234375
1451474945717,0.03515625
1451474946965,0.017578125
1451474949459,0.029296875
1451474952005,0.029296875
1451474953498,0.03125
1451474955512,0.03125
1451474956842,0.025390625
1451474959016,0.0185546875
1451474961201,0.0361328125
1451474962443,0.0185546875
1451474965708,0.033203125
1451474966952,0.021484375
1451474969026,0.0302734375
1451474969454,0.017578125
1451474971919,0.029296875
1451474974325,0.03125
1451474975574,0.017578125
1451474979019,0.02734375
1451474979635,0.0205078125
1451474981480,0.029296875
1451474985232,0.0283203125
1451474986475,0.017578125
1451474989699,0.029296875
1451474990943,0.017578125
1451474995390,0.017578125
1451474997128,0.017578125
1451475000128,0.0244140625
1451475001775,0.025390625
1451475004873,0.021484375
1451475006346,0.0224609375
1451475009024,0.0361328125
1451475011524,0.0361328125
1451475012764,0.01953125
1451475015299,0.0322265625
1451475017423,0.02734375
1451475021270,0.0302734375
1451475024722,0.0302734375
1451475025968,0.017578125
1451475029033,0.0380859375
1451475029435,0.017578125
1451475032187,0.0224609375
1451475034788,0.029296875
1451475036340,0.037109375
1451475039108,0.0244140625
1451475041615,0.025390625
1451475042883,0.03125
1451475044127,0.041015625
1451475046751,0.0380859375
1451475049030,0.017578125
1451475051456,0.02734375
1451475052716,0.017578125
1451475057239,0.01953125
1451475059829,0.0302734375
1451475061377,0.025390625
1451475064530,0.0322265625
1451475065768,0.0234375
1451475067010,0.0283203125
1451475070111,0.0263671875
1451475071381,0.03125
1451475074815,0.0322265625
1451475077206,0.0322265625
1451475079760,0.0302734375
1451475082140,0.03515625
1451475083623,0.017578125
1451475085737,0.0283203125
1451475086971,0.017578125
1451475089091,0.0205078125
1451475091242,0.0302734375
1451475092519,0.029296875
1451475093758,0.0380859375
1451475096147,0.0341796875
1451475099035,0.0302734375
1451475099871,0.017578125
1451475102828,0.0302734375
1451475104490,0.0302734375
1451475107459,0.0283203125
1451475109037,0.017578125
1451475111233,0.0283203125
1451475112745,0.0302734375
1451475115496,0.0361328125
1451475119044,0.021484375
1451475119800,0.029296875
1451475123324,0.0302734375
1451475125639,0.0361328125
1451475129041,0.0263671875
1451475130564,0.02734375
1451475132062,0.017578125
1451475134950,0.0244140625
1451475137250,0.0390625
1451475139889,0.0302734375
1451475141227,0.0322265625
1451475143843,0.0302734375
1451475145084,0.017578125
1451475149072,0.029296875
1451475151449,0.03515625
1451475152703,0.017578125
1451475155177,0.0283203125
1451475156423,0.017578125
1451475159218,0.025390625
1451475160664,0.017578125
1451475164541,0.0263671875
1451475166689,0.0322265625
1451475167879,0.017578125
1451475170408,0.0302734375
1451475171648,0.029296875
1451475174179,0.02734375
1451475177168,0.0224609375
1451475179279,0.0244140625
1451475180523,0.017578125
1451475182445,0.0224609375
1451475185772,0.02734375
1451475187082,0.0263671875
1451475189048,0.017578125
1451475190806,0.03515625
1451475193209,0.0322265625
1451475195587,0.0283203125
1451475197225,0.0283203125
1451475199688,0.0341796875
1451475201072,0.0302734375
1451475203392,0.025390625
1451475205711,0.02734375
1451475206957,0.03125
1451475209053,0.0263671875
1451475211053,0.0322265625
1451475212338,0.017578125
1451475216438,0.029296875
1451475219051,0.0341796875
1451475221477,0.0322265625
1451475222719,0.017578125
1451475224775,0.03125
1451475227200,0.03515625
1451475229908,0.029296875
1451475232647,0.0341796875
1451475233943,0.0185546875
1451475237461,0.0361328125
1451475240868,0.0302734375
1451475242110,0.017578125
1451475244334,0.0244140625
1451475245692,0.0361328125
1451475249059,0.0322265625
1451475249317,0.0263671875
1451475250563,0.017578125
1451475253087,0.03515625
1451475255556,0.0341796875
1451475256807,0.017578125
1451475259342,0.03125
1451475262011,0.01953125
1451475263333,0.017578125
1451475267022,0.0302734375
1451475269060,0.0380859375
1451475270344,0.0302734375
1451475272020,0.037109375
1451475274587,0.03125
1451475275829,0.021484375
1451475279059,0.0244140625
1451475281176,0.0283203125
1451475282846,0.0302734375
1451475285762,0.0302734375
1451475287014,0.0185546875
1451475289339,0.0234375
1451475290753,0.017578125
1451475292157,0.02734375
1451475295400,0.0283203125
1451475299066,0.017578125
1451475300344,0.0224609375
1451475301591,0.025390625
1451475303977,0.025390625
1451475306509,0.03125
1451475310084,0.0283203125
1451475311736,0.029296875
1451475315449,0.02734375
1451475316715,0.017578125
1451475319167,0.033203125
1451475323606,0.0302734375
1451475325238,0.03515625
1451475329071,0.0302734375
1451475329271,0.017578125
1451475330507,0.0234375
1451475331779,0.03125
1451475334117,0.02734375
1451475335370,0.0224609375
1451475339066,0.02734375
1451475340778,0.0234375
1451475343269,0.03515625
1451475345621,0.03125
1451475349067,0.029296875
1451475349736,0.0263671875
1451475351854,0.03125
1451475353096,0.017578125
1451475355499,0.0322265625
1451475359599,0.017578125
1451475361754,0.0224609375
1451475363352,0.025390625
1451475366232,0.033203125
1451475367814,0.0341796875
1451475370577,0.0263671875
1451475371819,0.021484375
1451475373965,0.0234375
1451475375209,0.01953125
1451475379072,0.0322265625
1451475379549,0.01953125
1451475382810,0.037109375
1451475385169,0.03125
1451475387529,0.033203125
1451475389073,0.0224609375
1451475393004,0.0224609375
1451475396160,0.02734375
1451475397441,0.0302734375
1451475399075,0.0244140625
1451475399933,0.017578125
1451475403009,0.0341796875
1451475404254,0.0302734375
1451475407524,0.029296875
1451475409078,0.017578125
1451475412135,0.03125
1451475415795,0.0322265625
1451475419082,0.017578125
1451475420312,0.0234375
1451475422018,0.017578125
1451475424943,0.03515625
1451475426183,0.017578125
1451475429079,0.0234375
1451475431108,0.03515625
1451475432486,0.0390625
1451475433734,0.017578125
1451475437172,0.03515625
1451475439079,0.0185546875
1451475442109,0.0302734375
1451475445342,0.02734375
1451475446586,0.0205078125
1451475449750,0.03125
1451475451397,0.029296875
1451475454157,0.0302734375
1451475455397,0.017578125
1451475457577,0.0283203125
1451475460072,0.0244140625
1451475461326,0.017578125
1451475463500,0.02734375
1451475466255,0.0380859375
1451475467497,0.017578125
1451475470233,0.03515625
1451475472686,0.0263671875
1451475475040,0.03515625
1451475476294,0.0302734375
1451475479089,0.017578125
1451475480967,0.0234375
1451475482207,0.017578125
1451475484217,0.0341796875
1451475485958,0.03125
1451475489089,0.03125
1451475491175,0.0185546875
1451475492682,0.03125
1451475494613,0.037109375
1451475495857,0.0224609375
1451475497103,0.021484375
1451475500082,0.0341796875
1451475501682,0.0263671875
1451475504738,0.029296875
1451475505980,0.0185546875
1451475510149,0.0244140625
1451475511395,0.0263671875
1451475513361,0.0322265625
1451475514610,0.017578125
1451475517148,0.0263671875
1451475519090,0.021484375
1451475521121,0.02734375
1451475523523,0.0283203125
1451475524767,0.0234375
1451475527147,0.0341796875
1451475529092,0.017578125
1451475530510,0.0302734375
1451475532975,0.0341796875
1451475534215,0.017578125
1451475536441,0.0244140625
1451475540574,0.017578125
1451475543122,0.017578125
1451475546842,0.0234375
1451475549573,0.033203125
1451475551173,0.0283203125
1451475554238,0.025390625
1451475555510,0.0341796875
1451475557656,0.0322265625
1451475560062,0.033203125
1451475561305,0.025390625
1451475564095,0.0341796875
1451475566425,0.0263671875
1451475567678,0.0244140625
1451475570968,0.0234375
1451475574049,0.0302734375
1451475575291,0.017578125
1451475579099,0.0234375
1451475579733,0.017578125
1451475583208,0.025390625
1451475585608,0.03515625
1451475587695,0.03515625
1451475590489,0.029296875
1451475591737,0.017578125
1451475595104,0.029296875
1451475596350,0.017578125
1451475599602,0.021484375
1451475603093,0.0244140625
1451475606607,0.0302734375
1451475607847,0.02734375
1451475609192,0.0341796875
1451475611580,0.0361328125
1451475612822,0.021484375
1451475616229,0.0302734375
1451475617475,0.02734375
1451475619103,0.017578125
1451475621701,0.025390625
1451475623208,0.021484375
1451475626032,0.0322265625
1451475627274,0.017578125
1451475630751,0.0322265625
1451475631993,0.017578125
1451475635533,0.02734375
1451475636772,0.02734375
1451475639106,0.03125
1451475641242,0.037109375
1451475642495,0.017578125
1451475644943,0.0302734375
1451475646921,0.02734375
1451475649114,0.03125
1451475649848,0.021484375
1451475651350,0.029296875
1451475653620,0.03515625
1451475655258,0.033203125
1451475659627,0.017578125
1451475662049,0.021484375
1451475664696,0.0205078125
1451475665940,0.0234375
1451475669110,0.0322265625
1451475669632,0.017578125
1451475672843,0.0244140625
1451475674077,0.021484375
1451475677178,0.033203125
1451475679110,0.017578125
1451475681888,0.029296875
1451475683142,0.0341796875
1451475684383,0.017578125
1451475687541,0.0302734375
1451475689111,0.0185546875
1451475690898,0.0283203125
1451475692148,0.017578125
1451475695492,0.0341796875
1451475696739,0.017578125
1451475699115,0.025390625
1451475700497,0.0205078125
1451475703734,0.0205078125
1451475704976,0.0244140625
1451475709114,0.0302734375
1451475709479,0.0361328125
1451475710720,0.017578125
1451475714279,0.0263671875
1451475715521,0.017578125
1451475716762,0.017578125
1451475723160,0.0234375
1451475726457,0.037109375
1451475727699,0.017578125
1451475730796,0.0322265625
1451475732040,0.0205078125
1451475735256,0.02734375
1451475736500,0.017578125
1451475739119,0.0322265625
1451475741385,0.0302734375
1451475743877,0.0361328125
1451475745130,0.017578125
1451475747584,0.0244140625
1451475750182,0.025390625
1451475752081,0.0234375
1451475755085,0.025390625
1451475756681,0.0302734375
1451475759366,0.0263671875
1451475760608,0.017578125
1451475764129,0.037109375
1451475765368,0.0205078125
1451475769125,0.0263671875
1451475770319,0.02734375
1451475773344,0.0419921875
1451475774590,0.017578125
1451475779129,0.0263671875
1451475783241,0.017578125
1451475785150,0.02734375
1451475787612,0.02734375
1451475789126,0.0185546875
1451475791358,0.0302734375
1451475793937,0.033203125
1451475796689,0.0283203125
1451475797945,0.01953125
1451475800292,0.03125
1451475801612,0.017578125
1451475805014,0.021484375
1451475807329,0.03125
1451475809129,0.029296875
1451475810301,0.029296875
1451475813169,0.03125
1451475814600,0.033203125
1451475815870,0.0283203125
1451475817112,0.0185546875
1451475819781,0.029296875
1451475821031,0.017578125
1451475824263,0.0244140625
1451475825629,0.021484375
1451475826878,0.0302734375
1451475829132,0.0244140625
1451475829742,0.0224609375
1451475831036,0.0234375
1451475832270,0.0380859375
1451475833519,0.0224609375
1451475834755,0.0234375
1451475836001,0.0224609375
1451475837241,0.0234375
1451475839134,0.0205078125
1451475840219,0.0390625
1451475841464,0.0234375
1451475843359,0.0234375
1451475844828,0.0224609375
1451475846262,0.0234375
1451475847499,0.021484375
1451475849133,0.0234375
1451475849971,0.021484375
1451475851213,0.021484375
1451475852453,0.0234375
1451475853695,0.0224609375
1451475854942,0.0224609375
1451475856182,0.0341796875
1451475857426,0.0224609375
1451475859134,0.021484375
1451475859910,0.021484375
1451475861159,0.03515625
1451475862403,0.021484375
1451475863645,0.0234375
1451475865091,0.0234375
1451475866565,0.0224609375
1451475867819,0.0224609375
1451475869138,0.021484375
1451476252296,0.03125
1451476255870,0.025390625
1451476256216,0.017578125
1451476258667,0.03125
1451476259913,0.0244140625
1451476262559,0.033203125
1451476265878,0.0224609375
1451476266914,0.0380859375
1451476269880,0.02734375
1451476272431,0.0302734375
1451476273673,0.0205078125
1451476276581,0.0341796875
1451476277823,0.0244140625
1451476280414,0.0244140625
1451476281695,0.0283203125
1451476285875,0.03125
1451476286573,0.017578125
1451476290067,0.0224609375
1451476291314,0.017578125
1451476294150,0.033203125
1451476295880,0.0224609375
1451476299053,0.0302734375
1451476300293,0.01953125
1451476303233,0.0341796875
1451476308778,0.017578125
1451476312317,0.017578125
1451476315880,0.0263671875
1451476316387,0.0263671875
1451476317937,0.01953125
1451476321462,0.029296875
1451476323090,0.0283203125
1451476326315,0.0244140625
1451476327577,0.029296875
1451476331253,0.0302734375
1451476334014,0.0205078125
1451476337892,0.0322265625
1451476339140,0.0205078125
1451476341655,0.0341796875
1451476342903,0.017578125
1451476347078,0.0234375
1451476350748,0.0234375
1451476352167,0.0283203125
1451476355888,0.033203125
1451476356339,0.029296875
1451476359677,0.029296875
1451476360914,0.017578125
1451476364346,0.037109375
1451476365885,0.017578125
1451476370263,0.017578125
1451476373859,0.0234375
1451476375890,0.017578125
1451476377214,0.0341796875
1451476378458,0.0185546875
1451476381085,0.0302734375
1451476382327,0.017578125
1451476386149,0.0341796875
1451476387390,0.017578125
1451476390577,0.0224609375
1451476391856,0.0341796875
1451476394308,0.0302734375
1451476395890,0.01953125
1451476398215,0.0361328125
1451476399501,0.017578125
1451476403271,0.0244140625
1451476406822,0.0283203125
1451476408070,0.017578125
1451476411673,0.0263671875
1451476412915,0.01953125
1451476415897,0.033203125
1451476418433,0.0390625
1451476421978,0.0283203125
1451476423218,0.017578125
1451476425895,0.0341796875
1451476427051,0.017578125
1451476430567,0.033203125
1451476432502,0.0224609375
1451476435896,0.03515625
1451476437805,0.0322265625
1451476439045,0.01953125
1451476442463,0.0361328125
1451476445900,0.0283203125
1451476446394,0.017578125
1451476450268,0.0322265625
1451476451518,0.017578125
1451476455899,0.0224609375
1451476456647,0.0283203125
1451476459880,0.03125
1451476462508,0.03125
1451476463764,0.025390625
1451476466975,0.0224609375
1451476469745,0.0322265625
1451476470985,0.017578125
1451476473638,0.033203125
1451476476442,0.03125
1451476478941,0.0302734375
1451476480185,0.017578125
1451476482453,0.03515625
1451476483973,0.0263671875
1451476485903,0.017578125
1451476489360,0.017578125
1451476491230,0.017578125
1451476493817,0.0341796875
1451476498571,0.021484375
1451476499819,0.017578125
1451476502680,0.0244140625
1451476505915,0.0283203125
1451476507113,0.0224609375
1451476510281,0.0263671875
1451476511529,0.0302734375
1451476515908,0.0283203125
1451476516424,0.029296875
1451476520342,0.0302734375
1451476521583,0.017578125
1451476525907,0.03125
1451476526805,0.0224609375
1451476530240,0.0361328125
1451476533009,0.033203125
1451476535911,0.02734375
1451476537079,0.0419921875
1451476539733,0.0283203125
1451476541260,0.0205078125
1451476543970,0.03515625
1451476545910,0.017578125
1451476548887,0.029296875
1451476552645,0.0302734375
1451476554333,0.0205078125
1451476557038,0.0341796875
1451476558658,0.0302734375
1451476561345,0.017578125
1451476563957,0.033203125
1451476565915,0.0302734375
1451476568746,0.02734375
1451476571152,0.0234375
1451476572394,0.0244140625
1451476576089,0.03125
1451476580025,0.029296875
1451476584486,0.029296875
1451476585916,0.017578125
1451476588465,0.029296875
1451476592415,0.0322265625
1451476596110,0.0302734375
1451476597353,0.017578125
1451476600936,0.029296875
1451476602174,0.0244140625
1451476605919,0.02734375
1451476606451,0.033203125
1451476607701,0.017578125
1451476611324,0.017578125
1451476614594,0.0244140625
1451476615922,0.017578125
1451476619541,0.021484375
1451476620783,0.017578125
1451476624173,0.03515625
1451476626644,0.0341796875
1451476628014,0.0322265625
1451476629255,0.025390625
1451476632189,0.03125
1451476634617,0.0244140625
1451476637096,0.0283203125
1451476638342,0.017578125
1451476641170,0.03515625
1451476645925,0.0283203125
1451476648522,0.0224609375
1451476651176,0.03125
1451476652416,0.021484375
1451476655924,0.03125
1451476656298,0.017578125
1451476660144,0.0244140625
1451476661379,0.017578125
1451476665928,0.0322265625
1451476666674,0.01953125
1451476667918,0.017578125
1451476672313,0.017578125
1451476676571,0.02734375
1451476677809,0.017578125
1451476680522,0.0244140625
1451476682968,0.03125
1451476685929,0.0283203125
1451476688525,0.0322265625
1451476689768,0.017578125
1451476693410,0.0341796875
1451476694658,0.017578125
1451476698513,0.0419921875
1451476702289,0.0234375
1451476705932,0.0322265625
1451476707456,0.0302734375
1451476708698,0.017578125
1451476711473,0.029296875
1451476712713,0.0283203125
1451476716449,0.037109375
1451476717687,0.017578125
1451476721216,0.029296875
1451476722564,0.0322265625
1451476725968,0.03125
1451476728591,0.0263671875
1451476731453,0.0224609375
1451476735936,0.0322265625
1451476736268,0.017578125
1451476738726,0.0302734375
1451476739965,0.017578125
1451476742455,0.0390625
1451476745938,0.0283203125
1451476746604,0.017578125
1451476749162,0.029296875
1451476750624,0.017578125
1451476754017,0.0263671875
1451476756837,0.0263671875
1451476758493,0.03515625
1451476761704,0.0283203125
1451476764466,0.0322265625
1451476765940,0.017578125
1451476768971,0.0283203125
1451476771665,0.03515625
1451476774426,0.0283203125
1451476776026,0.0341796875
1451476777276,0.0205078125
1451476779734,0.033203125
1451476783713,0.0263671875
1451476785941,0.0341796875
1451476788364,0.0322265625
1451476789974,0.0322265625
1451476792198,0.017578125
1451476795945,0.0341796875
1451476796681,0.0390625
1451476799344,0.03515625
1451476802026,0.03515625
1451476803550,0.0244140625
1451476805944,0.025390625
1451476809037,0.0390625
1451476810283,0.017578125
1451476813953,0.0302734375
1451476815946,0.0224609375
1451476817770,0.0302734375
1451476819010,0.01953125
1451476821687,0.0341796875
1451476822935,0.029296875
1451476825947,0.0390625
1451476827094,0.017578125
1451476829696,0.029296875
1451476831172,0.021484375
1451476834486,0.0263671875
1451476837013,0.0283203125
1451476838331,0.0302734375
1451476839573,0.017578125
1451476842254,0.0263671875
1451476843492,0.0234375
1451476846611,0.02734375
1451476847853,0.017578125
1451476850291,0.033203125
1451476852513,0.0205078125
1451476856144,0.017578125
1451476858326,0.0234375
1451476859570,0.017578125
1451476863064,0.03125
1451476864313,0.029296875
1451476865953,0.02734375
1451476868842,0.0322265625
1451476870198,0.0361328125
1451476871662,0.03515625
1451476874321,0.025390625
1451476875955,0.017578125
1451476878805,0.0380859375
1451476881581,0.0341796875
1451476884572,0.02734375
1451476886164,0.0302734375
1451476889171,0.03515625
1451476890511,0.0244140625
1451476891751,0.017578125
1451476895957,0.0302734375
1451476899364,0.033203125
1451476900606,0.0185546875
1451476904141,0.0322265625
1451476905957,0.017578125
1451476907884,0.0224609375
1451476910556,0.03125
1451476913550,0.017578125
1451476916557,0.017578125
1451476919901,0.02734375
1451476922534,0.033203125
1451476923774,0.0244140625
1451476926258,0.0400390625
1451476927504,0.017578125
1451476930103,0.0283203125
1451476931349,0.0234375
1451476934104,0.0263671875
1451476938286,0.0419921875
1451476939540,0.017578125
1451476941774,0.0302734375
1451476943018,0.017578125
1451476945963,0.041015625
1451476947985,0.0322265625
1451476950552,0.037109375
1451476951794,0.017578125
1451476955964,0.0263671875
1451476956524,0.017578125
1451476960041,0.0263671875
1451476961445,0.03125
1451476962689,0.017578125
1451476966252,0.021484375
1451476967716,0.017578125
1451476970172,0.033203125
1451476971411,0.017578125
1451476974501,0.017578125
1451476976723,0.0390625
1451476977964,0.025390625
1451476979213,0.0205078125
1451476982558,0.03515625
1451476985969,0.0283203125
1451476986535,0.017578125
1451476989997,0.0361328125
1451476991710,0.017578125
1451476994494,0.0322265625
1451476995970,0.0185546875
1451476998986,0.02734375
1451477000229,0.0244140625
1451477002885,0.0283203125
1451477004124,0.017578125
1451477007480,0.029296875
1451477008730,0.017578125
1451477012196,0.0361328125
1451477014695,0.0380859375
1451477016229,0.02734375
1451477017691,0.017578125
1451477019738,0.0302734375
1451477020982,0.0244140625
1451477023516,0.0341796875
1451477024814,0.017578125
1451477027073,0.0263671875
1451477028315,0.0224609375
1451477029609,0.037109375
1451477032942,0.017578125
1451477036296,0.01953125
1451477039243,0.0234375
1451477041769,0.025390625
1451477043015,0.0205078125
1451477045991,0.033203125
1451477047236,0.0224609375
1451477050100,0.0390625
1451477051340,0.017578125
1451477053837,0.03125
1451477056233,0.0322265625
1451477057481,0.017578125
1451477060210,0.0302734375
1451477061560,0.033203125
1451477062900,0.01953125
1451477064324,0.017578125
1451477066794,0.0341796875
1451477070481,0.029296875
1451477071725,0.017578125
1451477075982,0.0322265625
1451477077790,0.03125
1451477080529,0.0244140625
1451477081771,0.017578125
1451477084417,0.03515625
1451477086928,0.02734375
1451477088233,0.0263671875
1451477090510,0.02734375
1451477093600,0.017578125
1451477096089,0.037109375
1451477099383,0.029296875
1451477100724,0.025390625
1451477103470,0.0263671875
1451477104712,0.0185546875
1451477107492,0.03515625
1451477110219,0.0244140625
1451477111563,0.0302734375
1451477113123,0.0322265625
1451477115988,0.0283203125
1451477118522,0.03515625
1451477119814,0.037109375
1451477122553,0.037109375
1451477125987,0.033203125
1451477126134,0.0185546875
1451477129444,0.029296875
1451477130972,0.0283203125
1451477134581,0.03515625
1451477135988,0.0234375
1451477138391,0.0341796875
1451477141223,0.03125
1451477142736,0.03125
1451477146820,0.0185546875
1451477148254,0.0322265625
1451477151375,0.033203125
1451477156274,0.0224609375
1451477160332,0.0283203125
1451477162187,0.025390625
1451477163433,0.0205078125
1451477166094,0.03515625
1451477171190,0.0283203125
1451477172766,0.041015625
1451477175994,0.0244140625
1451477177043,0.02734375
1451477178285,0.017578125
1451477180811,0.0263671875
1451477183194,0.02734375
1451477184432,0.029296875
1451477185994,0.0283203125
1451477187046,0.017578125
1451477190959,0.029296875
1451477192205,0.029296875
1451477194611,0.025390625
1451477196055,0.017578125
1451477198558,0.0234375
1451477200146,0.033203125
1451477203257,0.037109375
1451477204497,0.017578125
1451477208321,0.0263671875
1451477211126,0.0263671875
1451477212460,0.0302734375
1451477214220,0.0263671875
1451477217273,0.0283203125
1451477218739,0.017578125
1451477222459,0.0283203125
1451477223706,0.0244140625
1451477226484,0.0263671875
1451477228098,0.0302734375
1451477229342,0.017578125
1451477232265,0.0244140625
1451477233507,0.0185546875
1451477236071,0.0302734375
1451477237665,0.02734375
1451477241098,0.0322265625
1451477243914,0.0302734375
1451477245363,0.02734375
1451477247129,0.03125
1451477250669,0.025390625
1451477252882,0.02734375
1451477254122,0.017578125
1451477257658,0.03125
1451477258997,0.029296875
1451477260401,0.0322265625
1451477261887,0.0302734375
1451477264948,0.033203125
1451477267154,0.0361328125
1451477269818,0.037109375
1451477272401,0.0302734375
1451477277133,0.0263671875
1451477281192,0.0283203125
1451477282430,0.025390625
1451477285272,0.033203125
1451477288053,0.0302734375
1451477289293,0.0234375
1451477293088,0.0322265625
1451477295712,0.033203125
1451477297156,0.017578125
1451477300415,0.033203125
1451477304425,0.025390625
1451477305687,0.029296875
1451477307138,0.01953125
1451477309290,0.0283203125
1451477310532,0.017578125
1451477313010,0.0361328125
1451477314253,0.017578125
1451477317139,0.029296875
1451477318091,0.029296875
1451477320884,0.0224609375
1451477323514,0.03125
1451477327367,0.03515625
1451477329985,0.03125
1451477331455,0.017578125
1451477333473,0.03125
1451477335240,0.017578125
1451477338248,0.017578125
1451477340601,0.0263671875
1451477343459,0.029296875
1451477344827,0.0302734375
1451477347145,0.017578125
1451477348960,0.0361328125
1451477350220,0.017578125
1451477353003,0.0224609375
1451477354571,0.0234375
1451477357329,0.0361328125
1451477358563,0.0185546875
1451477361280,0.0322265625
1451477362520,0.0185546875
1451477365134,0.0302734375
1451477367960,0.025390625
1451477371759,0.0283203125
1451477373107,0.03125
1451477377146,0.02734375
1451477377762,0.017578125
1451477380260,0.033203125
1451477382869,0.0361328125
1451477384507,0.0244140625
1451477385743,0.0185546875
1451477387168,0.03515625
1451477388220,0.017578125
1451477390828,0.0341796875
1451477392070,0.017578125
1451477395914,0.017578125
1451477398629,0.017578125
1451477401041,0.03515625
1451477402632,0.0224609375
1451477407208,0.033203125
1451477409739,0.033203125
1451477411099,0.0283203125
1451477412343,0.0185546875
1451477415147,0.0322265625
1451477417170,0.021484375
1451477418730,0.0322265625
1451477419970,0.017578125
1451477423663,0.0390625
1451477424911,0.017578125
1451477428263,0.0283203125
1451477430736,0.0322265625
1451477432334,0.025390625
1451477433968,0.0205078125
1451477437155,0.033203125
1451477438099,0.0205078125
1451477440543,0.0302734375
1451477441797,0.0244140625
1451477445540,0.0322265625
1451477447174,0.0185546875
1451477449407,0.0322265625
1451477450655,0.029296875
1451477451905,0.0205078125
1451477454869,0.029296875
1451477457158,0.021484375
1451477459396,0.021484375
1451477461014,0.0302734375
1451477464077,0.03515625
1451477465265,0.017578125
1451477468449,0.0380859375
1451477469691,0.017578125
1451477472322,0.029296875
1451477473566,0.01953125
1451477477176,0.0302734375
1451477477465,0.017578125
1451477479919,0.033203125
1451477484968,0.021484375
1451477488658,0.0361328125
1451477489900,0.017578125
1451477493119,0.03125
1451477494361,0.0244140625
1451477497161,0.03125
1451477498174,0.0234375
1451477501496,0.033203125
1451477504037,0.029296875
1451477505285,0.0244140625
1451477508581,0.02734375
1451477509977,0.017578125
1451477512566,0.0244140625
1451477514174,0.0283203125
1451477517382,0.0302734375
1451477521519,0.033203125
1451477524257,0.0341796875
1451477527166,0.029296875
1451477528140,0.0361328125
1451477529444,0.0380859375
1451477532779,0.025390625
1451477537183,0.033203125
1451477539506,0.025390625
1451477541226,0.029296875
1451477544877,0.02734375
1451477547169,0.017578125
1451477548767,0.0390625
1451477553430,0.025390625
1451477554774,0.029296875
1451477557286,0.029296875
1451477558534,0.017578125
1451477562039,0.03125
1451477564635,0.0234375
1451477567188,0.0185546875
1451477569118,0.0322265625
1451477571750,0.0234375
1451477573175,0.03125
1451477579195,0.017578125
1451477581564,0.0322265625
1451477584084,0.0341796875
1451477585328,0.01953125
1451477588781,0.0244140625
1451477590057,0.0234375
1451477591644,0.033203125
1451477594688,0.0341796875
1451477595928,0.01953125
1451477598558,0.029296875
1451477599804,0.017578125
1451477601039,0.0283203125
1451477603731,0.0263671875
1451477607176,0.0234375
1451477608966,0.0302734375
1451477610176,0.017578125
1451477613736,0.0302734375
1451477615203,0.0302734375
1451477618681,0.0400390625
1451477621400,0.03515625
1451477624168,0.03515625
1451477627195,0.0341796875
1451477627867,0.017578125
1451477630471,0.0283203125
1451477631711,0.017578125
1451477634317,0.0263671875
1451477637752,0.017578125
1451477640896,0.017578125
1451477644465,0.029296875
1451477645781,0.03125
1451477649466,0.037109375
1451477650706,0.017578125
1451477653344,0.03515625
1451477656051,0.0302734375
1451477658609,0.0322265625
1451477662400,0.0341796875
1451477663758,0.041015625
1451477667418,0.0224609375
1451477668667,0.021484375
1451477670557,0.033203125
1451477673587,0.029296875
1451477674819,0.017578125
1451477676046,0.0263671875
1451477677278,0.0234375
1451477678518,0.021484375
1451477679756,0.0234375
1451477680992,0.0234375
1451477682235,0.021484375
1451477683479,0.0224609375
1451477684727,0.0205078125
1451477685973,0.0205078125
1451477974019,0.02734375
1451477975255,0.017578125
1451477978075,0.0283203125
1451477980422,0.03515625
1451477983277,0.033203125
1451477984527,0.025390625
1451477988269,0.0234375
1451477989850,0.0244140625
1451477992775,0.0244140625
1451477994014,0.017578125
1451477997601,0.029296875
1451477998843,0.0205078125
1451478002814,0.029296875
1451478005428,0.021484375
1451478007144,0.0263671875
1451478009128,0.03125
1451478010379,0.0185546875
1451478013037,0.0234375
1451478014285,0.0263671875
1451478017944,0.0263671875
1451478020520,0.025390625
1451478021754,0.017578125
1451478025615,0.0302734375
1451478027145,0.017578125
1451478030066,0.017578125
1451478031304,0.021484375
1451478033858,0.033203125
1451478035274,0.0341796875
1451478037147,0.017578125
1451478039283,0.021484375
1451478043228,0.0302734375
1451478046034,0.025390625
1451478047442,0.0341796875
1451478050375,0.0322265625
1451478054155,0.0224609375
1451478055517,0.021484375
1451478057168,0.03125
1451478059596,0.0302734375
1451478060844,0.021484375
1451478063715,0.0283203125
1451478064963,0.017578125
1451478068097,0.0283203125
1451478069591,0.017578125
1451478071010,0.0263671875
1451478073972,0.03125
1451478077152,0.025390625
1451478077586,0.017578125
1451478080127,0.025390625
1451478081371,0.0400390625
1451478084815,0.0322265625
1451478087155,0.029296875
1451478087410,0.017578125
1451478090240,0.017578125
1451478092821,0.017578125
1451478094827,0.029296875
1451478097156,0.0244140625
1451478097453,0.029296875
1451478101450,0.0283203125
1451478102984,0.0234375
1451478107157,0.0224609375
1451478107773,0.02734375
1451478109063,0.0302734375
1451478112554,0.03515625
1451478113802,0.017578125
1451478117158,0.0341796875
1451478117900,0.017578125
1451478120455,0.0283203125
1451478121689,0.017578125
1451478124235,0.0283203125
1451478125475,0.017578125
1451478129042,0.0302734375
1451478130284,0.017578125
1451478132891,0.029296875
1451478134135,0.01953125
1451478137159,0.0380859375
1451478137969,0.017578125
1451478142088,0.0302734375
1451478428718,0.033203125
1451478429960,0.017578125
1451478433573,0.029296875
1451478436391,0.0322265625
1451478437639,0.025390625
1451478440342,0.029296875
1451478441986,0.0361328125
1451478445448,0.0263671875
1451478447144,0.0322265625
1451478449801,0.0263671875
1451478451045,0.017578125
1451478453613,0.029296875
1451478454854,0.0205078125
1451478458225,0.0322265625
1451478459462,0.017578125
1451478463555,0.03125
1451478465451,0.03125
1451478466699,0.017578125
1451478469232,0.03515625
1451478471938,0.021484375
1451478474953,0.0205078125
1451478477629,0.0302734375
1451478480436,0.0322265625
1451478481680,0.033203125
1451478484314,0.0341796875
1451478485552,0.017578125
1451478489671,0.025390625
1451478491525,0.0322265625
1451478493559,0.033203125
1451478496252,0.02734375
1451478497910,0.0205078125
1451478500795,0.0263671875
1451478502035,0.02734375
1451478505533,0.0341796875
1451478508017,0.02734375
1451478509465,0.0244140625
1451478510702,0.017578125
1451478514244,0.033203125
1451478515489,0.017578125
1451478518123,0.02734375
1451478519369,0.017578125
1451478522164,0.0322265625
1451478523566,0.017578125
1451478526900,0.0244140625
1451478529437,0.0322265625
1451478532353,0.0283203125
1451478535306,0.0341796875
1451478536930,0.0302734375
1451478540206,0.0322265625
1451478543577,0.0400390625
1451478544151,0.0205078125
1451478548449,0.017578125
1451478551844,0.025390625
1451478553566,0.0390625
1451478554345,0.017578125
1451478557927,0.0322265625
1451478560451,0.03125
1451478563568,0.0322265625
1451478564544,0.0185546875
1451478567998,0.029296875
1451478569236,0.03515625
1451478573581,0.0322265625
1451478573833,0.017578125
1451478576794,0.029296875
1451478579700,0.0244140625
1451478583643,0.021484375
1451478584905,0.0224609375
1451478587519,0.0263671875
1451478590900,0.0302734375
1451478592142,0.017578125
1451478594646,0.0234375
1451478595882,0.03125
1451478598643,0.0263671875
1451478599885,0.01953125
1451478603884,0.029296875
1451478605132,0.0224609375
1451478609305,0.017578125
1451478610781,0.02734375
1451478613575,0.03125
1451478615760,0.0302734375
1451478617000,0.017578125
1451478620350,0.025390625
1451478621944,0.03125
1451478625605,0.033203125
1451478626853,0.0205078125
1451478629984,0.029296875
1451478633578,0.0322265625
1451478634726,0.01953125
1451478635972,0.017578125
1451478638789,0.02734375
1451478640211,0.025390625
1451478641829,0.0283203125
1451478645358,0.03125
1451478646612,0.0322265625
1451478649186,0.0400390625
1451478653581,0.0341796875
1451478654208,0.017578125
1451478656699,0.0283203125
1451478657952,0.0224609375
1451478660626,0.0244140625
1451478663580,0.0244140625
1451478664529,0.03515625
1451478668361,0.017578125
1451478670931,0.0302734375
1451478672174,0.017578125
1451478674898,0.0283203125
1451478676296,0.0224609375
1451478678092,0.033203125
1451478679343,0.017578125
1451478683585,0.029296875
1451478685339,0.0263671875
1451478686585,0.01953125
1451478689070,0.029296875
1451478690316,0.017578125
1451478693587,0.041015625
1451478695591,0.029296875
1451478699418,0.0361328125
1451478700662,0.0185546875
1451478703586,0.0322265625
1451478704636,0.017578125
1451478707569,0.029296875
1451478708871,0.01953125
1451478711045,0.0263671875
1451478713786,0.025390625
1451478715438,0.0322265625
1451478719050,0.0302734375
1451478722145,0.03125
1451478723589,0.0185546875
1451478727386,0.0361328125
1451478728846,0.0263671875
1451478731434,0.0234375
1451478733590,0.017578125
1451478735761,0.0263671875
1451478737009,0.017578125
1451478738595,0.033203125
1451478740871,0.0341796875
1451478743765,0.029296875
1451478746660,0.0341796875
1451478747901,0.025390625
1451478749321,0.025390625
1451478753594,0.0341796875
1451478754059,0.03125
1451478755308,0.017578125
1451478759496,0.0283203125
1451478760783,0.0205078125
1451478763595,0.025390625
1451478764811,0.017578125
1451478766316,0.033203125
1451478767557,0.0205078125
1451478770850,0.0302734375
1451478772092,0.017578125
1451478775507,0.0380859375
1451478776749,0.017578125
1451478779443,0.02734375
1451478780684,0.017578125
1451478783596,0.0322265625
1451478784498,0.0390625
1451478787524,0.03125
1451478791045,0.017578125
1451478794782,0.02734375
1451478796396,0.029296875
1451478800578,0.02734375
1451478803599,0.0302734375
1451478804521,0.017578125
1451478807708,0.0322265625
1451478808956,0.017578125
1451478812324,0.033203125
1451478813624,0.03515625
1451478815081,0.017578125
1451478817759,0.03515625
1451478819297,0.0302734375
1451478823602,0.033203125
1451478824130,0.0341796875
1451478825366,0.03125
1451478827724,0.03125
1451478828965,0.017578125
1451478831876,0.025390625
1451478833607,0.017578125
1451478836675,0.0283203125
1451478838106,0.029296875
1451478840738,0.03125
1451478843813,0.029296875
1451478846485,0.0205078125
1451478848675,0.0341796875
1451478851420,0.017578125
1451478855652,0.0380859375
1451478857313,0.0283203125
1451478860187,0.025390625
1451478861439,0.0244140625
1451478865462,0.0263671875
1451478867252,0.029296875
1451478870491,0.0361328125
1451478871745,0.0322265625
1451478873609,0.017578125
1451478875637,0.0322265625
1451478876880,0.0234375
1451478879980,0.0302734375
1451478881212,0.017578125
1451478885053,0.0341796875
1451478887521,0.0244140625
1451478888771,0.0224609375
1451478891396,0.0283203125
1451478893615,0.0283203125
1451478894284,0.017578125
1451478896824,0.025390625
1451478898503,0.029296875
1451478901203,0.033203125
1451478903614,0.0400390625
1451478906782,0.03515625
1451478909498,0.0341796875
1451478912229,0.03515625
1451478913873,0.0380859375
1451478916463,0.0263671875
1451478920026,0.037109375
1451478921272,0.03515625
1451478924120,0.0302734375
1451478926619,0.0322265625
1451478927861,0.0361328125
1451478931196,0.03515625
1451478932448,0.037109375
1451478936280,0.033203125
1451478937523,0.01953125
1451478941137,0.03125
1451478942509,0.0302734375
1451478943849,0.0224609375
1451478947136,0.0244140625
1451478948384,0.021484375
1451478951996,0.0302734375
1451478953619,0.021484375
1451478956775,0.033203125
1451478959284,0.0361328125
1451478960688,0.0302734375
1451478963620,0.033203125
1451478964575,0.01953125
1451478968573,0.017578125
1451478970247,0.025390625
1451478973622,0.033203125
1451478974648,0.0302734375
1451478977960,0.033203125
1451478979201,0.017578125
1451478982487,0.037109375
1451478983783,0.0244140625
1451478985023,0.0205078125
1451478987476,0.025390625
1451478988724,0.017578125
1451478991292,0.0341796875
1451478993625,0.0263671875
1451478994095,0.017578125
1451478996937,0.0244140625
1451478998509,0.03125
1451479001926,0.03125
1451479003626,0.017578125
1451479006728,0.0263671875
1451479008343,0.025390625
1451479010736,0.029296875
1451479011974,0.017578125
1451479014650,0.0361328125
1451479015890,0.017578125
1451479019815,0.0263671875
1451479022463,0.0302734375
1451479023753,0.017578125
1451479026551,0.02734375
1451479028720,0.01953125
1451479031486,0.0419921875
1451479033628,0.017578125
1451479034391,0.0322265625
1451479037049,0.03125
1451479040899,0.02734375
1451479042355,0.029296875
1451479043812,0.0380859375
1451479045342,0.03125
1451479047096,0.0205078125
1451479049587,0.0341796875
1451479050829,0.017578125
1451479053635,0.0302734375
1451479055796,0.0263671875
1451479057040,0.017578125
1451479059652,0.037109375
1451479060896,0.033203125
1451479063633,0.033203125
1451479066366,0.0322265625
1451479067786,0.029296875
1451479071808,0.0302734375
1451479075763,0.0224609375
1451479077313,0.0322265625
1451479080782,0.025390625
1451479082026,0.0185546875
1451479084836,0.033203125
1451479087746,0.025390625
1451479089585,0.0185546875
1451479092229,0.0224609375
1451479096854,0.0341796875
1451479098288,0.03125
1451479103641,0.029296875
1451479105007,0.0341796875
1451479106215,0.0185546875
1451479108972,0.033203125
1451479110216,0.017578125
1451479113642,0.0283203125
1451479114082,0.017578125
1451479118045,0.037109375
1451479119696,0.0341796875
1451479123642,0.03125
1451479125970,0.029296875
1451479128791,0.025390625
1451479131336,0.0234375
1451479133821,0.029296875
1451479135444,0.0283203125
1451479139654,0.0302734375
1451479140898,0.0205078125
1451479143773,0.0302734375
1451479145049,0.03125
1451479148744,0.0322265625
1451479153646,0.025390625
1451479155062,0.0205078125
1451479157887,0.0244140625
1451479159143,0.0244140625
1451479161883,0.0341796875
1451479163646,0.017578125
1451479166306,0.0341796875
1451479167550,0.0205078125
1451479170885,0.0341796875
1451479173895,0.037109375
1451479175157,0.0283203125
1451479177956,0.0341796875
1451479179404,0.0400390625
1451479181958,0.029296875
1451479184681,0.037109375
1451479185915,0.017578125
1451479189099,0.0361328125
1451479190341,0.033203125
1451479193982,0.02734375
1451479195232,0.03515625
1451479198013,0.033203125
1451479199253,0.017578125
1451479203651,0.029296875
1451479204649,0.0400390625
1451479207366,0.0283203125
1451479208638,0.0234375
1451479214233,0.017578125
1451479215475,0.017578125
1451479218798,0.03125
1451479220330,0.029296875
1451479221568,0.01953125
1451479224209,0.029296875
1451479228037,0.0302734375
1451479229285,0.017578125
1451479233656,0.0302734375
1451479234332,0.017578125
1451479236996,0.0341796875
1451479238230,0.017578125
1451479240926,0.0322265625
1451479242165,0.017578125
1451479244831,0.02734375
1451479246072,0.017578125
1451479248918,0.0400390625
1451479253659,0.033203125
1451479257267,0.03125
1451479258513,0.0205078125
1451479261200,0.0322265625
1451479263660,0.017578125
1451479265248,0.0234375
1451479266505,0.029296875
1451479268821,0.037109375
1451479270055,0.017578125
1451479274160,0.017578125
1451479275730,0.03125
1451479276990,0.017578125
1451479280437,0.037109375
1451479281681,0.01953125
1451479285228,0.0234375
1451479287890,0.02734375
1451479290896,0.0302734375
1451479294021,0.033203125
1451479296939,0.0283203125
1451479298179,0.017578125
1451479301996,0.0322265625
1451479303664,0.029296875
1451479306392,0.0205078125
1451479307641,0.0205078125
1451479310385,0.033203125
1451479311635,0.0185546875
1451479314006,0.03125
1451479318138,0.0341796875
1451479321643,0.025390625
1451479324387,0.0322265625
1451479326125,0.03125
1451479327366,0.017578125
1451479331530,0.017578125
1451479334032,0.017578125
1451479336073,0.0322265625
1451479338643,0.0302734375
1451479341578,0.0234375
1451479345080,0.0322265625
1451479347500,0.037109375
1451479348746,0.0205078125
1451479351063,0.03515625
1451479355031,0.03125
1451479356274,0.017578125
1451479359158,0.0341796875
1451479361948,0.0361328125
1451479364605,0.03125
1451479365851,0.017578125
1451479368576,0.02734375
1451479370106,0.02734375
1451479373676,0.01953125
1451479375434,0.0263671875
1451479378349,0.03125
1451479382348,0.017578125
1451479385024,0.0361328125
1451479386264,0.029296875
1451479388903,0.033203125
1451479393675,0.029296875
1451479395387,0.017578125
1451479397796,0.0322265625
1451479399038,0.017578125
1451479402386,0.03125
1451479405209,0.033203125
1451479409792,0.0263671875
1451479412316,0.03125
1451479414086,0.0322265625
1451479415387,0.0302734375
1451479417125,0.0302734375
1451479418367,0.03125
1451479422267,0.0322265625
1451479423760,0.017578125
1451479426372,0.037109375
1451479427608,0.0322265625
1451479430650,0.037109375
1451479431891,0.01953125
1451479435037,0.03125
1451479437978,0.0205078125
1451479440650,0.0361328125
1451479441896,0.017578125
1451479444506,0.0322265625
1451479446949,0.0283203125
1451479449711,0.03125
1451479451166,0.017578125
1451479453998,0.017578125
1451479458126,0.029296875
1451479462353,0.0341796875
1451479464946,0.03515625
1451479469094,0.0341796875
1451479471881,0.0341796875
1451479473687,0.017578125
1451479475156,0.0234375
1451479476657,0.017578125
1451479479550,0.029296875
1451479480784,0.017578125
1451479484517,0.0263671875
1451479485873,0.02734375
1451479487553,0.0302734375
1451479488827,0.041015625
1451479492329,0.037109375
1451479494830,0.03125
1451479496096,0.03515625
1451479499019,0.0322265625
1451479500267,0.0185546875
1451479503691,0.0283203125
1451479504990,0.0390625
1451479507544,0.02734375
1451479510404,0.033203125
1451479513905,0.02734375
1451479517417,0.0302734375
1451479518668,0.0302734375
1451479521758,0.033203125
1451479523692,0.02734375
1451479524287,0.017578125
1451479527775,0.0322265625
1451479530155,0.0244140625
1451479533868,0.033203125
1451479535110,0.0322265625
1451479537937,0.0283203125
1451479539776,0.0322265625
1451479541005,0.0322265625
1451479542249,0.0224609375
1451479543695,0.021484375
1451479545925,0.0244140625
1451479547176,0.0224609375
1451479548424,0.0205078125
1451479549670,0.0205078125
1451479551074,0.0205078125
1451479552570,0.0224609375
1451479553869,0.0205078125
1451479555111,0.01953125
1451479556355,0.01953125
1451479557599,0.02734375
1451479558844,0.0205078125
1451479560085,0.0322265625
1451479561326,0.0263671875
1451479562574,0.0205078125
1451479563856,0.041015625
1451479565106,0.0341796875
1451479566359,0.021484375
1451479567607,0.0205078125
1451479568855,0.021484375
1451479570123,0.021484375
1451479571613,0.021484375
1451479574816,0.01953125
1451479576060,0.021484375
1451479577772,0.0205078125
1451479579008,0.021484375
1451479580247,0.021484375
1451479581495,0.0224609375
1451479583701,0.0205078125
1451479584037,0.0224609375
1451479585285,0.0205078125
1451479586531,0.0205078125
1451479587976,0.01953125
1451479589438,0.0205078125
1451479590698,0.021484375
1451479591942,0.0224609375
1451479593702,0.0224609375
1451479594418,0.021484375
1451479595661,0.0224609375
1451479596903,0.021484375
1451479598143,0.0224609375
1451479599385,0.021484375
1451479600630,0.021484375
1451479601884,0.01953125
1451479603704,0.0205078125
1451479604374,0.021484375
1451479605624,0.021484375
1451479606874,0.0205078125
1451479608347,0.01953125
1451479609809,0.021484375
1451479611043,0.01953125
1451479612283,0.01953125
1451479613705,0.0205078125
1451479614772,0.01953125
1451479616016,0.01953125
1451479617260,0.0205078125
1451479618500,0.01953125
1451479619740,0.01953125
1451479620981,0.0205078125
1451479622223,0.021484375
1451479623707,0.021484375
1451479624716,0.01953125
1451479625963,0.0205078125
1451479627311,0.0224609375
1451479628804,0.021484375
1451479630060,0.01953125
1451479631304,0.0224609375
1451479633710,0.0205078125
1451479634310,0.01953125
1451479635545,0.0400390625
1451479637301,0.01953125
1451479638553,0.0224609375
1451479639799,0.0244140625
1451479641047,0.0224609375
1451479642298,0.021484375
1451479643796,0.021484375
1451479645166,0.01953125
1451479646398,0.01953125
1451479647642,0.0205078125
1451479648889,0.0205078125
1451479650131,0.021484375
1451479652561,0.0205078125
1451479653804,0.021484375
1451479655048,0.021484375
1451479656286,0.01953125
1451479657536,0.01953125
1451479658818,0.01953125
1451479660028,0.01953125
1451479661276,0.01953125
1451479662528,0.021484375
1451479664017,0.021484375
1451479665417,0.0205078125
1451479666656,0.01953125
1451479667895,0.0205078125
1451479669169,0.021484375
1451479670380,0.021484375
1451479671624,0.021484375
1451479673724,0.021484375
1451479674110,0.01953125
1451479675356,0.0205078125
1451479677791,0.01953125
1451479679039,0.01953125
1451479680285,0.01953125
1451479683714,0.025390625
1451479684312,0.021484375
1451479685648,0.0205078125
1451479686880,0.01953125
1451479688126,0.0205078125
1451479689370,0.0205078125
1451479690615,0.0224609375
1451479691856,0.021484375
1451479694819,0.0185546875
1451479696061,0.0205078125
1451479697836,0.0205078125
1451479699092,0.0205078125
1451479700518,0.0205078125
1451479701968,0.0205078125
1451479703727,0.021484375
1451479704469,0.0205078125
1451479705709,0.01953125
1451479706953,0.0205078125
1451479708197,0.0205078125
1451479709443,0.0205078125
1451479710684,0.0302734375
1451479711926,0.0224609375
1451479713718,0.0205078125
1451479714416,0.01953125
1451479715654,0.01953125
1451479716902,0.01953125
1451479718147,0.01953125
1451479719396,0.0400390625
1451479720845,0.021484375
1451479722311,0.01953125
1451479723719,0.021484375
1451479724796,0.01953125
1451479726038,0.0205078125
1451479728468,0.01953125
1451479729710,0.021484375
1451479730957,0.0283203125
1451479732199,0.021484375
1451479733731,0.01953125
1451479735885,0.0224609375
1451479737135,0.0205078125
1451479738384,0.01953125
1451479739632,0.01953125
1451479741128,0.01953125
1451479742564,0.021484375
1451479744991,0.021484375
1451479746233,0.021484375
1451479747476,0.01953125
1451479748719,0.0185546875
1451479749962,0.0205078125
1451479751203,0.021484375
1451479752462,0.0302734375
1451479754748,0.021484375
1451479756032,0.021484375
1451479757816,0.021484375
1451479759389,0.01953125
1451479760621,0.021484375
1451479761863,0.01953125
1451479763736,0.021484375
1451479764336,0.01953125
1451479765574,0.0263671875
1451479766814,0.021484375
1451479768056,0.01953125
1451479769296,0.01953125
1451479770542,0.0205078125
1451479771789,0.0390625
1451479773725,0.021484375
1451479774289,0.0400390625
1451479775573,0.017578125
1451479777596,0.0380859375
1451479781566,0.0283203125
1451479785353,0.0322265625
1451479789375,0.0322265625
1451479790617,0.017578125
1451479793976,0.037109375
1451479797923,0.0361328125
1451479800671,0.0322265625
1451479801911,0.017578125
1451479804896,0.0322265625
1451479806142,0.0185546875
1451479808862,0.0322265625
1451479810360,0.017578125
1451479814399,0.017578125
1451479817729,0.041015625
1451479820396,0.0419921875
1451479823740,0.0361328125
1451479826067,0.033203125
1451479827483,0.0361328125
1451479828731,0.0244140625
1451479829977,0.017578125
1451479833734,0.02734375
1451479834818,0.0205078125
1451479837896,0.03125
1451479842036,0.0283203125
1451479843735,0.0263671875
1451479847316,0.0302734375
1451479848854,0.0322265625
1451479850192,0.0341796875
1451479851434,0.017578125
1451479854773,0.0302734375
1451479856023,0.017578125
1451479859427,0.0283203125
1451479860676,0.017578125
1451479863738,0.0224609375
1451479865174,0.02734375
1451479866410,0.017578125
1451479870267,0.029296875
1451479871509,0.017578125
1451479875360,0.037109375
1451479878356,0.017578125
1451479882065,0.0263671875
1451479883747,0.0400390625
1451479886549,0.0224609375
1451479890102,0.03125
1451479893740,0.0263671875
1451479895971,0.03515625
1451479897213,0.017578125
1451479899891,0.0361328125
1451479901136,0.0283203125
1451479904044,0.0341796875
1451479905288,0.017578125
1451479907903,0.0263671875
1451479909153,0.017578125
1451479911971,0.02734375
1451479913751,0.017578125
1451479916324,0.025390625
1451479920067,0.029296875
1451479921345,0.033203125
1451479922589,0.0205078125
1451479925347,0.0283203125
1451479927776,0.0263671875
1451479929216,0.02734375
1451479931914,0.0302734375
1451479933746,0.017578125
1451479936129,0.03125
1451479939873,0.017578125
1451479942044,0.0263671875
1451479943754,0.017578125
1451479946162,0.0302734375
1451479947564,0.0322265625
1451479949142,0.0322265625
1451479950383,0.017578125
1451479953749,0.0244140625
1451479954425,0.017578125
1451479957972,0.025390625
1451479959576,0.0380859375
1451479963751,0.02734375
1451479964223,0.017578125
1451479967361,0.0263671875
1451479970994,0.0322265625
1451479974816,0.021484375
1451479976060,0.0224609375
1451479979959,0.0263671875
1451479981199,0.017578125
1451479984916,0.0302734375
1451479986272,0.033203125
1451479987522,0.017578125
1451479990721,0.03125
1451479991963,0.017578125
1451479996589,0.021484375
1451479998398,0.0244140625
1451479999630,0.0234375
1451480002072,0.0341796875
1451480003761,0.017578125
1451480005933,0.0380859375
1451480007173,0.017578125
1451480008423,0.021484375
1451480011552,0.0302734375
1451480013756,0.0234375
1451480014096,0.017578125
1451480016740,0.03515625
1451480018161,0.017578125
1451480021963,0.0263671875
1451480025932,0.03125
1451480027174,0.017578125
1451480030907,0.0341796875
1451480033767,0.0322265625
1451480037791,0.03125
1451480039026,0.0234375
1451480041570,0.0244140625
1451480043760,0.0400390625
1451480046351,0.029296875
1451480050311,0.0302734375
1451480051804,0.017578125
1451480054570,0.025390625
1451480057381,0.033203125
1451480060365,0.029296875
1451480061681,0.0361328125
1451480063767,0.017578125
1451480065520,0.033203125
1451480068112,0.03125
1451480069418,0.0283203125
1451480072082,0.0341796875
1451480074957,0.0234375
1451480078935,0.02734375
1451480080178,0.017578125
1451480083766,0.025390625
1451480084287,0.0224609375
1451480087279,0.0322265625
1451480088519,0.017578125
1451480091062,0.0361328125
1451480092548,0.0302734375
1451480093790,0.0263671875
1451480096620,0.0322265625
1451480097868,0.017578125
1451480100747,0.033203125
1451480103769,0.0263671875
1451480107670,0.03515625
1451480109127,0.0244140625
1451480112430,0.025390625
1451480115811,0.0380859375
1451480117155,0.017578125
1451480120490,0.0185546875
1451480121748,0.021484375
1451480123774,0.0263671875
1451480126567,0.0263671875
1451480127971,0.0341796875
1451480130801,0.03125
1451480134692,0.021484375
1451480135934,0.021484375
1451480138950,0.029296875
1451480140195,0.0185546875
1451480143773,0.02734375
1451480146233,0.0341796875
1451480147479,0.021484375
1451480150034,0.033203125
1451480151698,0.029296875
1451480155207,0.0263671875
1451480158788,0.03125
1451480160165,0.029296875
1451480163776,0.03125
1451480164292,0.017578125
1451480166960,0.029296875
1451480168327,0.0322265625
1451480169709,0.0244140625
1451480170951,0.029296875
1451480174319,0.0322265625
1451480178116,0.0302734375
1451480182199,0.03515625
1451480184915,0.03515625
1451480189240,0.0322265625
1451480190667,0.0322265625
1451480193780,0.0400390625
1451480194584,0.0244140625
1451480197267,0.0341796875
1451480198509,0.029296875
1451480201407,0.0283203125
1451480202656,0.0185546875
1451480206152,0.0283203125
1451480209655,0.0244140625
1451480213785,0.037109375
1451480214081,0.0419921875
1451480217522,0.033203125
1451480219984,0.0322265625
1451480223787,0.029296875
1451480224433,0.0322265625
1451480227069,0.03125
1451480230092,0.033203125
1451480233786,0.025390625
1451480234167,0.017578125
1451480237471,0.017578125
1451480238825,0.0302734375
1451480242189,0.0361328125
1451480245087,0.0400390625
1451480248416,0.0302734375
1451480250655,0.037109375
1451480253787,0.025390625
1451480254821,0.03125
1451480256072,0.017578125
1451480258730,0.0302734375
1451480260436,0.0322265625
1451480263791,0.02734375
1451480264979,0.017578125
1451480267905,0.0283203125
1451480269147,0.017578125
1451480271678,0.0263671875
1451480274374,0.0263671875
1451480277211,0.0341796875
1451480278453,0.0224609375
1451480281269,0.037109375
1451480282517,0.0234375
1451480286284,0.033203125
1451480288058,0.0361328125
1451480292043,0.02734375
1451480295826,0.029296875
1451480297534,0.017578125
1451480298847,0.033203125
1451480301667,0.0283203125
1451480304474,0.02734375
1451480307341,0.03125
1451480308585,0.02734375
1451480315776,0.0234375
1451480317966,0.0302734375
1451480319209,0.017578125
1451480321911,0.029296875
1451480323153,0.0244140625
1451480326700,0.0341796875
1451480328336,0.0302734375
1451480331706,0.02734375
1451480332941,0.01953125
1451480336771,0.0322265625
1451480338479,0.0400390625
1451480341807,0.02734375
1451480345791,0.041015625
1451480348499,0.03125
1451480349739,0.017578125
1451480352624,0.0283203125
1451480355772,0.03125
1451480359125,0.0322265625
1451480363217,0.033203125
1451480366012,0.03515625
1451480367472,0.017578125
1451480370896,0.0341796875
1451480372136,0.02734375
1451480376024,0.025390625
1451480377261,0.03125
1451480381047,0.03125
1451480382282,0.033203125
1451480385774,0.029296875
1451480387807,0.0380859375
1451480390815,0.033203125
1451480392059,0.017578125
1451480396036,0.0234375
1451480397514,0.017578125
1451480400104,0.0263671875
1451480401351,0.017578125
1451480405786,0.0341796875
1451480406118,0.017578125
1451480409658,0.0302734375
1451480412630,0.033203125
1451480414015,0.025390625
1451480415779,0.0224609375
1451480419391,0.017578125
1451480420651,0.0185546875
1451480423100,0.017578125
1451480425782,0.03515625
1451480428393,0.025390625
1451480429635,0.017578125
1451480433579,0.0302734375
1451480435790,0.0234375
1451480437278,0.033203125
1451480438518,0.0283203125
1451480441026,0.037109375
1451480443811,0.0263671875
1451480445783,0.0234375
1451480447729,0.033203125
1451480450676,0.0263671875
1451480452490,0.0244140625
1451480453840,0.0302734375
1451480456951,0.0341796875
1451480458193,0.0205078125
1451480460850,0.0302734375
1451480462634,0.025390625
1451480466316,0.0283203125
1451480467559,0.01953125
1451480470239,0.03125
1451480471489,0.017578125
1451480474426,0.0322265625
1451480475786,0.017578125
1451480479116,0.017578125
1451480482477,0.0224609375
1451480485987,0.0322265625
1451480487730,0.0283203125
1451480490790,0.0322265625
1451480492204,0.033203125
1451480493446,0.033203125
1451480496157,0.033203125
1451480497801,0.025390625
1451480499419,0.029296875
1451480501027,0.0205078125
1451480502592,0.029296875
1451480504156,0.025390625
1451480507268,0.0263671875
1451480508697,0.0341796875
1451480509941,0.017578125
1451480512883,0.0302734375
1451480515791,0.0322265625
1451480517118,0.0400390625
1451480519678,0.0302734375
1451480520924,0.017578125
1451480524541,0.029296875
1451480525801,0.017578125
1451480528447,0.025390625
1451480530166,0.0302734375
1451480533480,0.0234375
1451480535794,0.017578125
1451480539445,0.017578125
1451480542881,0.025390625
1451480545796,0.033203125
1451480546922,0.017578125
1451480549479,0.0341796875
1451480550731,0.0205078125
1451480553397,0.0244140625
1451480555803,0.0302734375
1451480558500,0.0341796875
1451480559740,0.025390625
1451480562328,0.03125
1451480563572,0.0302734375
1451480567381,0.0322265625
1451480568619,0.01953125
1451480570913,0.0302734375
1451480572646,0.041015625
1451480575800,0.029296875
1451480576706,0.0341796875
1451480579741,0.033203125
1451480581238,0.017578125
1451480584300,0.033203125
1451480585808,0.017578125
1451480589594,0.0302734375
1451480593435,0.03125
1451480594677,0.0205078125
1451480597746,0.03125
1451480600566,0.0380859375
1451480605805,0.0283203125
1451480608959,0.033203125
1451480610191,0.017578125
1451480613716,0.0380859375
1451480616138,0.0341796875
1451480617380,0.0263671875
1451480621239,0.0263671875
1451480623979,0.029296875
1451480625806,0.017578125
1451480629212,0.0244140625
1451480630460,0.03125
1451480632142,0.029296875
1451480633421,0.0302734375
1451480636709,0.025390625
1451480640682,0.03125
1451480643474,0.0283203125
1451480645813,0.017578125
1451480648507,0.03515625
1451480649747,0.017578125
1451480653165,0.0302734375
1451480656098,0.03515625
1451480657352,0.017578125
1451480660547,0.0302734375
1451480663447,0.0390625
1451480665811,0.0341796875
1451480667408,0.0322265625
1451480668646,0.0234375
1451480669886,0.0244140625
1451480673675,0.0263671875
1451480675817,0.0283203125
1451480676299,0.017578125
1451480679906,0.02734375
1451480682592,0.0322265625
1451480683842,0.017578125
1451480687489,0.0283203125
1451480689347,0.0419921875
1451480693620,0.017578125
1451480697250,0.03515625
1451480698844,0.0263671875
1451480701501,0.037109375
1451480702741,0.017578125
1451480706283,0.0263671875
1451480707606,0.025390625
1451480708866,0.033203125
1451480712380,0.0322265625
1451480713628,0.0224609375
1451480716717,0.03125
1451480719559,0.017578125
1451480720797,0.0224609375
1451480725820,0.0302734375
1451480726308,0.017578125
1451480729633,0.0302734375
1451480732275,0.03125
1451480735822,0.0283203125
1451480737854,0.0234375
1451480741143,0.03125
1451480742855,0.033203125
1451480746367,0.0283203125
1451480747609,0.0205078125
1451480751054,0.03125
1451480755825,0.03125
1451480756119,0.017578125
1451480758933,0.0361328125
1451480760177,0.0205078125
1451480764032,0.033203125
1451480765826,0.0302734375
1451480769063,0.0302734375
1451480770329,0.0224609375
1451480773317,0.02734375
1451480776950,0.0341796875
1451480780232,0.017578125
1451480782262,0.0341796875
1451480784101,0.0302734375
1451480785827,0.0283203125
1451480786725,0.017578125
1451480789328,0.0322265625
1451480790882,0.029296875
1451480792368,0.025390625
1451480796507,0.0244140625
1451480797743,0.017578125
1451480801927,0.033203125
1451480803172,0.025390625
1451480806862,0.03125
1451480809501,0.0322265625
1451480810741,0.017578125
1451480813517,0.033203125
1451480815837,0.0283203125
1451480816143,0.017578125
1451480818912,0.025390625
1451480821828,0.0302734375
1451480823783,0.0234375
1451480827837,0.021484375
1451480829160,0.0283203125
1451480832752,0.0244140625
1451480835834,0.029296875
1451480836480,0.0185546875
1451480840723,0.017578125
1451480844727,0.0263671875
1451480847568,0.02734375
1451480849047,0.017578125
1451480851431,0.033203125
1451480852727,0.03125
1451480855837,0.0302734375
1451480856633,0.017578125
1451480860432,0.0322265625
1451480863363,0.0302734375
1451480865839,0.02734375
1451480866471,0.03515625
1451480869365,0.029296875
1451480871797,0.033203125
1451480875838,0.0302734375
1451480877358,0.0322265625
1451480879375,0.0380859375
1451480881515,0.0234375
1451480884448,0.0380859375
1451480885840,0.0185546875
1451480888358,0.0322265625
1451480890949,0.0380859375
1451480892190,0.017578125
1451480896285,0.02734375
1451480897535,0.0263671875
1451480900464,0.017578125
1451480904667,0.017578125
1451480907701,0.0234375
1451480909065,0.0361328125
1451480910309,0.0263671875
1451480913062,0.0380859375
1451480914304,0.017578125
1451480916886,0.029296875
1451480918126,0.0234375
1451480920933,0.03125
1451480923635,0.033203125
1451480925847,0.017578125
1451480927696,0.0361328125
1451480930392,0.0244140625
1451480931866,0.017578125
1451480933249,0.029296875
1451480936075,0.033203125
1451480937315,0.017578125
1451480940278,0.03125
1451480941520,0.017578125
1451480943974,0.02734375
1451480945848,0.0400390625
1451480949187,0.0263671875
1451480951985,0.037109375
1451480956154,0.029296875
1451480957474,0.033203125
1451480960610,0.0244140625
1451480964389,0.017578125
1451480967383,0.0341796875
1451480969974,0.03125
1451480971212,0.029296875
1451480974417,0.0322265625
1451480977271,0.025390625
1451480978520,0.0234375
1451480981372,0.0283203125
1451480982860,0.017578125
1451480986426,0.0322265625
1451480987667,0.01953125
1451480990281,0.033203125
1451480991595,0.02734375
1451480994296,0.0322265625
1451480995854,0.0263671875
1451480998434,0.0322265625
1451480999672,0.0244140625
1451481002371,0.03125
1451481003673,0.033203125
1451481007190,0.02734375
1451481008509,0.029296875
1451481010328,0.033203125
1451481013554,0.03125
1451481015857,0.0234375
1451481018181,0.03515625
1451481021647,0.017578125
1451481026418,0.0302734375
1451481027668,0.017578125
1451481030331,0.0341796875
1451481031579,0.0322265625
1451481035860,0.0322265625
1451481039236,0.0341796875
1451481040480,0.017578125
1451481043425,0.029296875
1451481046217,0.0224609375
1451481047683,0.0263671875
1451481048926,0.017578125
1451481052872,0.0244140625
1451481054114,0.017578125
1451481058139,0.0390625
1451481059387,0.0244140625
1451481063112,0.02734375
1451481067534,0.0185546875
1451481069813,0.03125
1451481071055,0.0244140625
1451481073693,0.0400390625
1451481075865,0.017578125
1451481078370,0.0283203125
1451481079670,0.0302734375
1451481081686,0.017578125
1451481084145,0.029296875
1451481087131,0.017578125
1451481088607,0.017578125
1451481090067,0.029296875
1451481093542,0.02734375
1451481096154,0.02734375
1451481097397,0.017578125
1451481101171,0.0341796875
1451481102413,0.025390625
1451481105868,0.0302734375
1451481106390,0.017578125
1451481109276,0.0302734375
1451481110528,0.0185546875
1451481113205,0.033203125
1451481114405,0.017578125
1451481117496,0.029296875
1451481121216,0.0234375
1451481125871,0.0390625
1451481126353,0.0205078125
1451481129949,0.0263671875
1451481132312,0.02734375
1451481133552,0.029296875
1451481136396,0.029296875
1451481137843,0.033203125
1451481142675,0.0224609375
1451481143971,0.0234375
1451481147168,0.03125
1451481148574,0.0283203125
1451481149816,0.017578125
1451481152495,0.0400390625
1451481155875,0.0322265625
1451481156733,0.017578125
1451481160612,0.0341796875
1451481161864,0.017578125
1451481163110,0.017578125
1451481166575,0.029296875
1451481167833,0.017578125
1451481170627,0.02734375
1451481174574,0.0263671875
1451481176036,0.02734375
1451481179673,0.0341796875
1451481181329,0.0322265625
1451481184435,0.0341796875
1451481185880,0.017578125
1451481189732,0.0322265625
1451481192497,0.029296875
1451481193741,0.01953125
1451481197531,0.03515625
1451481198776,0.021484375
1451481202772,0.0361328125
1451481204067,0.0263671875
1451481205883,0.0224609375
1451481208641,0.0234375
1451481211531,0.02734375
1451481212719,0.0185546875
1451481216708,0.0244140625
1451481218218,0.03125
1451481221663,0.037109375
1451481225885,0.0205078125
1451481228580,0.0302734375
1451481229824,0.0205078125
1451481231068,0.017578125
1451481233718,0.0263671875
1451481235887,0.033203125
1451481237849,0.0361328125
1451481239089,0.017578125
1451481241988,0.03125
1451481243228,0.017578125
1451481246869,0.033203125
1451481249833,0.0322265625
1451481251077,0.017578125
1451481255888,0.0224609375
1451481257720,0.0244140625
1451481258956,0.0205078125
1451481263291,0.017578125
1451481266179,0.017578125
1451481268324,0.02734375
1451481271228,0.03515625
1451481274154,0.0322265625
1451481277001,0.0283203125
1451481280867,0.021484375
1451481285892,0.0322265625
1451481286046,0.017578125
1451481288613,0.0419921875
1451481290003,0.0302734375
1451481291405,0.0361328125
1451481294378,0.03515625
1451481295896,0.017578125
1451481298650,0.03515625
1451481301338,0.029296875
1451481304213,0.0322265625
1451481305895,0.037109375
1451481307089,0.017578125
1451481310126,0.0185546875
1451481312776,0.0390625
1451481314018,0.0234375
1451481316903,0.025390625
1451481318145,0.02734375
1451481320779,0.0283203125
1451481322724,0.017578125
1451481325898,0.0234375
1451481327626,0.0302734375
1451481329048,0.017578125
1451481332745,0.0234375
1451481334337,0.02734375
1451481337760,0.0322265625
1451481339002,0.017578125
1451481342573,0.025390625
1451481343913,0.0263671875
1451481345901,0.017578125
1451481348159,0.029296875
1451481349582,0.033203125
1451481350836,0.0341796875
1451481353836,0.0341796875
1451481355902,0.021484375
1451481357503,0.0322265625
1451481358997,0.017578125
1451481361363,0.0283203125
1451481362598,0.02734375
1451481363842,0.017578125
1451481367424,0.0283203125
1451481370081,0.0322265625
1451481371325,0.017578125
1451481373999,0.033203125
1451481375903,0.021484375
1451481379094,0.0322265625
1451481380346,0.0185546875
1451481383324,0.03125
1451481385905,0.0234375
1451481388035,0.03125
1451481389357,0.029296875
1451481390602,0.0224609375
1451481393680,0.033203125
1451481396399,0.029296875
1451481397641,0.0205078125
1451481400898,0.029296875
1451481402145,0.017578125
1451481405908,0.03515625
1451481407660,0.0322265625
1451481409122,0.017578125
1451481411903,0.0322265625
1451481415909,0.0322265625
1451481418824,0.0322265625
1451481420120,0.0322265625
1451481423458,0.0244140625
1451481426391,0.0400390625
1451481427635,0.017578125
1451481429665,0.021484375
1451481430915,0.0234375
1451481432163,0.025390625
1451481433410,0.0263671875
1451481434656,0.0234375
1451481435936,0.025390625
1451481438768,0.025390625
1451481440001,0.0234375
1451481441245,0.0224609375
1451481442981,0.0234375
1451481444278,0.0263671875
1451481445914,0.025390625
1451481447568,0.025390625
1451481448824,0.0263671875
1451481450070,0.0234375
1451481451317,0.0234375
1451481452767,0.0322265625
1451481454217,0.02734375
1451481455918,0.025390625
1451481456717,0.02734375
1451481457959,0.0419921875
1451481459205,0.0283203125
1451481460448,0.02734375
1451481461690,0.0283203125
1451481462930,0.02734375
1451481464170,0.02734375
1451481466615,0.0244140625
1451481467859,0.02734375
1451481469107,0.0263671875
1451481470355,0.025390625
1451481471605,0.0263671875
1451481473098,0.0244140625
1451481474552,0.0244140625
1451481475916,0.0361328125
1451481477052,0.0234375
1451481478298,0.0263671875
1451481480729,0.0244140625
1451481481977,0.0361328125
1451481483218,0.0361328125
1451481484459,0.02734375
1451481485919,0.02734375
1451481486952,0.0244140625
1451481488188,0.02734375
1451481489436,0.0263671875
1451481490682,0.0244140625
1451481491978,0.0283203125
1451481493492,0.0244140625
1451481494781,0.02734375
1451481496017,0.0244140625
1451481497249,0.025390625
1451481498495,0.0244140625
1451481499739,0.0244140625
1451481500980,0.0341796875
1451481502220,0.025390625
1451481503456,0.0263671875
1451481505924,0.0234375
1451481506490,0.0234375
1451481508249,0.025390625
1451481509791,0.0224609375
1451481511037,0.02734375
1451481512269,0.0234375
1451481513518,0.0224609375
1451481514754,0.0234375
1451481515998,0.0205078125
1451481517242,0.029296875
1451481518482,0.021484375
1451481519726,0.0224609375
1451481520967,0.03515625
1451481522207,0.01953125
1451481523449,0.0205078125
1451481524695,0.021484375
1451481525943,0.01953125
1451481527188,0.0234375
1451481528582,0.0205078125
1451481530060,0.01953125
1451481531330,0.021484375
1451481532570,0.01953125
1451481533813,0.0205078125
1451481535925,0.021484375
1451481536295,0.021484375
1451481537535,0.021484375
1451481538778,0.01953125
1451481540013,0.01953125
1451481541255,0.0205078125
1451481542506,0.01953125
1451481543764,0.01953125
1451481545926,0.021484375
1451481546278,0.0205078125
1451481547524,0.03515625
1451481549031,0.021484375
1451481550483,0.01953125
1451481551717,0.0234375
1451481552963,0.021484375
1451481554208,0.0205078125
1451481555928,0.01953125
1451481556690,0.01953125
1451481557930,0.021484375
1451481559178,0.021484375
1451481560412,0.029296875
1451481561654,0.0341796875
1451481562905,0.01953125
1451481564165,0.021484375
1451481566987,0.02734375
1451481568478,0.01953125
1451481570398,0.021484375
1451481571634,0.0205078125
1451481572876,0.021484375
1451481574117,0.0205078125
1451481575931,0.01953125
1451481576601,0.01953125
1451481577843,0.0205078125
1451481579085,0.0205078125
1451481580333,0.0205078125
1451481581583,0.01953125
1451481582830,0.033203125
1451481585932,0.0234375
1451481586756,0.01953125
1451481588196,0.021484375
1451481589433,0.021484375
1451481590673,0.0234375
1451481591913,0.01953125
1451481593157,0.01953125
1451481594401,0.0205078125
1451481596832,0.01953125
1451481598072,0.021484375
1451481600518,0.0185546875
1451481601762,0.01953125
1451481603009,0.0341796875
1451481604259,0.0205078125
1451481605933,0.021484375
1451481607005,0.0224609375
1451481608389,0.021484375
1451481609628,0.0205078125
1451481610870,0.0361328125
1451481612110,0.021484375
1451481613350,0.021484375
1451481614588,0.01953125
1451481615938,0.01953125
1451481617078,0.0205078125
1451481618317,0.021484375
1451481619555,0.021484375
1451481620798,0.01953125
1451481622045,0.01953125
1451481623292,0.01953125
1451481625938,0.01953125
1451481627196,0.0234375
1451481628958,0.021484375
1451481630199,0.0205078125
1451481631441,0.021484375
1451481632681,0.021484375
1451481633923,0.01953125
1451481635978,0.01953125
1451481636404,0.0205078125
1451481637652,0.0205078125
1451481638896,0.021484375
1451481640146,0.021484375
1451481641396,0.0205078125
1451481642870,0.021484375
1451481644337,0.01953125
1451481645939,0.01953125
1451481646841,0.01953125
1451481648085,0.0205078125
1451481649327,0.021484375
1451481650562,0.01953125
1451481651804,0.029296875
1451481653048,0.0205078125
1451481654290,0.0205078125
1451481655940,0.021484375
1451481656785,0.021484375
1451481658033,0.021484375
1451481659279,0.0205078125
1451481660533,0.01953125
1451481661779,0.0185546875
1451481663297,0.021484375
1451481664734,0.021484375
1451481666030,0.017578125
1451481670155,0.0302734375
1451481671397,0.017578125
1451481674138,0.029296875
1451481676643,0.03125
1451481678434,0.029296875
1451481679672,0.033203125
1451481682760,0.0205078125
1451481684209,0.0400390625
1451481688225,0.02734375
1451481690141,0.017578125
1451481693390,0.033203125
1451481694632,0.029296875
1451481697524,0.03515625
1451481698768,0.017578125
1451481702751,0.02734375
1451481705948,0.033203125
1451481708422,0.0341796875
1451481712693,0.03125
1451481714015,0.0283203125
1451481717868,0.0263671875
1451481720510,0.0322265625
1451481723074,0.0390625
1451481724318,0.029296875
1451481727891,0.0302734375
1451481729131,0.03515625
1451481732194,0.029296875
1451481733432,0.02734375
1451481737094,0.0322265625
1451481738464,0.037109375
1451481741507,0.03515625
1451481742757,0.017578125
1451481747554,0.017578125
1451481750922,0.017578125
1451481752156,0.0283203125
1451481756428,0.0322265625
1451481757671,0.017578125
1451481761616,0.03125
1451481762858,0.02734375
1451481764116,0.037109375
1451481765957,0.033203125
1451481767011,0.0302734375
1451481769979,0.0400390625
1451481771627,0.017578125
1451481774806,0.03125
1451481777388,0.0341796875
1451481780526,0.03125
1451481783651,0.0302734375
1451481786774,0.0244140625
1451481788018,0.0224609375
1451481792039,0.0234375
1451481793286,0.021484375
1451481796311,0.0263671875
1451481799407,0.0322265625
1451481801256,0.0390625
1451481804608,0.0302734375
1451481807020,0.025390625
1451481810361,0.0283203125
1451481811701,0.0234375
1451481816036,0.02734375
1451481817286,0.0185546875
1451481820188,0.0263671875
1451481821595,0.02734375
1451481823067,0.025390625
1451481826715,0.0263671875
1451481829582,0.025390625
1451481830824,0.02734375
1451481834248,0.02734375
1451481835963,0.033203125
1451481838653,0.0380859375
1451481840248,0.02734375
1451481841583,0.0283203125
1451481842838,0.017578125
1451481845966,0.0283203125
1451481847134,0.017578125
1451481851049,0.0244140625
1451481852848,0.0185546875
1451481854367,0.0234375
1451481855968,0.0302734375
1451481858668,0.0224609375
1451481859910,0.017578125
1451481862808,0.03125
1451481867071,0.017578125
1451481868531,0.0302734375
1451481869787,0.017578125
1451481873453,0.0283203125
1451481875968,0.021484375
1451481877159,0.0205078125
1451481878543,0.0302734375
1451481879908,0.033203125
1451481881147,0.02734375
1451481884126,0.02734375
1451481885970,0.021484375
1451481889030,0.0390625
1451481890271,0.017578125
1451481893237,0.0302734375
1451481894488,0.0224609375
1451481898132,0.0322265625
1451481899382,0.017578125
1451481902107,0.03125
1451481903597,0.017578125
1451481906331,0.02734375
1451481909202,0.0302734375
1451481910454,0.033203125
1451481913238,0.0224609375
1451481914588,0.0283203125
1451481916199,0.033203125
1451481917559,0.0283203125
1451481918799,0.017578125
1451481921397,0.029296875
1451481924182,0.03125
1451481925976,0.0263671875
1451481928982,0.03125
1451481932973,0.0361328125
1451481935977,0.0244140625
1451481937243,0.025390625
1451481938986,0.0263671875
1451481940228,0.0185546875
1451481944146,0.03125
1451481945977,0.017578125
1451481949568,0.0302734375
1451481950813,0.017578125
1451481955980,0.02734375
1451481957869,0.021484375
1451481959129,0.017578125
1451481963261,0.03125
1451481965982,0.0302734375
1451481967508,0.029296875
1451481968748,0.017578125
1451481971629,0.02734375
1451481972869,0.017578125
1451481976903,0.0283203125
1451481979714,0.0302734375
1451481980960,0.025390625
1451481985983,0.01953125
1451481988877,0.0234375
1451481990111,0.017578125
1451481993608,0.0302734375
1451481996474,0.029296875
1451481997976,0.03125
1451481999227,0.0224609375
1451482003119,0.029296875
1451482004790,0.0322265625
1451482006034,0.017578125
1451482009786,0.021484375
1451482011398,0.0224609375
1451482014747,0.0234375
1451482017677,0.0302734375
1451482019171,0.033203125
1451482020488,0.03515625
1451482022672,0.03125
1451482023918,0.01953125
1451482027405,0.02734375
1451482028653,0.017578125
1451482032626,0.0234375
1451482033874,0.017578125
1451482037888,0.02734375
1451482039391,0.0205078125
1451482041877,0.0322265625
1451482045992,0.0244140625
1451482047314,0.017578125
1451482050714,0.029296875
1451482053277,0.037109375
1451482054527,0.017578125
1451482058239,0.0322265625
1451482061208,0.0341796875
1451482062882,0.0224609375
1451482065994,0.0302734375
1451482068428,0.0322265625
1451482071426,0.0283203125
1451482072665,0.0302734375
1451482073909,0.0283203125
1451482077096,0.0244140625
1451482078350,0.0302734375
1451482080944,0.0263671875
1451482082197,0.0283203125
1451482083608,0.0244140625
1451482085995,0.03125
1451482087816,0.029296875
1451482089280,0.017578125
1451482093008,0.025390625
1451482096897,0.0302734375
1451482098137,0.017578125
1451482101021,0.03125
1451482102264,0.017578125
1451482105998,0.0322265625
1451482106472,0.017578125
1451482109453,0.0322265625
1451482110699,0.0234375
1451482114758,0.029296875
1451482119666,0.0361328125
1451482120911,0.017578125
1451482124665,0.029296875
1451482126003,0.017578125
1451482129800,0.03125
1451482131040,0.01953125
1451482136003,0.03515625
1451482138257,0.037109375
1451482139505,0.021484375
1451482143248,0.0322265625
1451482144680,0.017578125
1451482147709,0.037109375
1451482150341,0.029296875
1451482151583,0.021484375
1451482154333,0.0322265625
1451482156018,0.029296875
1451482158638,0.025390625
1451482159876,0.021484375
1451482163476,0.0283203125
1451482164727,0.017578125
1451482168868,0.033203125
1451482170262,0.017578125
1451482173459,0.017578125
1451482174702,0.0234375
1451482178181,0.0234375
1451482179419,0.01953125
1451482183026,0.03125
1451482184266,0.017578125
1451482187168,0.029296875
1451482191167,0.021484375
1451482192413,0.017578125
1451482196011,0.029296875
1451482200326,0.0419921875
1451482204349,0.029296875
1451482207197,0.0380859375
1451482208704,0.0185546875
1451482209947,0.0224609375
1451482213116,0.0283203125
1451482216032,0.0322265625
1451482217274,0.017578125
1451482221163,0.029296875
1451482226019,0.03515625
1451482228574,0.02734375
1451482233158,0.0234375
1451482236015,0.02734375
1451482237179,0.0302734375
1451482238628,0.033203125
1451482240906,0.0263671875
1451482243582,0.0302734375
1451482244844,0.0322265625
1451482248249,0.03125
1451482249773,0.0322265625
1451482254064,0.0224609375
1451482256704,0.0263671875
1451482259451,0.03515625
1451482260693,0.0302734375
1451482263404,0.025390625
1451482266188,0.0400390625
1451482267432,0.0341796875
1451482271064,0.0283203125
1451482272381,0.0244140625
1451482276029,0.029296875
1451482276509,0.01953125
1451482279370,0.0302734375
1451482283636,0.0302734375
1451482286459,0.0244140625
1451482289593,0.0234375
1451482290911,0.0380859375
1451482294076,0.021484375
1451482296024,0.0224609375
1451482298348,0.0322265625
1451482301203,0.0224609375
1451482302967,0.03125
1451482304471,0.02734375
1451482308598,0.02734375
1451482313349,0.0263671875
1451482316203,0.0263671875
1451482318985,0.0341796875
1451482320232,0.017578125
1451482323006,0.03125
1451482326026,0.0244140625
1451482326659,0.017578125
1451482329535,0.0322265625
1451482330779,0.0205078125
1451482333914,0.0361328125
1451482336036,0.017578125
1451482338250,0.0234375
1451482342493,0.0361328125
1451482346029,0.0322265625
1451482346682,0.017578125
1451482349634,0.0263671875
1451482352210,0.033203125
1451482356219,0.0283203125
1451482359175,0.0322265625
1451482360660,0.017578125
1451482363172,0.0302734375
1451482364406,0.029296875
1451482368513,0.0263671875
1451482369757,0.0205078125
1451482372479,0.029296875
1451482373717,0.0205078125
1451482376078,0.0302734375
1451482377316,0.017578125
1451482380142,0.0302734375
1451482381391,0.017578125
1451482384017,0.03125
1451482386038,0.017578125
1451482389172,0.0234375
1451482392058,0.025390625
1451482394805,0.0302734375
1451482396047,0.017578125
1451482399929,0.0302734375
1451482401172,0.0185546875
1451482404178,0.025390625
1451482406038,0.017578125
1451482408730,0.0263671875
1451482411687,0.033203125
1451482414867,0.0234375
1451482417747,0.029296875
1451482420550,0.0302734375
1451482422237,0.037109375
1451482426047,0.029296875
1451482426373,0.0205078125
1451482430206,0.02734375
1451482434094,0.03125
1451482437165,0.0302734375
1451482438409,0.03125
1451482441031,0.0341796875
1451482443369,0.02734375
1451482444908,0.0234375
1451482448318,0.0234375
1451482451083,0.033203125
1451482452327,0.0283203125
1451482456050,0.0283203125
1451482456443,0.017578125
1451482459432,0.03515625
1451482460678,0.0244140625
1451482463500,0.02734375
1451482466269,0.029296875
1451482469789,0.017578125
1451482472270,0.0322265625
1451482477455,0.017578125
1451482481459,0.03515625
1451482482703,0.0185546875
1451482484364,0.025390625
1451482486059,0.017578125
1451482488368,0.0283203125
1451482489688,0.0322265625
1451482490939,0.033203125
1451482493713,0.037109375
1451482496049,0.017578125
1451482499138,0.03515625
1451482501779,0.0302734375
1451482503180,0.0205078125
1451482504423,0.017578125
1451482507003,0.03125
1451482508305,0.0361328125
1451482509547,0.0263671875
1451482512566,0.0263671875
1451482513808,0.017578125
1451482517336,0.0322265625
1451482520221,0.03515625
1451482522099,0.03515625
1451482523443,0.0263671875
1451482527360,0.025390625
1451482531248,0.0283203125
1451482534579,0.017578125
1451482536321,0.017578125
1451482539500,0.0341796875
1451482540752,0.021484375
1451482544498,0.0322265625
1451482547395,0.0185546875
1451482548645,0.017578125
1451482930981,0.017578125
1451482933594,0.0244140625
1451482934842,0.033203125
1451482937688,0.03515625
1451482938934,0.01953125
1451482941789,0.0361328125
1451482944583,0.033203125
1451482946341,0.0244140625
1451482950100,0.02734375
1451482952522,0.037109375
1451482956343,0.0361328125
1451482958101,0.0361328125
1451482959343,0.017578125
1451482962268,0.0322265625
1451482963814,0.03125
1451482965054,0.017578125
1451482968689,0.029296875
1451482969937,0.017578125
1451482972735,0.0302734375
1451482976344,0.0283203125
1451482977504,0.0234375
1451482980966,0.033203125
1451482982213,0.0185546875
1451482985221,0.02734375
1451482986509,0.0185546875
1451482990839,0.017578125
1451482992088,0.0185546875
1451482996365,0.0263671875
1451482998181,0.0302734375
1451482999681,0.017578125
1451483002574,0.029296875
1451483004224,0.025390625
1451483007482,0.0322265625
1451483008698,0.017578125
1451483011479,0.029296875
1451483012721,0.0205078125
1451483016350,0.029296875
1451483016978,0.017578125
1451483020970,0.02734375
1451483022219,0.025390625
1451483026367,0.0302734375
1451483028445,0.0302734375
1451483029953,0.0185546875
1451483032584,0.0234375
1451483036353,0.033203125
1451483036636,0.017578125
1451483039291,0.0224609375
1451483074808,0.0361328125
1451483077555,0.025390625
1451483078789,0.029296875
1451483081407,0.0341796875
1451483082655,0.02734375
1451483086186,0.03125
1451483088700,0.0322265625
1451483090363,0.0283203125
1451483091598,0.025390625
1451483094335,0.0283203125
1451483097087,0.0322265625
1451483099780,0.0390625
1451483101020,0.017578125
1451483104822,0.03515625
1451483108703,0.029296875
1451483109169,0.0322265625
1451483110411,0.0224609375
1451483113010,0.029296875
1451483114259,0.01953125
1451483118704,0.0234375
1451483121689,0.0390625
1451483123285,0.0302734375
1451483124537,0.033203125
1451483126919,0.029296875
1451483128706,0.017578125
1451483132388,0.0302734375
1451483134691,0.033203125
1451483135983,0.037109375
1451483139664,0.02734375
1451483141390,0.021484375
1451483144259,0.033203125
1451483145498,0.0283203125
1451483148709,0.0322265625
1451483152145,0.0341796875
1451483153536,0.03515625
1451483155224,0.0322265625
1451483156508,0.03515625
1451483158712,0.017578125
1451483160359,0.025390625
1451483161727,0.03125
1451483164697,0.0322265625
1451483168712,0.0234375
1451483169334,0.029296875
1451483170730,0.0341796875
1451483171979,0.0244140625
1451483175147,0.029296875
1451483176395,0.017578125
1451483180083,0.0302734375
1451483183004,0.0322265625
1451483185792,0.02734375
1451483187134,0.0341796875
1451483188719,0.017578125
1451483191623,0.02734375
1451483193365,0.0263671875
1451483196490,0.0390625
1451483198714,0.017578125
1451483201147,0.0302734375
1451483202389,0.017578125
1451483206654,0.02734375
1451483208716,0.017578125
1451483211896,0.0322265625
1451483214797,0.0283203125
1451483216459,0.0302734375
1451483220031,0.02734375
1451483223982,0.033203125
1451483225224,0.017578125
1451483229085,0.037109375
1451483231807,0.0322265625
1451483234662,0.0322265625
1451483236404,0.02734375
1451483238720,0.017578125
1451483241026,0.0361328125
1451483244039,0.0302734375
1451483245283,0.017578125
1451483249368,0.0322265625
1451483251026,0.021484375
1451483254887,0.017578125
1451483260059,0.037109375
1451483261300,0.017578125
1451483262534,0.017578125
1451483264936,0.0341796875
1451483266184,0.0244140625
1451483269599,0.03515625
1451483272453,0.0341796875
1451483273977,0.0234375
1451483278728,0.033203125
1451483280526,0.0361328125
1451483281783,0.017578125
1451483286231,0.037109375
1451483287473,0.017578125
1451483290162,0.033203125
1451483291402,0.0302734375
1451483294338,0.033203125
1451483295582,0.0185546875
1451483299637,0.0322265625
1451483300883,0.0302734375
1451483303331,0.0302734375
1451483307230,0.0224609375
1451483309915,0.0283203125
1451483311929,0.017578125
1451483315292,0.0322265625
1451483316543,0.0224609375
1451483319716,0.0302734375
1451483322640,0.0390625
1451483323887,0.0224609375
1451483329557,0.0224609375
1451483330793,0.0283203125
1451483332038,0.0244140625
1451483334470,0.02734375
1451483335719,0.0283203125
1451483336960,0.025390625
1451483338205,0.0380859375
1451483339447,0.0263671875
1451483340689,0.02734375
1451483344678,0.02734375
1451483345578,0.025390625
1451483346824,0.0283203125
1451483348319,0.02734375
1451483349759,0.0263671875
1451483351004,0.0263671875
1451483352251,0.0244140625
1451483353493,0.0244140625
1451483354739,0.0244140625
1451483355979,0.0263671875
1451483357218,0.02734375
1451483358466,0.0283203125
1451483359708,0.0283203125
1451483360950,0.0283203125
1451483362204,0.0263671875
1451483363452,0.025390625
1451483364700,0.0283203125
1451483365947,0.025390625
1451483367269,0.0263671875
1451483368762,0.029296875
1451483370027,0.025390625
1451483372918,0.0283203125
1451483375754,0.025390625
1451483376998,0.0283203125
1451483378251,0.0263671875
1451483379501,0.02734375
1451483380750,0.0283203125
1451483381999,0.0263671875
1451483383249,0.0302734375
1451483384753,0.025390625
1451483386150,0.0244140625
1451483387384,0.025390625
1451483388632,0.0263671875
1451483389874,0.029296875
1451483391116,0.029296875
1451483392359,0.029296875
1451483394683,0.0283203125
1451483394837,0.0244140625
1451483396081,0.0263671875
1451483397327,0.0283203125
1451483398575,0.0283203125
1451483399824,0.0263671875
1451483401072,0.0244140625
1451483402322,0.02734375
1451483405013,0.0419921875
1451483406430,0.0380859375
1451483407659,0.0263671875
1451483408901,0.0263671875
1451483410143,0.025390625
1451483411387,0.025390625
1451483412626,0.02734375
1451483414686,0.02734375
1451483415102,0.0244140625
1451483416350,0.0234375
1451483417590,0.0244140625
1451483418827,0.0263671875
1451483420081,0.025390625
1451483421323,0.0244140625
1451483424687,0.0400390625
1451483425293,0.025390625
1451483426590,0.0283203125
1451483427822,0.0234375
1451483429064,0.0234375
1451483430310,0.025390625
1451483431551,0.0244140625
1451483433445,0.0263671875
1451483435683,0.0234375
1451483436929,0.0244140625
1451483438182,0.0263671875
1451483439430,0.0244140625
1451483440904,0.0234375
1451483442358,0.0234375
1451483444690,0.0263671875
1451483444836,0.0390625
1451483446082,0.025390625
1451483447325,0.025390625
1451483448569,0.0263671875
1451483449809,0.0263671875
1451483451057,0.0244140625
1451483452305,0.0263671875
1451483453542,0.0263671875
1451483455984,0.0234375
1451483457228,0.0234375
1451483459668,0.0263671875
1451483461135,0.0234375
1451483462593,0.0224609375
1451483464693,0.0234375
1451483465087,0.021484375
1451483466330,0.01953125
1451483467573,0.01953125
1451483468820,0.0205078125
1451483470060,0.0205078125
1451483471304,0.021484375
1451483472544,0.021484375
1451483474693,0.0224609375
1451483475031,0.0205078125
1451483476285,0.01953125
1451483477525,0.01953125
1451483478771,0.0205078125
1451483480113,0.01953125
1451483481582,0.01953125
1451483482834,0.01953125
1451483484696,0.01953125
1451483485302,0.0224609375
1451483486544,0.021484375
1451483487790,0.037109375
1451483489031,0.0205078125
1451483490271,0.01953125
1451483491517,0.0205078125
1451483493457,0.021484375
1451483494984,0.01953125
1451483497042,0.0224609375
1451483498460,0.021484375
1451483499694,0.03515625
1451483500937,0.01953125
1451483502181,0.01953125
1451483503425,0.0205078125
1451483504699,0.03125
1451483505910,0.0205078125
1451483507148,0.01953125
1451483508392,0.01953125
1451483509634,0.041015625
1451483510880,0.021484375
1451483512142,0.01953125
1451483513386,0.0341796875
1451483514700,0.021484375
1451483515883,0.021484375
1451483517379,0.021484375
1451483518837,0.0224609375
1451483520091,0.0205078125
1451483521335,0.0205078125
1451483522576,0.021484375
1451483524700,0.0224609375
1451483525054,0.0205078125
1451483526298,0.0205078125
1451483527540,0.0205078125
1451483528781,0.021484375
1451483530017,0.03125
1451483531257,0.021484375
1451483532509,0.021484375
1451483534701,0.01953125
1451483535039,0.02734375
1451483536384,0.0185546875
1451483537870,0.0185546875
1451483539132,0.0185546875
1451483540382,0.0205078125
1451483541618,0.021484375
1451483542863,0.021484375
1451483544703,0.021484375
1451483545347,0.01953125
1451483546590,0.01953125
1451483547829,0.0205078125
1451483549074,0.025390625
1451483550326,0.0263671875
1451483551574,0.0205078125
1451483552834,0.021484375
1451483555931,0.0244140625
1451483558137,0.0205078125
1451483559381,0.021484375
1451483560623,0.021484375
1451483561866,0.021484375
1451483563108,0.025390625
1451483567316,0.0263671875
1451483570231,0.029296875
1451483571591,0.033203125
1451483575415,0.033203125
1451483576669,0.0322265625
1451483579386,0.0263671875
1451483580886,0.017578125
1451483585083,0.0283203125
1451483586639,0.0244140625
1451483588027,0.0400390625
1451483589269,0.017578125
1451483591940,0.0361328125
1451483593184,0.0263671875
1451483596102,0.0283203125
1451483597341,0.0263671875
1451483598923,0.0263671875
1451483600353,0.033203125
1451483604711,0.0263671875
1451483604854,0.02734375
1451483608885,0.0224609375
1451483610364,0.02734375
1451483615283,0.017578125
1451483619124,0.03125
1451483620368,0.017578125
1451483623346,0.037109375
1451483624713,0.02734375
1451483628767,0.0283203125
1451483630017,0.01953125
1451483634714,0.0302734375
1451483635402,0.017578125
1451483637857,0.03515625
1451483639099,0.021484375
1451483642203,0.029296875
1451483644716,0.0302734375
1451483646868,0.0322265625
1451483648110,0.017578125
1451483651225,0.033203125
1451483652657,0.0244140625
1451483655819,0.037109375
1451483657065,0.017578125
1451483660118,0.0263671875
1451483663306,0.025390625
1451483666011,0.029296875
1451483668949,0.0322265625
1451483670191,0.0263671875
1451483673274,0.02734375
1451483675988,0.03125
1451483680343,0.0302734375
1451483681555,0.0302734375
1451483684887,0.0244140625
1451483687598,0.0244140625
1451483690322,0.033203125
1451483691564,0.017578125
1451483695690,0.03515625
1451483696927,0.021484375
1451483699739,0.0302734375
1451483700985,0.0302734375
1451483704724,0.0341796875
1451483706484,0.03125
1451483707735,0.0244140625
1451483710971,0.0302734375
1451483712241,0.017578125
1451483715390,0.0302734375
1451483716858,0.017578125
1451483720809,0.03125
1451483722465,0.029296875
1451483725715,0.0302734375
1451483727400,0.025390625
1451483730542,0.0302734375
1451483733584,0.03515625
1451483736677,0.0283203125
1451483738849,0.017578125
1451483741546,0.02734375
1451483742782,0.017578125
1451483746608,0.0244140625
1451483747853,0.0224609375
1451483750979,0.0322265625
1451483752230,0.0185546875
1451483755886,0.03125
1451483757138,0.037109375
1451483759848,0.0302734375
1451483761094,0.0361328125
1451483764731,0.0322265625
1451483765962,0.017578125
1451483769118,0.025390625
1451483773228,0.0244140625
1451483777445,0.03125
1451483781551,0.0263671875
1451483782796,0.0224609375
1451483785854,0.025390625
1451483787094,0.017578125
1451483791295,0.0322265625
1451483792731,0.0341796875
1451483794736,0.029296875
1451483798786,0.0244140625
1451483801206,0.03125
1451483805363,0.03125
1451483806603,0.017578125
1451483810210,0.025390625
1451483811700,0.033203125
1451483812944,0.017578125
1451483814738,0.03515625
1451483817251,0.029296875
1451483818499,0.017578125
1451483821483,0.0322265625
1451483824740,0.0244140625
1451483827902,0.033203125
1451483831721,0.0341796875
1451483832959,0.01953125
1451483835786,0.0283203125
1451483837246,0.03125
1451483838592,0.0263671875
1451483841672,0.02734375
1451483842910,0.01953125
1451483846941,0.0283203125
1451483849243,0.0283203125
1451483850494,0.017578125
1451483853140,0.025390625
1451483857408,0.017578125
1451483861101,0.0341796875
1451483862341,0.021484375
1451483866036,0.0302734375
1451483867284,0.0205078125
1451483870275,0.029296875
1451483871521,0.017578125
1451483874745,0.033203125
1451483875521,0.0185546875
1451483878770,0.0224609375
1451483882455,0.0322265625
1451483884746,0.0205078125
1451483886345,0.03125
1451483888999,0.021484375
1451483892100,0.03125
1451483893334,0.02734375
1451483896096,0.033203125
1451483898969,0.0322265625
1451483900221,0.0244140625
1451483901467,0.017578125
1451483904750,0.037109375
1451483905820,0.0263671875
1451483909752,0.0224609375
1451483912343,0.033203125
1451483913585,0.01953125
1451483916615,0.0234375
1451483920434,0.0341796875
1451483921886,0.017578125
1451483925779,0.0283203125
1451483927189,0.0302734375
1451483929627,0.0283203125
1451483931109,0.037109375
1451483932366,0.017578125
1451483934754,0.0263671875
1451483937182,0.029296875
1451483938458,0.0302734375
1451483941261,0.03125
1451483942503,0.0244140625
1451483945343,0.0283203125
1451483946586,0.0244140625
1451483947838,0.017578125
1451483951394,0.033203125
1451483952641,0.0224609375
1451483955025,0.0322265625
1451483956609,0.0244140625
1451483959670,0.0390625
1451483960906,0.017578125
1451483964760,0.0302734375
1451483966777,0.0361328125
1451483968019,0.0263671875
1451483970677,0.0341796875
1451483971929,0.033203125
1451483976196,0.017578125
1451483977672,0.03515625
1451483981433,0.0263671875
1451483984759,0.0361328125
1451483985089,0.0205078125
1451483988722,0.03515625
1451483989966,0.017578125
1451483993400,0.0263671875
1451483996209,0.033203125
1451483997603,0.0234375
1451484000454,0.0263671875
1451484003528,0.0283203125
1451484004772,0.017578125
1451484007541,0.0283203125
1451484008823,0.0234375
1451484012838,0.03515625
1451484016944,0.025390625
1451484019790,0.0234375
1451484022725,0.025390625
1451484024765,0.017578125
1451484027691,0.0341796875
1451484030722,0.03125
1451484032152,0.0322265625
1451484035555,0.033203125
1451484040480,0.01953125
1451484044768,0.0322265625
1451484045442,0.029296875
1451484049551,0.0380859375
1451484051017,0.037109375
1451484052759,0.0263671875
1451484054770,0.0390625
1451484057442,0.029296875
1451484058780,0.03515625
1451484061408,0.029296875
1451484064771,0.029296875
1451484067180,0.029296875
1451484070924,0.0283203125
1451484074878,0.0322265625
1451484076305,0.029296875
1451484077947,0.02734375
1451484080709,0.0322265625
1451484081951,0.017578125
1451484084774,0.0283203125
1451484086478,0.029296875
1451484089396,0.0302734375
1451484092297,0.0244140625
1451484093543,0.0185546875
1451484096624,0.0234375
1451484098642,0.017578125
1451484101552,0.03125
1451484106363,0.0283203125
1451484109240,0.0322265625
1451484110484,0.017578125
1451484113408,0.029296875
1451484114776,0.017578125
1451484117767,0.02734375
1451484122436,0.025390625
1451484125178,0.0361328125
1451484128112,0.0302734375
1451484129356,0.0185546875
1451484132585,0.0302734375
1451484134779,0.021484375
1451484136720,0.029296875
1451484139644,0.03125
1451484142667,0.03125
1451484144781,0.0185546875
1451484146303,0.0322265625
1451484147549,0.01953125
1451484151998,0.0302734375
1451484154784,0.0283203125
1451484157979,0.017578125
1451484160435,0.0322265625
1451484163517,0.025390625
1451484165352,0.0322265625
1451484166604,0.017578125
1451484170536,0.0302734375
1451484173447,0.02734375
1451484176291,0.0234375
1451484177743,0.02734375
1451484180872,0.0283203125
1451484182106,0.017578125
1451484185351,0.029296875
1451484186797,0.033203125
1451484188037,0.017578125
1451484192139,0.037109375
1451484193380,0.0185546875
1451484197301,0.033203125
1451484200151,0.0341796875
1451484203251,0.0302734375
1451484204791,0.021484375
1451484207204,0.0283203125
1451484208586,0.0263671875
1451484209822,0.01953125
1451484212787,0.0263671875
1451484215555,0.03515625
1451484216806,0.0185546875
1451484218590,0.017578125
1451484221156,0.0302734375
1451484222400,0.02734375
1451484225693,0.0244140625
1451484229741,0.02734375
1451484230975,0.02734375
1451484234794,0.0380859375
1451484235446,0.017578125
1451484238336,0.0283203125
1451484242513,0.0244140625
1451484244793,0.017578125
1451484247598,0.029296875
1451484249200,0.0400390625
1451484252910,0.0302734375
1451484254795,0.0185546875
1451484257283,0.02734375
1451484258561,0.0341796875
1451484259797,0.017578125
1451484264796,0.02734375
1451484265510,0.0244140625
1451484269475,0.0234375
1451484270715,0.021484375
1451484274798,0.0263671875
1451484277630,0.033203125
1451484280106,0.017578125
1451484282337,0.017578125
1451484284799,0.0234375
1451484287198,0.03125
1451484290044,0.0244140625
1451484291288,0.017578125
1451484294801,0.0361328125
1451484295881,0.0224609375
1451484299191,0.02734375
1451484300441,0.017578125
1451484303376,0.025390625
1451484304802,0.017578125
1451484307455,0.033203125
1451484310511,0.0234375
1451484313090,0.0244140625
1451484317138,0.0283203125
1451484318384,0.0341796875
1451484321379,0.0302734375
1451484323021,0.025390625
1451484326843,0.0361328125
1451484329508,0.0283203125
1451484330756,0.017578125
1451484334806,0.03125
1451484335020,0.021484375
1451484340437,0.017578125
1451484342372,0.021484375
1451484346252,0.0234375
1451484347492,0.0244140625
1451484350297,0.0341796875
1451484351539,0.017578125
1451484354807,0.02734375
1451484356016,0.025390625
1451484360904,0.0302734375
1451484364811,0.0263671875
1451484365743,0.025390625
1451484368943,0.0322265625
1451484370304,0.0244140625
1451484372158,0.029296875
1451484374822,0.033203125
1451484376519,0.0263671875
1451484378151,0.0361328125
1451484381249,0.03515625
1451484382495,0.021484375
1451484385540,0.0341796875
1451484388458,0.0390625
1451484391465,0.0341796875
1451484394813,0.0234375
1451484396149,0.0361328125
1451484399566,0.025390625
1451484402250,0.025390625
1451484403491,0.029296875
1451484406661,0.0302734375
1451484407909,0.0205078125
1451484410890,0.025390625
1451484412138,0.017578125
1451484415836,0.0302734375
1451484420881,0.02734375
1451484422127,0.0322265625
1451484425034,0.0322265625
1451484426276,0.021484375
1451484429124,0.033203125
1451484430427,0.0302734375
1451484432845,0.03125
1451484434831,0.021484375
1451484437906,0.0361328125
1451484439152,0.017578125
1451484442065,0.029296875
1451484445195,0.0234375
1451484449307,0.0283203125
1451484450550,0.017578125
1451484454822,0.0283203125
1451484457785,0.03515625
1451484461403,0.017578125
1451484464834,0.0322265625
1451484467022,0.0322265625
1451484470092,0.029296875
1451484474825,0.03125
1451484477015,0.0341796875
1451484478253,0.03125
1451484481394,0.0283203125
1451484482638,0.017578125
1451484485225,0.0283203125
1451484486467,0.0185546875
1451484489541,0.0341796875
1451484490791,0.01953125
1451484493608,0.0341796875
1451484494854,0.021484375
1451484497724,0.033203125
1451484500779,0.0234375
1451484503535,0.0322265625
1451484506413,0.0361328125
1451484507686,0.017578125
1451484510822,0.03125
1451484512069,0.0283203125
1451484514893,0.03125
1451484516551,0.0263671875
1451484520360,0.0244140625
1451484523466,0.0283203125
1451484527492,0.029296875
1451484528735,0.0205078125
1451484532407,0.03125
1451484535212,0.03125
1451484536616,0.03515625
1451484537856,0.0302734375
1451484541825,0.03125
1451484544833,0.02734375
1451484546272,0.03515625
1451484547828,0.02734375
1451484549270,0.0341796875
1451484550518,0.017578125
1451484556595,0.037109375
1451484557823,0.02734375
1451484560756,0.0302734375
1451484562504,0.029296875
1451484564836,0.0322265625
1451484565202,0.017578125
1451484568163,0.03125
1451484569403,0.0205078125
1451484570653,0.017578125
1451484574836,0.03515625
1451484576974,0.029296875
1451484581010,0.017578125
1451484582533,0.0302734375
1451484586379,0.037109375
1451484587622,0.0224609375
1451484590662,0.0263671875
1451484592318,0.017578125
1451484593579,0.03515625
1451484596507,0.03125
1451484597753,0.033203125
1451484601123,0.0283203125
1451484604840,0.0224609375
1451484606500,0.0283203125
1451484610739,0.0283203125
1451484611981,0.01953125
1451484616422,0.033203125
1451484617664,0.0302734375
1451484620581,0.03515625
1451484623385,0.029296875
1451484624843,0.0224609375
1451484627591,0.025390625
1451484628841,0.017578125
1451484631721,0.033203125
1451484634879,0.025390625
1451484637901,0.0224609375
1451484639307,0.0283203125
1451484641045,0.017578125
1451484643661,0.0283203125
1451484644900,0.02734375
1451484648664,0.0302734375
1451484651483,0.025390625
1451484652807,0.0341796875
1451484655635,0.0302734375
1451484657401,0.017578125
1451484660658,0.03515625
1451484661901,0.017578125
1451484664849,0.0361328125
1451484667607,0.037109375
1451484670541,0.033203125
1451484671982,0.02734375
1451484673618,0.03125
1451484674861,0.017578125
1451484677863,0.0302734375
1451484679107,0.01953125
1451484681811,0.0283203125
1451484684856,0.0263671875
1451484688568,0.0283203125
1451484691439,0.0322265625
1451484692681,0.01953125
1451484695745,0.029296875
1451484698778,0.02734375
1451484700018,0.02734375
1451484703324,0.017578125
1451484707297,0.0322265625
1451484708777,0.017578125
1451484712324,0.03515625
1451484713552,0.017578125
1451484717230,0.0341796875
1451484718473,0.017578125
1451484721587,0.0341796875
1451484722829,0.017578125
1451484725606,0.029296875
1451484728384,0.03515625
1451484729634,0.0341796875
1451484732507,0.0341796875
1451484733753,0.0205078125
1451484736531,0.0322265625
1451484739770,0.0224609375
1451484744858,0.0283203125
1451484746649,0.033203125
1451484749261,0.033203125
1451484751053,0.029296875
1451484752298,0.017578125
1451484756597,0.02734375
1451484757940,0.02734375
1451484759193,0.025390625
1451484762849,0.017578125
1451484766291,0.0322265625
1451484769222,0.03515625
1451484770470,0.017578125
1451484774863,0.03515625
1451484775541,0.03515625
1451484776783,0.0302734375
1451484780522,0.0361328125
1451484781764,0.017578125
1451484784865,0.0322265625
1451484787333,0.03515625
1451484788581,0.0185546875
1451484792431,0.02734375
1451484796890,0.02734375
1451484799575,0.03125
1451484800817,0.029296875
1451484803539,0.033203125
1451484804867,0.0224609375
1451484807482,0.0302734375
1451484810392,0.0283203125
1451484811636,0.0185546875
1451484814869,0.02734375
1451484816867,0.0361328125
1451484818111,0.01953125
1451484822410,0.0419921875
1451484825978,0.017578125
1451484828387,0.03125
1451484829627,0.01953125
1451484832687,0.029296875
1451484834872,0.0185546875
1451484837056,0.0302734375
1451484839973,0.0234375
1451484842889,0.033203125
1451484845655,0.03125
1451484846919,0.017578125
1451484850800,0.0302734375
1451484854877,0.0302734375
1451484857387,0.03515625
1451484860255,0.0361328125
1451484861655,0.02734375
1451484864874,0.03515625
1451484867104,0.033203125
1451484868349,0.0419921875
1451484871971,0.0263671875
1451484874875,0.029296875
1451484876108,0.017578125
1451484879194,0.021484375
1451484882406,0.017578125
1451484883641,0.0244140625
1451484886147,0.0322265625
1451484887681,0.0302734375
1451484890536,0.03125
1451484891790,0.017578125
1451484894960,0.0302734375
1451484896209,0.017578125
1451484900109,0.0234375
1451484901714,0.017578125
1451484906302,0.029296875
1451484907548,0.017578125
1451484911577,0.0322265625
1451484914883,0.0361328125
1451484915730,0.017578125
1451484919721,0.029296875
1451484922616,0.033203125
1451484924885,0.017578125
1451484926851,0.03125
1451484929778,0.033203125
1451484931062,0.0341796875
1451484932332,0.017578125
1451484935828,0.025390625
1451484937385,0.025390625
1451484940921,0.0302734375
1451484942761,0.0205078125
1451484946072,0.0341796875
1451484947336,0.033203125
1451484951101,0.029296875
1451484954887,0.029296875
1451484956940,0.03125
1451484958440,0.017578125
1451484961312,0.02734375
1451484962548,0.017578125
1451484965689,0.03125
1451484968559,0.0263671875
1451484970260,0.0419921875
1451484973470,0.0361328125
1451484974900,0.0341796875
1451484978081,0.03125
1451484980925,0.0322265625
1451484982569,0.0283203125
1451484985804,0.02734375
1451484987086,0.017578125
1451484990221,0.025390625
1451484992909,0.03125
1451484995905,0.033203125
1451484998950,0.03515625
1451485005543,0.017578125
1451485007429,0.03515625
1451485008677,0.017578125
1451485011769,0.029296875
1451485013262,0.017578125
1451485016986,0.03515625
1451485018228,0.017578125
1451485022005,0.02734375
1451485023249,0.025390625
1451485027121,0.0380859375
1451485029882,0.0341796875
1451485032927,0.0341796875
1451485034897,0.0224609375
1451485036935,0.03125
1451485038181,0.0185546875
1451485041144,0.0263671875
1451485042426,0.017578125
1451485045601,0.0244140625
1451485049423,0.0302734375
1451485053574,0.0302734375
1451485056614,0.02734375
1451485057852,0.017578125
1451485062781,0.017578125
1451485066430,0.0263671875
1451485069282,0.0283203125
1451485073701,0.0234375
1451485077877,0.037109375
1451485080791,0.029296875
1451485082126,0.02734375
1451485083371,0.025390625
1451485087133,0.03515625
1451485088375,0.01953125
1451485092375,0.037109375
1451485093622,0.017578125
1451485096571,0.0322265625
1451485097818,0.017578125
1451485101779,0.029296875
1451485104911,0.0400390625
1451485106439,0.0322265625
1451485109918,0.029296875
1451485112973,0.0234375
1451485114907,0.03125
1451485115681,0.0263671875
1451485116923,0.0205078125
1451485121002,0.0322265625
1451485127173,0.017578125
1451485129803,0.0263671875
1451485131037,0.021484375
1451485134911,0.0322265625
1451485135924,0.0283203125
1451485138626,0.033203125
1451485139872,0.0263671875
1451485142787,0.033203125
1451485144911,0.0302734375
1451485147540,0.0322265625
1451485150184,0.0322265625
1451485153058,0.029296875
1451485154912,0.0322265625
1451485156363,0.017578125
1451485159421,0.0302734375
1451485160657,0.017578125
1451485163642,0.03125
1451485164914,0.01953125
1451485167842,0.029296875
1451485170593,0.0380859375
1451485174915,0.033203125
1451485176116,0.017578125
1451485179154,0.029296875
1451485182071,0.025390625
1451485186017,0.017578125
1451485189159,0.033203125
1451485190402,0.0185546875
1451485193352,0.02734375
1451485196219,0.029296875
1451485197459,0.017578125
1451485201640,0.03515625
1451485202882,0.017578125
1451485205900,0.03125
1451485208852,0.03125
1451485211045,0.0224609375
1451485212545,0.0244140625
1451485213801,0.0263671875
1451485215079,0.025390625
1451485216318,0.041015625
1451485217562,0.0283203125
1451485218804,0.025390625
1451485220051,0.025390625
1451485221291,0.025390625
1451485222531,0.0263671875
1451485223771,0.02734375
1451485225023,0.025390625
1451485226273,0.025390625
1451485227519,0.029296875
1451485228763,0.02734375
1451485232790,0.0244140625
1451485234922,0.0263671875
1451485235270,0.0263671875
1451485236512,0.025390625
1451485237755,0.025390625
1451485239011,0.025390625
1451485240241,0.0263671875
1451485241483,0.029296875
1451485242741,0.029296875
1451485245596,0.0283203125
1451485247471,0.025390625
1451485248930,0.02734375
1451485250203,0.0263671875
1451485251437,0.0263671875
1451485252691,0.0283203125
1451485254925,0.0263671875
1451485255211,0.03125
1451485256454,0.0283203125
1451485257696,0.029296875
1451485258938,0.029296875
1451485260180,0.02734375
1451485261418,0.0263671875
1451485262670,0.037109375
1451485264931,0.033203125
1451485265211,0.025390625
1451485266453,0.02734375
1451485267753,0.025390625
1451485269225,0.0263671875
1451485270533,0.0283203125
1451485271771,0.029296875
1451485273012,0.0283203125
1451485274928,0.02734375
1451485275478,0.0263671875
1451485276724,0.0283203125
1451485277965,0.025390625
1451485280423,0.0283203125
1451485281639,0.0283203125
1451485282885,0.0263671875
1451485284930,0.0283203125
1451485285382,0.02734375
1451485286630,0.025390625
1451485288110,0.025390625
1451485289572,0.02734375
1451485290823,0.0380859375
1451485292073,0.02734375
1451485293311,0.0263671875
1451485294931,0.0263671875
1451485295797,0.0244140625
1451485297039,0.0244140625
1451485298282,0.0263671875
1451485299526,0.029296875
1451485300768,0.0283203125
1451485302018,0.025390625
1451485303286,0.03125
1451485306109,0.0244140625
1451485308091,0.02734375
1451485309325,0.02734375
1451485310568,0.025390625
1451485311811,0.0244140625
1451485314932,0.02734375
1451485316682,0.0244140625
1451485317925,0.0244140625
1451485319179,0.0224609375
1451485320425,0.03125
1451485321669,0.025390625
1451485322915,0.02734375
1451485325615,0.0322265625
1451485327026,0.025390625
1451485328258,0.0234375
1451485329504,0.0390625
1451485330742,0.0234375
1451485331987,0.0224609375
1451485333227,0.0234375
1451485334937,0.0224609375
1451485335717,0.0205078125
1451485336955,0.01953125
1451485338197,0.0205078125
1451485339451,0.01953125
1451485340698,0.021484375
1451485341946,0.021484375
1451485343194,0.0205078125
1451485344936,0.0224609375
1451485345976,0.021484375
1451485347257,0.021484375
1451485348493,0.0341796875
1451485349735,0.0234375
1451485350975,0.0224609375
1451485352225,0.0224609375
1451485353464,0.0224609375
1451485354938,0.0224609375
1451485355951,0.0224609375
1451485357194,0.0224609375
1451485358442,0.021484375
1451485359693,0.021484375
1451485360939,0.01953125
1451485362187,0.01953125
1451485363433,0.0224609375
1451485365851,0.021484375
1451485367792,0.021484375
1451485369032,0.025390625
1451485370272,0.021484375
1451485371510,0.01953125
1451485372759,0.01953125
1451485374943,0.0205078125
1451485375279,0.0205078125
1451485376531,0.021484375
1451485377775,0.01953125
1451485379021,0.01953125
1451485380360,0.033203125
1451485381850,0.0205078125
1451485383100,0.01953125
1451485384944,0.0224609375
1451485385591,0.0224609375
1451485386834,0.0224609375
1451485388079,0.0224609375
1451485389317,0.0224609375
1451485390561,0.0224609375
1451485391801,0.021484375
1451485393040,0.01953125
1451485394944,0.01953125
1451485395526,0.0205078125
1451485396780,0.01953125
1451485398024,0.0205078125
1451485399273,0.021484375
1451485400733,0.0205078125
1451485402205,0.01953125
1451485403453,0.021484375
1451485404945,0.021484375
1451485405939,0.0224609375
1451485407185,0.0205078125
1451485408430,0.0224609375
1451485409670,0.0224609375
1451485410912,0.021484375
1451485413344,0.01953125
1451485414947,0.0205078125
1451485415841,0.01953125
1451485417087,0.01953125
1451485418333,0.0205078125
1451485419627,0.0205078125
1451485421126,0.0205078125
1451485422404,0.01953125
1451485423638,0.0205078125
1451485425598,0.01953125
1451485426836,0.0205078125
1451485428801,0.0205078125
1451485430043,0.0205078125
1451485431291,0.01953125
1451485432535,0.01953125
1451485433785,0.0205078125
1451485435036,0.021484375
1451485436534,0.01953125
1451485437888,0.025390625
1451485439122,0.021484375
1451485440356,0.01953125
1451485441601,0.0263671875
1451485442875,0.017578125
1451485444951,0.017578125
1451485448672,0.029296875
1451485450202,0.0263671875
1451485451582,0.0283203125
1451485455091,0.03125
1451485456341,0.017578125
1451485457597,0.01953125
1451485460133,0.033203125
1451485461553,0.03125
1451485463198,0.0234375
1451485467308,0.0380859375
1451485468552,0.021484375
1451485471547,0.02734375
1451485474953,0.0361328125
1451485476342,0.025390625
1451485479718,0.0361328125
1451485482807,0.03125
1451485484957,0.03515625
1451485488920,0.0263671875
1451485491264,0.0322265625
1451485494956,0.0341796875
1451485495494,0.02734375
1451485498571,0.02734375
1451485501531,0.0380859375
1451485503164,0.037109375
1451485504962,0.017578125
1451485508426,0.025390625
1451485509731,0.0244140625
1451485512475,0.0283203125
1451485514959,0.025390625
1451485518276,0.02734375
1451485521226,0.03515625
1451485524963,0.033203125
1451485526771,0.029296875
1451485531026,0.0302734375
1451485533848,0.025390625
1451485535146,0.0302734375
1451485539089,0.0322265625
1451485540347,0.0302734375
1451485543374,0.0283203125
1451485544966,0.0341796875
1451485549072,0.0205078125
1451485550309,0.0244140625
1451485552093,0.02734375
1451485553335,0.0205078125
1451485557414,0.029296875
1451485558666,0.017578125
1451485562346,0.029296875
1451485565142,0.033203125
1451485566571,0.0224609375
1451485568541,0.021484375
1451485572822,0.0361328125
1451485574966,0.021484375
1451485578147,0.0302734375
1451485579617,0.03125
1451485580975,0.01953125
1451485582699,0.0302734375
1451485584968,0.033203125
1451485585628,0.0234375
1451485588678,0.03125
1451485589926,0.0185546875
1451485592399,0.017578125
1451485593681,0.0341796875
1451485596125,0.0263671875
1451485598990,0.0283203125
1451485600230,0.017578125
1451485602730,0.0224609375
1451485604973,0.017578125
1451485608595,0.0283203125
1451485611369,0.0322265625
1451485612616,0.02734375
1451485616168,0.0283203125
1451485619319,0.0302734375
1451485622129,0.0224609375
1451485623811,0.0283203125
1451485626788,0.0341796875
1451485628030,0.02734375
1451485630838,0.0302734375
1451485632077,0.017578125
1451485634975,0.0322265625
1451485635839,0.017578125
1451485638959,0.0322265625
1451485641668,0.0302734375
1451485642914,0.0244140625
1451485646743,0.0283203125
1451485648219,0.017578125
1451485652109,0.025390625
1451485653706,0.02734375
1451485657418,0.02734375
1451485660499,0.029296875
1451485661755,0.025390625
1451485664981,0.029296875
1451485668204,0.0185546875
1451485670791,0.03125
1451485672657,0.0244140625
1451485674987,0.0302734375
1451485677373,0.0322265625
1451485678615,0.0185546875
1451485681616,0.029296875
1451485683238,0.0380859375
1451485686893,0.03125
1451485689975,0.0234375
1451485691217,0.0419921875
1451485694982,0.029296875
1451485697090,0.021484375
1451485698342,0.0400390625
1451485701267,0.02734375
1451485702987,0.0205078125
1451485705903,0.029296875
1451485707142,0.017578125
1451485710062,0.03125
1451485711302,0.017578125
1451485714985,0.033203125
1451485715851,0.0205078125
1451485719103,0.0302734375
1451485720352,0.02734375
1451485723502,0.0263671875
1451485726782,0.02734375
1451485728702,0.017578125
1451485730501,0.017578125
1451485732529,0.033203125
1451485733772,0.017578125
1451485736716,0.02734375
1451485739670,0.0283203125
1451485740992,0.033203125
1451485742311,0.021484375
1451485745085,0.03515625
1451485746331,0.017578125
1451485749258,0.025390625
1451485750656,0.02734375
1451485753870,0.0283203125
1451485757883,0.033203125
1451485759125,0.0263671875
1451485763170,0.02734375
1451485764992,0.03125
1451485765726,0.0322265625
1451485768677,0.029296875
1451485772987,0.0361328125
1451485774994,0.017578125
1451485777362,0.0322265625
1451485778768,0.02734375
1451485781222,0.03125
1451485785363,0.033203125
1451485788707,0.0341796875
1451485791074,0.037109375
1451485794996,0.0244140625
1451485795332,0.017578125
1451485799085,0.03125
1451485800813,0.03515625
1451485802069,0.0185546875
1451485805374,0.0302734375
1451485807228,0.0205078125
1451485810651,0.0283203125
1451485813589,0.037109375
1451485816590,0.0322265625
1451485818100,0.0341796875
1451485819342,0.017578125
1451485822377,0.033203125
1451485823615,0.0185546875
1451485826749,0.02734375
1451485827991,0.017578125
1451485831486,0.0263671875
1451485832742,0.0302734375
1451485835768,0.025390625
1451485840171,0.0224609375
1451485841887,0.0244140625
1451485845002,0.033203125
1451485848166,0.017578125
1451485849861,0.017578125
1451485851185,0.0341796875
1451485852429,0.01953125
1451485855379,0.03515625
1451485856626,0.017578125
1451485863838,0.0224609375
1451485867751,0.03125
1451485869164,0.0322265625
1451485870407,0.017578125
1451485873862,0.02734375
1451485875158,0.02734375
1451485878793,0.02734375
1451485882045,0.03125
1451485885322,0.0283203125
1451485888348,0.0341796875
1451485889596,0.017578125
1451485895011,0.03515625
1451485897046,0.02734375
1451485898292,0.017578125
1451485902736,0.03125
1451485905913,0.0322265625
1451485907861,0.017578125
1451485912044,0.0322265625
1451485916238,0.029296875
1451485919317,0.025390625
1451485922253,0.0283203125
1451485926448,0.029296875
1451485927870,0.0263671875
1451485931078,0.0341796875
1451485935015,0.029296875
1451485936861,0.03125
1451485938102,0.017578125
1451485941614,0.0263671875
1451485942862,0.017578125
1451485947015,0.02734375
1451485949621,0.0263671875
1451485951485,0.01953125
1451485955162,0.033203125
1451485956408,0.021484375
1451485960637,0.029296875
1451485962056,0.03125
1451485965294,0.0322265625
1451485966538,0.017578125
1451485970404,0.0322265625
1451485975019,0.0390625
1451485978872,0.0283203125
1451485981876,0.0244140625
1451485985020,0.0283203125
1451485986223,0.029296875
1451485990183,0.03515625
1451485993350,0.0283203125
1451485995022,0.0205078125
1451485998328,0.03125
1451486001552,0.0302734375
1451486002799,0.017578125
1451486006625,0.0361328125
1451486009660,0.025390625
1451486013692,0.0283203125
1451486015393,0.029296875
1451486016635,0.0185546875
1451486020113,0.037109375
1451486021362,0.0185546875
1451486025026,0.03125
1451486025926,0.025390625
1451486029295,0.0234375
1451486032429,0.0185546875
1451486036898,0.03125
1451486038138,0.017578125
1451486042421,0.02734375
1451486043663,0.017578125
1451486046764,0.03515625
1451486049676,0.0283203125
1451486050918,0.0205078125
1451486055035,0.02734375
1451486057892,0.033203125
1451486060873,0.03515625
1451486062120,0.017578125
1451486066244,0.0263671875
1451486067895,0.0234375
1451486071713,0.0283203125
1451486073339,0.0283203125
1451486077230,0.0302734375
1451486078472,0.0224609375
1451486081058,0.03125
1451486082299,0.025390625
1451486086283,0.03515625
1451486087586,0.0322265625
1451486091950,0.017578125
1451486095263,0.0263671875
1451486096507,0.0400390625
1451486099501,0.0361328125
1451486100743,0.017578125
1451486103818,0.0322265625
1451486107064,0.0234375
1451486108309,0.017578125
1451486111269,0.0302734375
1451486115037,0.033203125
1451486115526,0.025390625
1451486119258,0.0283203125
1451486120932,0.0234375
1451486125039,0.037109375
1451486125692,0.0234375
1451486128727,0.0244140625
1451486131680,0.0341796875
1451486135040,0.033203125
1451486135956,0.017578125
1451486139012,0.025390625
1451486140257,0.0205078125
1451486143049,0.0283203125
1451486145964,0.0263671875
1451486147370,0.017578125
1451486150714,0.017578125
1451486152373,0.017578125
1451486155145,0.0302734375
1451486156387,0.0244140625
1451486159086,0.0341796875
1451486160332,0.01953125
1451486165045,0.0263671875
1451486165381,0.029296875
1451486168532,0.0263671875
1451486170012,0.017578125
1451486175044,0.033203125
1451486177165,0.0302734375
1451486178991,0.0322265625
1451486182051,0.0283203125
1451486183795,0.0263671875
1451486185072,0.0224609375
1451486188768,0.033203125
1451486191639,0.03125
1451486193345,0.0341796875
1451486195052,0.017578125
1451486197646,0.0322265625
1451486198906,0.017578125
1451486202058,0.0224609375
1451486203553,0.03125
1451486207477,0.0283203125
1451486209213,0.03125
1451486212536,0.041015625
1451486216364,0.0341796875
1451486217612,0.017578125
1451486220623,0.029296875
1451486221873,0.0263671875
1451486225053,0.0224609375
1451486225702,0.0390625
1451486228520,0.0283203125
1451486229762,0.021484375
1451486233055,0.0322265625
1451486235053,0.0234375
1451486237069,0.033203125
1451486239980,0.037109375
1451486245064,0.03515625
1451486245765,0.03125
1451486250192,0.029296875
1451486251437,0.017578125
1451486423417,0.0283203125
1451486424685,0.017578125
1451486429265,0.03515625
1451486430512,0.017578125
1451486433222,0.0302734375
1451486436403,0.033203125
1451486437817,0.033203125
1451486441375,0.0380859375
1451486444038,0.03125
1451486446242,0.0263671875
1451486448889,0.03515625
1451486450183,0.0234375
1451486454069,0.0341796875
1451486456227,0.0302734375
1451486459568,0.0341796875
1451486460812,0.0205078125
1451486463532,0.03125
1451486466343,0.0302734375
1451486469647,0.021484375
1451486472448,0.0234375
1451486473682,0.017578125
1451486476628,0.0322265625
1451486480335,0.0234375
1451486484066,0.02734375
1451486485374,0.033203125
1451486488210,0.0263671875
1451486489458,0.0341796875
1451486493381,0.0302734375
1451486497379,0.029296875
1451486500826,0.0283203125
1451486502504,0.029296875
1451486506247,0.029296875
1451486506977,0.0185546875
1451486510074,0.0322265625
1451486511433,0.0263671875
1451486513776,0.02734375
1451486516982,0.0302734375
1451486520129,0.0302734375
1451486521381,0.0205078125
1451486524728,0.0234375
1451486526328,0.025390625
1451486527558,0.0302734375
1451486531314,0.029296875
1451486532567,0.02734375
1451486536251,0.0302734375
1451486538144,0.0234375
1451486540148,0.017578125
1451486543429,0.02734375
1451486546301,0.029296875
1451486547769,0.017578125
1451486550651,0.0283203125
1451486551893,0.017578125
1451486555094,0.0341796875
1451486556343,0.017578125
1451486559497,0.0283203125
1451486560735,0.017578125
1451486563302,0.0263671875
1451486566255,0.0302734375
1451486567310,0.017578125
1451486570472,0.02734375
1451486571718,0.0224609375
1451486574855,0.029296875
1451486576309,0.017578125
1451486579455,0.021484375
1451486582110,0.0283203125
1451486585036,0.03515625
1451486586275,0.0234375
1451486589715,0.03515625
1451486594312,0.0283203125
1451486596258,0.017578125
1451486600360,0.017578125
1451486603103,0.0283203125
1451486607630,0.0341796875
1451486608872,0.017578125
1451486613028,0.02734375
1451486614268,0.017578125
1451486618529,0.025390625
1451486621462,0.02734375
1451486622706,0.017578125
1451486626886,0.025390625
1451486628137,0.017578125
1451486632223,0.0322265625
1451486633470,0.0302734375
1451486636642,0.0234375
1451486640867,0.033203125
1451486643913,0.03515625
1451486646257,0.0234375
1451486647797,0.03125
1451486649038,0.0244140625
1451486652166,0.0283203125
1451486653410,0.0185546875
1451486656307,0.033203125
1451486659483,0.03515625
1451486660771,0.017578125
1451486663436,0.025390625
1451486664678,0.017578125
1451486668389,0.0322265625
1451486671495,0.0341796875
1451486674453,0.0283203125
1451486676260,0.0234375
1451486679470,0.03515625
1451486682567,0.0361328125
1451486683819,0.017578125
1451486686267,0.033203125
1451486687343,0.017578125
1451486690464,0.037109375
1451486694724,0.0302734375
1451486699825,0.0361328125
1451486701067,0.021484375
1451486704148,0.033203125
1451486706260,0.017578125
1451486709097,0.0283203125
1451486713563,0.03125
1451486716454,0.0234375
1451486718224,0.0234375
1451486721313,0.025390625
1451486723162,0.017578125
1451486726277,0.03515625
1451486727193,0.0244140625
1451486728429,0.0224609375
1451486731488,0.0302734375
1451486737305,0.0302734375
1451486739061,0.0283203125
1451486740415,0.0361328125
1451486742286,0.0302734375
1451486743788,0.017578125
1451486747724,0.03125
1451486750825,0.0322265625
1451486752067,0.0283203125
1451486754993,0.02734375
1451486756593,0.02734375
1451486757832,0.017578125
1451486760798,0.033203125
1451486762154,0.02734375
1451486766269,0.03515625
1451486766747,0.0234375
1451486769835,0.029296875
1451486771106,0.017578125
1451486774656,0.0224609375
1451486776310,0.02734375
1451486780395,0.029296875
1451486783267,0.021484375
1451486787178,0.03125
1451486789924,0.033203125
1451486791401,0.0224609375
1451486792631,0.017578125
1451486796271,0.0283203125
1451486796889,0.0390625
1451486798502,0.0302734375
1451486802614,0.02734375
1451486804237,0.029296875
1451486807613,0.0283203125
1451486810249,0.0302734375
1451486811493,0.017578125
1451486814594,0.0341796875
1451486816274,0.0263671875
1451486818955,0.03515625
1451486820509,0.033203125
1451486821761,0.0400390625
1451486825071,0.02734375
1451486829324,0.0234375
1451486833477,0.03125
1451486834719,0.017578125
1451486837623,0.033203125
1451486838865,0.0185546875
1451486841662,0.03515625
1451486846279,0.0302734375
1451486847363,0.0400390625
1451486850157,0.0390625
1451486851559,0.021484375
1451486853064,0.0419921875
1451486856292,0.033203125
1451486859203,0.0263671875
1451486860445,0.017578125
1451486863879,0.0302734375
1451486866828,0.03125
1451486869892,0.0302734375
1451486872965,0.0341796875
1451486874211,0.0185546875
1451486877987,0.0341796875
1451486879331,0.017578125
1451486883602,0.041015625
1451486885155,0.0302734375
1451486888585,0.0322265625
1451486889829,0.017578125
1451486892673,0.0341796875
1451486896290,0.0302734375
1451486899864,0.0302734375
1451486901665,0.017578125
1451486904809,0.017578125
1451486907384,0.03515625
1451486910526,0.0283203125
1451486913675,0.029296875
1451486917927,0.029296875
1451486919171,0.017578125
1451486921864,0.03125
1451486923104,0.0322265625
1451486927295,0.03125
1451486928541,0.0205078125
1451486931351,0.033203125
1451486932599,0.017578125
1451486936293,0.0263671875
1451486938724,0.033203125
1451486941557,0.0361328125
1451486942799,0.017578125
1451486946553,0.0302734375
1451486949590,0.0283203125
1451486952650,0.0322265625
1451486953892,0.017578125
1451486958023,0.0390625
1451486959693,0.033203125
1451486964628,0.0185546875
1451486968476,0.033203125
1451486970075,0.0361328125
1451486971693,0.0244140625
1451486973345,0.029296875
1451486976468,0.0283203125
1451486977710,0.0322265625
1451486980605,0.03515625
1451486981848,0.017578125
1451486984907,0.0283203125
1451486986307,0.017578125
1451486989086,0.0322265625
1451486991846,0.0224609375
1451486994659,0.03515625
1451486996299,0.0302734375
1451486999131,0.0361328125
1451487001978,0.029296875
1451487006298,0.0380859375
1451487008593,0.0322265625
1451487009829,0.017578125
1451487013583,0.03125
1451487014833,0.017578125
1451487018134,0.0283203125
1451487019380,0.0185546875
1451487023054,0.0244140625
1451487026899,0.017578125
1451487030418,0.02734375
1451487031660,0.0224609375
1451487063699,0.03125
1451487064943,0.0302734375
1451487066193,0.02734375
1451487067431,0.025390625
1451487069043,0.02734375
1451487069929,0.02734375
1451487071176,0.03515625
1451487072426,0.02734375
1451487073676,0.0263671875
1451487075170,0.0263671875
1451487076453,0.0244140625
1451487077689,0.0244140625
1451487079051,0.0224609375
1451487080169,0.0244140625
1451487081413,0.0224609375
1451487082657,0.0224609375
1451487083900,0.029296875
1451487085142,0.0263671875
1451487086382,0.0263671875
1451487087622,0.02734375
1451487089044,0.0263671875
1451487090124,0.0234375
1451487091373,0.0263671875
1451487092653,0.0244140625
1451487093869,0.0244140625
1451487095377,0.0244140625
1451487096772,0.0263671875
1451487099048,0.0244140625
1451487099292,0.0263671875
1451487100528,0.03125
1451487101770,0.025390625
1451487103008,0.0234375
1451487104249,0.0234375
1451487105493,0.0224609375
1451487106735,0.0244140625
1451487109159,0.0234375
1451487110413,0.0224609375
1451487111658,0.025390625
1451487112906,0.0224609375
1451487114193,0.0244140625
1451487115698,0.025390625
1451487117025,0.0224609375
1451487119049,0.0224609375
1451487119505,0.0263671875
1451487120743,0.025390625
1451487123065,0.0244140625
1451487124397,0.0244140625
1451487125648,0.0224609375
1451487126894,0.033203125
1451487129050,0.0234375
1451487129396,0.0263671875
1451487130884,0.0244140625
1451487132235,0.0224609375
1451487133471,0.0234375
1451487134711,0.0234375
1451487135955,0.0224609375
1451487137197,0.0302734375
1451487139051,0.0419921875
1451487139668,0.025390625
1451487140910,0.025390625
1451487142148,0.025390625
1451487143388,0.025390625
1451487144636,0.0234375
1451487145889,0.0244140625
1451487147135,0.0263671875
1451487149053,0.0234375
1451487149641,0.0244140625
1451487151135,0.0234375
1451487153704,0.0234375
1451487154946,0.0244140625
1451487156190,0.0234375
1451487157432,0.0244140625
1451487159055,0.0244140625
1451487159961,0.0244140625
1451487161165,0.0244140625
1451487162407,0.0244140625
1451487163649,0.025390625
1451487164898,0.0234375
1451487166145,0.0234375
1451487167388,0.0234375
1451487169056,0.0224609375
1451487169934,0.0244140625
1451487171418,0.025390625
1451487172711,0.025390625
1451487173947,0.025390625
1451487175189,0.0263671875
1451487176431,0.0263671875
1451487177673,0.0263671875
1451487180107,0.03515625
1451487181970,0.0224609375
1451487184272,0.0224609375
1451487185524,0.025390625
1451487186959,0.0244140625
1451487189059,0.02734375
1451487189675,0.0224609375
1451487190915,0.0234375
1451487192164,0.0224609375
1451487193403,0.0224609375
1451487194642,0.03125
1451487195888,0.029296875
1451487197128,0.0234375
1451487199064,0.0244140625
1451487199612,0.0244140625
1451487200857,0.0244140625
1451487202101,0.025390625
1451487203351,0.025390625
1451487204595,0.0234375
1451487205844,0.0361328125
1451487207268,0.02734375
1451487209062,0.025390625
1451487210012,0.0263671875
1451487211254,0.0234375
1451487212498,0.0234375
1451487213741,0.0244140625
1451487214985,0.0244140625
1451487216225,0.025390625
1451487217467,0.025390625
1451487219061,0.025390625
1451487219946,0.0224609375
1451487221196,0.0244140625
1451487222446,0.0263671875
1451487223694,0.0263671875
1451487224940,0.0244140625
1451487226222,0.0224609375
1451487227715,0.0244140625
1451487229065,0.0263671875
1451487230271,0.0263671875
1451487231513,0.025390625
1451487232753,0.0234375
1451487233993,0.0234375
1451487235238,0.0244140625
1451487236480,0.0234375
1451487237720,0.025390625
1451487239064,0.0263671875
1451487240209,0.0263671875
1451487241462,0.0234375
1451487243827,0.0322265625
1451487245833,0.025390625
1451487247077,0.0244140625
1451487249066,0.0244140625
1451487249564,0.0234375
1451487250808,0.0361328125
1451487252048,0.02734375
1451487253293,0.0263671875
1451487254535,0.0263671875
1451487255779,0.0263671875
1451487257024,0.0263671875
1451487259067,0.0244140625
1451487259524,0.0234375
1451487260763,0.0234375
1451487262016,0.0224609375
1451487263280,0.0263671875
1451487264768,0.0234375
1451487266191,0.0234375
1451487269069,0.0224609375
1451487269864,0.0234375
1451487271104,0.0224609375
1451487272341,0.0234375
1451487273587,0.0234375
1451487274825,0.025390625
1451487276068,0.0263671875
1451487277312,0.0263671875
1451487279070,0.0234375
1451487279816,0.0224609375
1451487281062,0.0224609375
1451487282315,0.0263671875
1451487283575,0.0234375
1451487285073,0.025390625
1451487286431,0.0224609375
1451487287667,0.025390625
1451487289071,0.0224609375
1451487290148,0.025390625
1451487291392,0.0244140625
1451487292636,0.025390625
1451487294332,0.017578125
1451487296764,0.021484375
1451487300577,0.0302734375
1451487302051,0.033203125
1451487306844,0.03515625
1451487309074,0.017578125
1451487311463,0.0302734375
1451487312704,0.017578125
1451487317178,0.025390625
1451487319076,0.03125
1451487323092,0.03515625
1451487326391,0.029296875
1451487330926,0.0302734375
1451487332182,0.0205078125
1451487334852,0.0322265625
1451487337877,0.025390625
1451487339497,0.0361328125
1451487343049,0.03125
1451487346138,0.03515625
1451487347510,0.03125
1451487350855,0.0302734375
1451487352101,0.017578125
1451487356152,0.0283203125
1451487357398,0.017578125
1451487361020,0.0322265625
1451487363276,0.017578125
1451487366773,0.0263671875
1451487369081,0.0205078125
1451487372680,0.033203125
1451487373920,0.0205078125
1451487376837,0.0302734375
1451487380009,0.025390625
1451487381261,0.0205078125
1451487385394,0.0302734375
1451487386638,0.017578125
1451487390104,0.025390625
1451487391763,0.0205078125
1451487395221,0.0283203125
1451487399580,0.0302734375
1451487400822,0.0205078125
1451487404035,0.0283203125
1451487407409,0.03125
1451487410255,0.0283203125
1451487411503,0.02734375
1451487414344,0.0302734375
1451487415832,0.0234375
1451487417076,0.029296875
1451487421685,0.0380859375
1451487425781,0.029296875
1451487429266,0.021484375
1451487432241,0.0322265625
1451487435347,0.02734375
1451487437247,0.025390625
1451487440503,0.029296875
1451487443758,0.03125
1451487451081,0.0322265625
1451487452327,0.0283203125
1451487455344,0.0302734375
1451487459787,0.0283203125
1451487462977,0.02734375
1451487464215,0.017578125
1451487467652,0.0283203125
1451487469094,0.017578125
1451487471973,0.0263671875
1451487473908,0.029296875
1451487475157,0.017578125
1451487479097,0.0244140625
1451487480072,0.03515625
1451487484123,0.017578125
1451487489097,0.0322265625
1451487491239,0.0283203125
1451487492483,0.0185546875
1451487495656,0.0244140625
1451487497402,0.0390625
1451487499170,0.03125
1451487500744,0.03125
1451487503575,0.02734375
1451487504811,0.017578125
1451487509100,0.0263671875
1451487509508,0.017578125
1451487512686,0.0244140625
1451487514406,0.0224609375
1451487517529,0.029296875
1451487519109,0.0234375
1451487522236,0.029296875
1451487523484,0.0234375
1451487526898,0.0263671875
1451487529103,0.0302734375
1451487532635,0.0322265625
1451487536632,0.03125
1451487537916,0.017578125
1451487541947,0.0244140625
1451487545149,0.0380859375
1451487547883,0.0283203125
1451487551098,0.0244140625
1451487554104,0.029296875
1451487555593,0.017578125
1451487559107,0.0302734375
1451487559875,0.017578125
1451487562954,0.0302734375
1451487564198,0.0185546875
1451487567532,0.029296875
1451487570615,0.02734375
1451487571853,0.017578125
1451487576142,0.029296875
1451487577394,0.01953125
1451487580402,0.025390625
1451487582276,0.0283203125
1451487583523,0.017578125
1451487589432,0.017578125
1451487592910,0.025390625
1451487596041,0.0322265625
1451487597281,0.02734375
1451487601717,0.029296875
1451487602961,0.017578125
1451487606824,0.0244140625
1451487609113,0.0283203125
1451487612147,0.0322265625
1451487613667,0.0205078125
1451487617492,0.02734375
1451487619114,0.017578125
1451487622803,0.0302734375
1451487624161,0.0263671875
1451487625435,0.0224609375
1451487627351,0.017578125
1451487629115,0.0244140625
1451487632462,0.017578125
1451487633712,0.0205078125
1451487635648,0.017578125
1451487637701,0.0283203125
1451487641035,0.0224609375
1451487644205,0.02734375
1451487645572,0.0302734375
1451487649118,0.0322265625
1451487651268,0.0322265625
1451487652514,0.0205078125
1451487655855,0.03125
1451487657097,0.0205078125
1451487660378,0.025390625
1451487661614,0.017578125
1451487665401,0.017578125
1451487669122,0.017578125
1451487670713,0.02734375
1451487671954,0.0185546875
1451487676344,0.02734375
1451487679387,0.0302734375
1451487680623,0.03125
1451487681869,0.017578125
1451487685328,0.0244140625
1451487687934,0.0263671875
1451487691338,0.0283203125
1451487695145,0.0322265625
1451487696683,0.029296875
1451487699126,0.0380859375
1451487701464,0.0224609375
1451487704594,0.0380859375
1451487706427,0.0302734375
1451487707669,0.01953125
1451487710325,0.0302734375
1451487711571,0.0263671875
1451487715680,0.03125
1451487716932,0.0205078125
1451487720169,0.0283203125
1451487723475,0.0244140625
1451487725462,0.017578125
1451487729128,0.02734375
1451487733009,0.029296875
1451487736201,0.0263671875
1451487739267,0.0302734375
1451487741800,0.0322265625
1451487743070,0.0224609375
1451487747025,0.03125
1451487750053,0.0341796875
1451487751675,0.0205078125
1451487752913,0.0244140625
1451487754156,0.0234375
1451487757808,0.0302734375
1451487759133,0.0185546875
1451487762421,0.033203125
1451487763973,0.0302734375
1451487767253,0.0283203125
1451487770362,0.0263671875
1451487774689,0.0263671875
1451487775975,0.0234375
1451487780168,0.02734375
1451487781754,0.029296875
1451487786943,0.021484375
1451487791679,0.03515625
1451487796220,0.0302734375
1451487797468,0.0224609375
1451487801919,0.0263671875
1451487805235,0.03515625
1451487809686,0.03125
1451487810928,0.0205078125
1451487814180,0.0341796875
1451487815795,0.029296875
1451487817223,0.0322265625
1451487819141,0.01953125
1451487822354,0.0341796875
1451487823596,0.0224609375
1451487826460,0.02734375
1451487829143,0.02734375
1451487830107,0.02734375
1451487831794,0.02734375
1451487833369,0.029296875
1451487837604,0.0322265625
1451487839144,0.017578125
1451487842367,0.0302734375
1451487843614,0.017578125
1451487847367,0.017578125
1451487850046,0.0361328125
1451487851620,0.02734375
1451487855028,0.0283203125
1451487859145,0.029296875
1451487859683,0.029296875
1451487860913,0.01953125
1451487864406,0.029296875
1451487865642,0.01953125
1451487869198,0.029296875
1451487871951,0.0341796875
1451487875066,0.033203125
1451487879148,0.0263671875
1451487881882,0.029296875
1451487883210,0.0283203125
1451487886597,0.0263671875
1451487889690,0.025390625
1451487894288,0.03125
1451487895635,0.0322265625
1451487899507,0.029296875
1451487900743,0.0185546875
1451487904984,0.0263671875
1451487907674,0.017578125
1451487910739,0.02734375
1451487912561,0.017578125
1451487916053,0.0302734375
1451487917457,0.0224609375
1451487919634,0.0205078125
1451487920868,0.017578125
1451487925583,0.0322265625
1451487926821,0.0185546875
1451487930410,0.0302734375
1451487933872,0.03515625
1451487935368,0.021484375
1451487937089,0.0322265625
1451487939159,0.017578125
1451487941957,0.02734375
1451487943456,0.017578125
1451487946478,0.021484375
1451487949646,0.0283203125
1451487950894,0.0205078125
1451487954933,0.0302734375
1451487957994,0.0322265625
1451487959236,0.0234375
1451487962446,0.0341796875
1451487963694,0.017578125
1451487969543,0.017578125
1451487971350,0.017578125
1451487972586,0.0244140625
1451487975624,0.029296875
1451487976864,0.017578125
1451487980425,0.03125
1451487981661,0.0283203125
1451487985356,0.0263671875
1451487986596,0.017578125
1451487990114,0.0283203125
1451487993009,0.0283203125
1451487994255,0.025390625
1451487995507,0.0205078125
1451487999830,0.0263671875
1451488002584,0.033203125
1451488005634,0.025390625
1451488009165,0.0341796875
1451488009855,0.0283203125
1451488014428,0.0302734375
1451488015722,0.0205078125
1451488019166,0.0283203125
1451488019861,0.017578125
1451488022945,0.02734375
1451488024191,0.021484375
1451488030402,0.017578125
1451488031644,0.0322265625
1451488032886,0.017578125
1451488036645,0.0341796875
1451488039705,0.0322265625
1451488042586,0.03125
1451488046033,0.0361328125
1451488047275,0.017578125
1451488049171,0.017578125
1451488050373,0.041015625
1451488051609,0.017578125
1451488055014,0.0263671875
1451488056822,0.01953125
1451488059174,0.017578125
1451488061483,0.0283203125
1451488062729,0.0224609375
1451488065957,0.03515625
1451488067198,0.017578125
1451488071990,0.0322265625
1451488074973,0.033203125
1451488076905,0.025390625
1451488079861,0.02734375
1451488081112,0.0185546875
1451488084130,0.0234375
1451488085780,0.021484375
1451488090237,0.017578125
1451488094746,0.03125
1451488095988,0.029296875
1451488099284,0.02734375
1451488100530,0.017578125
1451488105477,0.03515625
1451488106721,0.01953125
1451488110354,0.025390625
1451488111860,0.0205078125
1451488114921,0.0361328125
1451488119179,0.0341796875
1451488120775,0.0302734375
1451488124218,0.03515625
1451488125462,0.0205078125
1451488129181,0.0302734375
1451488129471,0.017578125
1451488132961,0.0322265625
1451488134207,0.017578125
1451488138020,0.03515625
1451488141454,0.01953125
1451488142915,0.017578125
1451488144364,0.0283203125
1451488149187,0.017578125
1451488153102,0.0302734375
1451488155020,0.0244140625
1451488156789,0.0341796875
1451488159705,0.0341796875
1451488160953,0.017578125
1451488164592,0.0341796875
1451488166316,0.0302734375
1451488167562,0.017578125
1451488171429,0.029296875
1451488172669,0.017578125
1451488176931,0.0341796875
1451488180056,0.0322265625
1451488181296,0.017578125
1451488182538,0.017578125
1451488183778,0.0244140625
1451488185669,0.025390625
1451488186919,0.0185546875
1451488190878,0.02734375
1451488192158,0.017578125
1451488195913,0.025390625
1451488199457,0.0244140625
1451488201221,0.0283203125
1451488202466,0.0244140625
1451488206584,0.02734375
1451488209555,0.0205078125
1451488212279,0.0234375
1451488213883,0.029296875
1451488215134,0.0224609375
1451488219192,0.037109375
1451488219646,0.017578125
1451488223198,0.025390625
1451488224457,0.0224609375
1451488227547,0.0322265625
1451488229197,0.0322265625
1451488232926,0.029296875
1451488234282,0.0263671875
1451488237178,0.0341796875
1451488240381,0.0283203125
1451488243637,0.0283203125
1451488244917,0.0341796875
1451488249196,0.0283203125
1451488251469,0.0341796875
1451488254861,0.025390625
1451488258033,0.037109375
1451488259276,0.0205078125
1451488262484,0.029296875
1451488263726,0.0419921875
1451488269203,0.0234375
1451488272318,0.0283203125
1451488275232,0.0244140625
1451488276655,0.025390625
1451488277896,0.0205078125
1451488281397,0.03125
1451488284243,0.03125
1451488285551,0.03125
1451488289202,0.025390625
1451488292335,0.033203125
1451488295379,0.03125
1451488296626,0.017578125
1451488299936,0.033203125
1451488303114,0.0322265625
1451488304611,0.017578125
1451488308044,0.0322265625
1451488309275,0.017578125
1451488312967,0.03515625
1451488314332,0.0283203125
1451488317202,0.0322265625
1451488320307,0.0341796875
1451488321557,0.0244140625
1451488324281,0.0322265625
1451488325773,0.0205078125
1451488327022,0.02734375
1451488336077,0.0283203125
1451488340728,0.02734375
1451488343616,0.0380859375
1451488344856,0.017578125
1451488349209,0.0302734375
1451488351189,0.029296875
1451488352865,0.025390625
1451488356184,0.0390625
1451488359210,0.0322265625
1451488361074,0.0283203125
1451488363835,0.0361328125
1451488365077,0.01953125
1451488369214,0.029296875
1451488370038,0.0244140625
1451488371290,0.0224609375
1451488374156,0.03515625
1451488377275,0.03515625
1451488379214,0.017578125
1451488382388,0.029296875
1451488383632,0.0234375
1451488386794,0.0263671875
1451488389215,0.03515625
1451488392293,0.017578125
1451488394857,0.029296875
1451488396342,0.0380859375
1451488397580,0.017578125
1451488400464,0.02734375
1451488403447,0.0341796875
1451488404695,0.017578125
1451488407693,0.033203125
1451488409218,0.017578125
1451488413770,0.033203125
1451488419223,0.037109375
1451488419379,0.0322265625
1451488422164,0.0341796875
1451488425246,0.0361328125
1451488426488,0.0185546875
1451488429669,0.037109375
1451488432941,0.0283203125
1451488434189,0.017578125
1451488437636,0.0283203125
1451488440938,0.0302734375
1451488442184,0.0205078125
1451488446705,0.03125
1451488449979,0.0341796875
1451488452110,0.017578125
1451488453352,0.025390625
1451488454628,0.037109375
1451488459249,0.029296875
1451488459725,0.0205078125
1451488460969,0.017578125
1451488607809,0.02734375
1451488611427,0.037109375
1451488612141,0.0400390625
1451488615095,0.03515625
1451488618288,0.0234375
1451488621465,0.033203125
1451488622739,0.0205078125
1451488625911,0.041015625
1451488629816,0.0361328125
1451488631428,0.0244140625
1451488634747,0.0302734375
1451488638061,0.0263671875
1451488641430,0.0322265625
1451488642488,0.017578125
1451488647309,0.033203125
1451488648563,0.017578125
1451488653049,0.0283203125
1451488654381,0.0380859375
1451488656444,0.02734375
1451488658256,0.021484375
1451488662449,0.0380859375
1451488664355,0.01953125
1451488668334,0.0400390625
1451488671474,0.037109375
1451488672678,0.01953125
1451488676875,0.0341796875
1451488678129,0.017578125
1451488681825,0.0244140625
1451488683268,0.03125
1451488684514,0.0205078125
1451488687938,0.037109375
1451488689185,0.0185546875
1451488693423,0.0322265625
1451488694666,0.017578125
1451488699515,0.0380859375
1451488701436,0.017578125
1451488704331,0.03125
1451488705579,0.0234375
1451488708367,0.0361328125
1451488709638,0.017578125
1451488713022,0.0283203125
1451488714582,0.03125
1451488719101,0.0361328125
1451488722090,0.0283203125
1451488723320,0.03125
1451488725204,0.03515625
1451488728660,0.03125
1451488731961,0.025390625
1451488735237,0.0244140625
1451488736682,0.017578125
1451488741442,0.0361328125
1451488741774,0.017578125
1451488746361,0.03515625
1451488747595,0.03125
1451488751444,0.0361328125
1451488752406,0.0234375
1451488755294,0.0341796875
1451488757129,0.02734375
1451488760151,0.03125
1451488761447,0.0205078125
1451488764890,0.03515625
1451488767906,0.0302734375
1451488772217,0.0341796875
1451488773481,0.017578125
1451488775099,0.017578125
1451488776659,0.0341796875
1451488779732,0.0361328125
1451488781446,0.0302734375
1451488784341,0.017578125
1451488787541,0.0263671875
1451488791592,0.0244140625
1451488793162,0.0283203125
1451488796732,0.0302734375
1451488797975,0.017578125
1451488801451,0.0322265625
1451488804395,0.0322265625
1451488805632,0.017578125
1451488809024,0.0361328125
1451488810266,0.0205078125
1451488811520,0.01953125
1451488815393,0.0341796875
1451488818691,0.0283203125
1451488819978,0.017578125
1451488824440,0.029296875
1451488825688,0.017578125
1451488829915,0.0390625
1451488831530,0.0234375
1451488835870,0.0341796875
1451488837148,0.02734375
1451488840117,0.03125
1451488841839,0.029296875
1451488844925,0.017578125
1451488849014,0.0234375
1451488852447,0.037109375
1451488853691,0.017578125
1451488856935,0.017578125
1451488858169,0.01953125
1451488859728,0.0205078125
1451488863727,0.037109375
1451488866697,0.0380859375
1451488868001,0.0361328125
1451488869865,0.0283203125
1451488871459,0.017578125
1451488874118,0.0322265625
1451488875436,0.01953125
1451488878568,0.0263671875
1451488880064,0.029296875
1451488882189,0.0302734375
1451488885065,0.02734375
1451488887904,0.0322265625
1451488889144,0.0234375
1451488892068,0.03125
1451488893308,0.017578125
1451488896267,0.0361328125
1451488897517,0.017578125
1451488901566,0.0341796875
1451488902816,0.0224609375
1451488907122,0.017578125
1451488909681,0.0224609375
1451488913793,0.037109375
1451488915038,0.0302734375
1451488916280,0.029296875
1451488918716,0.025390625
1451488919966,0.0234375
1451488921465,0.0224609375
1451488922461,0.0244140625
1451488923895,0.0244140625
1451488925363,0.025390625
1451488926610,0.0234375
1451488929050,0.0380859375
1451488930284,0.0234375
1451488931526,0.0224609375
1451488932770,0.0224609375
1451488934012,0.025390625
1451488935255,0.0263671875
1451488936495,0.0263671875
1451488937745,0.0263671875
1451488938987,0.0234375
1451488940236,0.0224609375
1451488941486,0.0263671875
1451488942732,0.025390625
1451488945564,0.0263671875
1451488946820,0.0380859375
1451488948066,0.0234375
1451488949315,0.0263671875
1451488951743,0.0224609375
1451488952985,0.025390625
1451488954227,0.025390625
1451488955470,0.0234375
1451488956714,0.0234375
1451488957962,0.0224609375
1451488959225,0.0224609375
1451488961470,0.025390625
1451488961768,0.0263671875
1451488963019,0.0224609375
1451488964509,0.0224609375
1451488966597,0.0224609375
1451488968313,0.0234375
1451488969646,0.0224609375
1451488971472,0.0234375
1451488972130,0.0224609375
1451488973376,0.025390625
1451488974624,0.0263671875
1451488975872,0.0224609375
1451488977123,0.025390625
1451488978369,0.0234375
1451488979833,0.0234375
1451488981473,0.033203125
1451488982510,0.02734375
1451488983752,0.0234375
1451488985000,0.0224609375
1451488986238,0.0234375
1451488987485,0.0224609375
1451488988720,0.0234375
1451488989965,0.0224609375
1451488991475,0.02734375
1451488992439,0.0234375
1451488993691,0.0224609375
1451488994941,0.025390625
1451488996188,0.025390625
1451488997440,0.0224609375
1451488998690,0.0263671875
1451489000180,0.0244140625
1451489001585,0.0244140625
1451489002820,0.0234375
1451489004061,0.0234375
1451489005301,0.041015625
1451489006545,0.0244140625
1451489007789,0.0244140625
1451489009033,0.0224609375
1451489010273,0.0234375
1451489011514,0.0244140625
1451489012756,0.0244140625
1451489013998,0.0322265625
1451489015248,0.025390625
1451489016497,0.021484375
1451489017743,0.0224609375
1451489019161,0.025390625
1451489021481,0.0244140625
1451489021889,0.0302734375
1451489023131,0.0224609375
1451489024376,0.0224609375
1451489026312,0.0263671875
1451489027556,0.025390625
1451489029542,0.0263671875
1451489031491,0.025390625
1451489032039,0.0224609375
1451489033283,0.0234375
1451489034619,0.0224609375
1451489036103,0.0283203125
1451489037368,0.0224609375
1451489038606,0.0244140625
1451489039850,0.0244140625
1451489041482,0.0244140625
1451489042336,0.0234375
1451489043578,0.0263671875
1451489044821,0.025390625
1451489046061,0.0263671875
1451489047305,0.0263671875
1451489048549,0.0263671875
1451489049791,0.029296875
1451489051040,0.025390625
1451489052290,0.0263671875
1451489054818,0.0263671875
1451489056305,0.0224609375
1451489057554,0.0234375
1451489058789,0.025390625
1451489060035,0.0263671875
1451489061495,0.025390625
1451489062519,0.025390625
1451489063759,0.025390625
1451489065005,0.0263671875
1451489066244,0.025390625
1451489067482,0.025390625
1451489068730,0.025390625
1451489070040,0.03125
1451489071485,0.0224609375
1451489072487,0.0244140625
1451489073731,0.02734375
1451489075235,0.0224609375
1451489076663,0.0263671875
1451489077902,0.0244140625
1451489079146,0.0244140625
1451489081486,0.0234375
1451489081630,0.0224609375
1451489082862,0.0263671875
1451489084108,0.025390625
1451489085353,0.0263671875
1451489087029,0.0263671875
1451489088285,0.0244140625
1451489090305,0.0234375
1451489092273,0.0224609375
1451489093538,0.025390625
1451489094784,0.0244140625
1451489096026,0.0244140625
1451489097270,0.0244140625
1451489098510,0.033203125
1451489099755,0.0263671875
1451489101489,0.025390625
1451489102243,0.025390625
1451489103483,0.0224609375
1451489104729,0.0224609375
1451489105985,0.0263671875
1451489107232,0.0244140625
1451489108478,0.0234375
1451489109722,0.021484375
1451489111490,0.0263671875
1451489112507,0.041015625
1451489113845,0.0224609375
1451489115077,0.0224609375
1451489116323,0.02734375
1451489117565,0.0224609375
1451489118808,0.0224609375
1451489120052,0.0361328125
1451489121502,0.041015625
1451489122538,0.021484375
1451489123778,0.021484375
1451489125022,0.0234375
1451489126265,0.0244140625
1451489127515,0.0234375
1451489128763,0.021484375
1451489130009,0.0224609375
1451489131493,0.025390625
1451489132899,0.0234375
1451489135344,0.0224609375
1451489136586,0.0224609375
1451489137830,0.0234375
1451489139070,0.0244140625
1451489140314,0.0234375
1451489141557,0.0263671875
1451489142797,0.025390625
1451489144037,0.0224609375
1451489145293,0.0263671875
1451489147231,0.017578125
1451489148872,0.0302734375
1451489151904,0.017578125
1451489154317,0.0341796875
1451489155561,0.0244140625
1451489160216,0.0322265625
1451489163698,0.029296875
1451489165460,0.0263671875
1451489166867,0.0283203125
1451489168111,0.03125
1451489171609,0.0361328125
1451489172854,0.017578125
1451489176984,0.0283203125
1451489180053,0.029296875
1451489181831,0.02734375
1451489183745,0.0380859375
1451489184983,0.0185546875
1451489188562,0.0283203125
1451489189804,0.017578125
1451489194280,0.033203125
1451489197853,0.0390625
1451489199099,0.017578125
1451489202062,0.033203125
1451489205788,0.029296875
1451489209041,0.025390625
1451489211515,0.0224609375
1451489214783,0.0400390625
1451489216610,0.029296875
1451489219925,0.0283203125
1451489223131,0.0302734375
1451489226307,0.033203125
1451489228840,0.033203125
1451489231822,0.0263671875
1451489236183,0.029296875
1451489237923,0.0283203125
1451489241515,0.033203125
1451489244470,0.0283203125
1451489245712,0.01953125
1451489248997,0.037109375
1451489253711,0.029296875
1451489254953,0.0283203125
1451489258512,0.02734375
1451489261796,0.0322265625
1451489263044,0.017578125
1451489266773,0.041015625
1451489271822,0.017578125
1451489273912,0.017578125
1451489276689,0.03515625
1451489277935,0.017578125
1451489281833,0.0341796875
1451489286234,0.03125
1451489289387,0.033203125
1451489291515,0.025390625
1451489292136,0.017578125
1451489295421,0.0263671875
1451489297048,0.0234375
1451489301522,0.03125
1451489302128,0.0205078125
1451489306083,0.0302734375
1451489307325,0.0185546875
1451489311516,0.0341796875
1451489312442,0.017578125
1451489316860,0.03125
1451489320201,0.03125
1451489323309,0.0302734375
1451489325338,0.0244140625
1451489329588,0.03125
1451489332699,0.0361328125
1451489333951,0.0302734375
1451489335241,0.0263671875
1451489339072,0.0302734375
1451489342160,0.02734375
1451489345056,0.0322265625
1451489346305,0.017578125
1451489348665,0.0185546875
1451489350389,0.0224609375
1451489352001,0.0244140625
1451489356098,0.0234375
1451489359095,0.033203125
1451489361529,0.03125
1451489361863,0.0224609375
1451489363105,0.029296875
1451489366338,0.029296875
1451489367588,0.0234375
1451489371524,0.03125
1451489372771,0.0263671875
1451489376391,0.0302734375
1451489379676,0.0302734375
1451489382496,0.0322265625
1451489383734,0.017578125
1451489387093,0.033203125
1451489389353,0.025390625
1451489392641,0.037109375
1451489393890,0.0302734375
1451489396912,0.0234375
1451489398664,0.025390625
1451489400163,0.017578125
1451489403283,0.02734375
1451489408768,0.03125
1451489410008,0.017578125
1451489415307,0.03125
1451489417109,0.0234375
1451489418679,0.0234375
1451489419929,0.0244140625
1451489421536,0.017578125
1451489425178,0.0302734375
1451489428289,0.0302734375
1451489431531,0.0205078125
1451489434154,0.0224609375
1451489435880,0.0263671875
1451489437122,0.0224609375
1451489442009,0.0302734375
1451489444819,0.0234375
1451489446731,0.0263671875
1451489447966,0.021484375
1451489450610,0.0322265625
1451489453601,0.01953125
1451489454861,0.0322265625
1451489456699,0.0322265625
1451489458783,0.0322265625
1451489460025,0.0185546875
1451489463602,0.033203125
1451489466710,0.0283203125
1451489469459,0.0263671875
1451489471263,0.0244140625
1451489474840,0.033203125
1451489477558,0.0244140625
1451489479162,0.029296875
1451489484323,0.02734375
1451489486089,0.0234375
1451489490148,0.0244140625
1451489492062,0.0224609375
1451489494056,0.0234375
1451489496905,0.025390625
1451489498179,0.033203125
1451489499421,0.017578125
1451489503608,0.0322265625
1451489506464,0.02734375
1451489507723,0.0302734375
1451489511199,0.0263671875
1451489515677,0.029296875
1451489517184,0.0302734375
1451489519060,0.03515625
1451489520302,0.017578125
1451489524221,0.03125
1451489525479,0.0244140625
1451489529106,0.03125
1451489533612,0.0341796875
1451489534130,0.0263671875
1451489535380,0.017578125
1451489539081,0.0234375
1451489542455,0.0244140625
1451489543688,0.017578125
1451489547904,0.029296875
1451489549146,0.0244140625
1451489553615,0.025390625
1451489553949,0.0244140625
1451489557009,0.0283203125
1451489560636,0.0322265625
1451489561882,0.017578125
1451489566247,0.0263671875
1451489567491,0.017578125
1451489571456,0.017578125
1451489574744,0.029296875
1451489576409,0.025390625
1451489580153,0.0302734375
1451489581397,0.0361328125
1451489584890,0.0263671875
1451489586140,0.0185546875
1451489590611,0.029296875
1451489591857,0.017578125
1451489595499,0.0205078125
1451489597287,0.0224609375
1451489598521,0.01953125
1451489601795,0.0341796875
1451489603620,0.0244140625
1451489604293,0.0244140625
1451489608777,0.0302734375
1451489612003,0.03125
1451489613624,0.017578125
1451489617751,0.03125
1451489620879,0.029296875
1451489624187,0.0263671875
1451489628704,0.0341796875
1451489630403,0.0302734375
1451489634829,0.03125
1451489636115,0.0302734375
1451489639582,0.033203125
1451489643626,0.025390625
1451489646171,0.0244140625
1451489648065,0.03125
1451489650827,0.0224609375
1451489654164,0.0283203125
1451489658956,0.03125
1451489661929,0.03125
1451489663627,0.0322265625
1451489666562,0.0322265625
1451489668202,0.0263671875
1451489669446,0.017578125
1451489673629,0.0302734375
1451489674201,0.033203125
1451489678629,0.033203125
1451489679876,0.021484375
1451489683630,0.0263671875
1451489684290,0.017578125
1451489687211,0.0263671875
1451489688453,0.017578125
1451489693634,0.0302734375
1451489697688,0.0302734375
1451489698938,0.0185546875
1451489700182,0.017578125
1451489704645,0.0341796875
1451489708644,0.021484375
1451489711916,0.0283203125
1451489715673,0.033203125
1451489716916,0.017578125
1451489720944,0.025390625
1451489722186,0.017578125
1451489726362,0.029296875
1451489727602,0.0185546875
1451489731754,0.02734375
1451489734835,0.02734375
1451489738016,0.0341796875
1451489741472,0.025390625
1451489745469,0.02734375
1451489746703,0.033203125
1451489751226,0.017578125
1451489754946,0.033203125
1451489759591,0.02734375
1451489760837,0.017578125
1451489764624,0.03125
1451489765952,0.017578125
1451489769977,0.0234375
1451489771523,0.0263671875
1451489774965,0.029296875
1451489776206,0.017578125
1451489779278,0.03125
1451489782466,0.0263671875
1451489783709,0.017578125
1451489788488,0.037109375
1451489789737,0.0234375
1451489793646,0.033203125
1451489796056,0.033203125
1451489799249,0.02734375
1451489803650,0.03515625
1451489803986,0.017578125
1451489807548,0.03125
1451489808790,0.0224609375
1451489811843,0.03125
1451489815043,0.0234375
1451489816535,0.0380859375
1451489820174,0.0322265625
1451489821616,0.0322265625
1451489824735,0.0224609375
1451489828467,0.02734375
1451489829709,0.0205078125
1451489833652,0.03125
1451489834474,0.0361328125
1451489837686,0.0302734375
1451489838960,0.0244140625
1451489840199,0.017578125
1451489843791,0.0302734375
1451489845708,0.025390625
1451489846956,0.037109375
1451489850176,0.025390625
1451489853939,0.0234375
1451489857759,0.0302734375
1451489859000,0.017578125
1451489861822,0.0341796875
1451489863696,0.025390625
1451489864933,0.03125
1451489869529,0.0380859375
1451489870763,0.017578125
1451489875592,0.017578125
1451489879485,0.0244140625
1451489880735,0.029296875
1451489882266,0.0322265625
1451489883657,0.025390625
1451489886710,0.03125
1451489890112,0.029296875
1451489891353,0.017578125
1451489895895,0.0341796875
1451489897139,0.017578125
1451489900016,0.0283203125
1451489901268,0.029296875
1451489906627,0.0322265625
1451489908515,0.0224609375
1451489911389,0.0234375
1451489913660,0.02734375
1451489914392,0.0302734375
1451489918555,0.03125
1451489919791,0.03125
1451489923666,0.0263671875
1451489926120,0.0234375
1451489927362,0.017578125
1451489931026,0.0302734375
1451489933669,0.0380859375
1451489934547,0.0185546875
1451489936771,0.017578125
1451489938553,0.0263671875
1451489939797,0.0185546875
1451489941030,0.017578125
1451489944552,0.033203125
1451489945793,0.017578125
1451489948973,0.0322265625
1451489950211,0.01953125
1451489954816,0.0244140625
1451489957794,0.0302734375
1451489963667,0.029296875
1451489964297,0.017578125
1451489967790,0.0283203125
1451489970380,0.037109375
1451489971620,0.017578125
1451489974298,0.03515625
1451489975539,0.01953125
1451489979254,0.033203125
1451489980567,0.02734375
1451489983698,0.0283203125
1451489985168,0.03515625
1451489986416,0.0205078125
1451489989839,0.029296875
1451489993884,0.0224609375
1451489997356,0.037109375
1451489998842,0.0302734375
1451490000084,0.0185546875
1451490003683,0.0341796875
1451490004751,0.0283203125
1451490007709,0.029296875
1451490010710,0.025390625
1451490011958,0.0244140625
1451490015185,0.033203125
1451490018277,0.0283203125
1451490019549,0.0185546875
1451490022522,0.029296875
1451490023748,0.017578125
1451490029091,0.03125
1451490030639,0.0302734375
1451490032487,0.033203125
1451490033937,0.02734375
1451490035185,0.0185546875
1451490038288,0.03125
1451490039532,0.017578125
1451490042420,0.0302734375
1451490046169,0.0244140625
1451490047939,0.01953125
1451490051664,0.0322265625
1451490054880,0.033203125
1451490056114,0.025390625
1451490059653,0.0283203125
1451490061272,0.025390625
1451490063690,0.02734375
1451490064511,0.021484375
1451490066512,0.025390625
1451490067990,0.0205078125
1451490070715,0.033203125
1451490071957,0.0205078125
1451490075251,0.029296875
1451490076594,0.0283203125
1451490080902,0.03125
1451490083917,0.02734375
1451490086919,0.0361328125
1451490090240,0.03125
1451490091488,0.02734375
1451490096149,0.029296875
1451490097607,0.017578125
1451490101897,0.03125
1451490103685,0.017578125
1451490108170,0.03125
1451490109412,0.0205078125
1451490114249,0.017578125
1451490115746,0.0302734375
1451490118796,0.03515625
1451490120076,0.0400390625
1451490121532,0.017578125
1451490126147,0.0322265625
1451490127391,0.0244140625
1451490130434,0.037109375
1451490131670,0.017578125
1451490135170,0.0283203125
1451490138147,0.0302734375
1451490139389,0.021484375
1451490142301,0.0302734375
1451490145734,0.02734375
1451490147714,0.0322265625
1451490149252,0.02734375
1451490150496,0.017578125
1451490154271,0.0244140625
1451490158497,0.029296875
1451490159740,0.01953125
1451490164076,0.033203125
1451490165318,0.017578125
1451490169479,0.0302734375
1451490174010,0.017578125
1451490175868,0.02734375
1451490178214,0.017578125
1451490182527,0.0322265625
1451490183761,0.029296875
1451490186650,0.033203125
1451490187892,0.017578125
1451490191194,0.033203125
1451490194669,0.0302734375
1451490198055,0.0361328125
1451490199297,0.017578125
1451490203946,0.037109375
1451490205194,0.0185546875
1451490208687,0.0341796875
1451490209973,0.017578125
1451490213705,0.0234375
1451490214858,0.021484375
1451490216476,0.033203125
1451490220911,0.025390625
1451490222153,0.017578125
1451490226537,0.03125
1451490227778,0.017578125
1451490232420,0.0341796875
1451490237567,0.025390625
1451490239400,0.017578125
1451490242138,0.025390625
1451490243710,0.017578125
1451490247799,0.0283203125
1451490250183,0.0341796875
1451490251423,0.0302734375
1451490255692,0.0341796875
1451490259947,0.025390625
1451490261189,0.0244140625
1451490264995,0.037109375
1451490268531,0.0283203125
1451490270014,0.0302734375
1451490271880,0.025390625
1451490273713,0.029296875
1451490277107,0.037109375
1451490278361,0.0361328125
1451490281445,0.0322265625
1451490283708,0.017578125
1451490285908,0.0341796875
1451490287150,0.041015625
1451490288647,0.0205078125
1451490290319,0.0283203125
1451490291641,0.025390625
1451490295356,0.017578125
1451490299170,0.03125
1451490302212,0.03125
1451490303717,0.029296875
1451490304791,0.0205078125
1451490308226,0.03125
1451490309466,0.017578125
1451490311568,0.01953125
1451490313952,0.03125
1451490315200,0.0380859375
1451490318519,0.0302734375
1451490321537,0.0283203125
1451490325230,0.02734375
1451490326586,0.03125
1451490329346,0.0341796875
1451490330665,0.033203125
1451490333727,0.0361328125
1451490334963,0.0185546875
1451490338684,0.029296875
1451490339940,0.0341796875
1451490343716,0.029296875
1451490344677,0.0224609375
1451490347759,0.03125
1451490349221,0.017578125
1451490353975,0.029296875
1451490358075,0.017578125
1451490361135,0.0302734375
1451490363723,0.03125
1451490364216,0.017578125
1451490367236,0.02734375
1451490370388,0.0322265625
1451490371795,0.03125
1451490375371,0.0263671875
1451490376663,0.017578125
1451490380870,0.0322265625
1451490382114,0.017578125
1451490385537,0.03515625
1451490388785,0.0302734375
1451490390025,0.029296875
1451490393726,0.03125
1451490394078,0.0185546875
1451490397517,0.03125
1451490401056,0.0341796875
1451490402299,0.017578125
1451490405796,0.0302734375
1451490408648,0.025390625
1451490410424,0.02734375
1451490412271,0.03515625
1451490415641,0.0283203125
1451490416993,0.0283203125
1451490418821,0.017578125
1451490423730,0.0341796875
1451490426485,0.02734375
1451490427965,0.017578125
1451490431998,0.0341796875
1451490434924,0.0322265625
1451490436582,0.0341796875
1451490437920,0.0380859375
1451490439162,0.0185546875
1451490443729,0.0341796875
1451490446600,0.0361328125
1451490450950,0.0322265625
1451490452361,0.03125
1451490456437,0.02734375
1451490457681,0.0234375
1451490461426,0.0361328125
1451490463732,0.0185546875
1451490466554,0.033203125
1451490467789,0.01953125
1451490470637,0.0322265625
1451490473734,0.037109375
1451490475532,0.0185546875
1451490477370,0.03125
1451490479386,0.017578125
1451490480945,0.0322265625
1451490485711,0.03125
1451490488732,0.033203125
1451490489974,0.017578125
1451490493778,0.02734375
1451490494685,0.017578125
1451490498883,0.0341796875
1451490502390,0.037109375
1451490505272,0.0390625
1451490506525,0.0283203125
1451490509741,0.033203125
1451490513740,0.037109375
1451490516649,0.0234375
1451490518122,0.017578125
1451490520668,0.03125
1451490522347,0.02734375
1451490523743,0.0205078125
1451490528674,0.0341796875
1451490531312,0.0302734375
1451490532550,0.0234375
1451490536265,0.017578125
1451490540863,0.0283203125
1451490542322,0.017578125
1451490544628,0.02734375
1451490548282,0.0361328125
1451490549529,0.017578125
1451490553743,0.0283203125
1451490554449,0.025390625
1451490558766,0.0283203125
1451490560007,0.01953125
1451490564325,0.03125
1451490565575,0.0185546875
1451490568188,0.029296875
1451490571660,0.029296875
1451490575811,0.0302734375
1451490577301,0.0234375
1451490581311,0.03125
1451490584368,0.03515625
1451490585608,0.017578125
1451490589133,0.0322265625
1451490590373,0.017578125
1451490596116,0.03125
1451490597556,0.029296875
1451490600484,0.0185546875
1451490604133,0.03125
1451490607421,0.029296875
1451490608661,0.0234375
1451490611664,0.0283203125
1451490613752,0.029296875
1451490615578,0.03125
1451490618783,0.0283203125
1451490620031,0.017578125
1451490624350,0.0302734375
1451490625596,0.0244140625
1451490629222,0.03515625
1451490630695,0.017578125
1451490633987,0.025390625
1451490636827,0.0263671875
1451490638162,0.0244140625
1451490640308,0.0390625
1451490641548,0.025390625
1451490643755,0.017578125
1451490645931,0.0390625
1451490647817,0.0322265625
1451490649472,0.0341796875
1451490650728,0.017578125
1451490653780,0.0263671875
1451490655028,0.029296875
1451490658355,0.017578125
1451490661271,0.037109375
1451490662511,0.017578125
1451490667052,0.029296875
1451490669916,0.03515625
1451490671607,0.0380859375
1451490673759,0.0263671875
1451490676153,0.0380859375
1451490679587,0.0283203125
1451490680828,0.03515625
1451490684853,0.0322265625
1451490687933,0.029296875
1451490689293,0.0322265625
1451490690975,0.0322265625
1451490693762,0.0380859375
1451490697382,0.0361328125
1451490698707,0.017578125
1451490702299,0.033203125
1451490703768,0.0263671875
1451490704784,0.017578125
1451490708268,0.0224609375
1451490713806,0.0263671875
1451490717383,0.017578125
1451490722094,0.017578125
1451490724828,0.037109375
1451490726125,0.0263671875
1451490728903,0.029296875
1451490730147,0.0185546875
1451490734224,0.0361328125
1451490736850,0.03515625
1451490741123,0.02734375
1451490744277,0.0302734375
1451490746954,0.03515625
1451490748198,0.0205078125
1451490752156,0.029296875
1451490753769,0.0302734375
1451490757341,0.03125
1451490758581,0.017578125
1451490762406,0.0283203125
1451490765346,0.03515625
1451490766590,0.029296875
1451490770290,0.017578125
1451490771775,0.0380859375
1451490773772,0.025390625
1451490774496,0.02734375
1451490775740,0.0244140625
1451490778110,0.0244140625
1451490779342,0.0244140625
1451490781327,0.0263671875
1451490783807,0.02734375
1451490785013,0.0263671875
1451490786260,0.0244140625
1451490787532,0.0234375
1451490789026,0.0244140625
1451490790326,0.0244140625
1451490791560,0.029296875
1451490793774,0.0263671875
1451490794085,0.0234375
1451490795327,0.0244140625
1451490796565,0.0234375
1451490797806,0.0234375
1451490799049,0.0234375
1451490800292,0.0224609375
1451490801534,0.0224609375
1451490803776,0.0263671875
1451490804082,0.0224609375
1451490805328,0.0263671875
1451490806578,0.0224609375
1451490807864,0.0263671875
1451490809355,0.0263671875
1451490810685,0.0234375
1451490811922,0.0224609375
1451490813777,0.0244140625
1451490814410,0.0263671875
1451490815652,0.0263671875
1451490816898,0.0244140625
1451490818143,0.0224609375
1451490819380,0.0234375
1451490820620,0.0234375
1451490821867,0.0224609375
1451490823779,0.0419921875
1451490824363,0.0234375
1451490825611,0.0224609375
1451490826856,0.0302734375
1451490828316,0.0244140625
1451490829774,0.0224609375
1451490831024,0.0234375
1451490832266,0.0234375
1451490833780,0.0234375
1451490834741,0.0263671875
1451490835981,0.025390625
1451490837675,0.0263671875
1451490838915,0.0234375
1451490840187,0.0234375
1451490842018,0.0234375
1451490843782,0.0234375
1451490844829,0.025390625
1451490846082,0.0263671875
1451490847322,0.0234375
1451490848571,0.0400390625
1451490849813,0.0263671875
1451490851060,0.0263671875
1451490852295,0.0234375
1451490853783,0.0224609375
1451490854776,0.0263671875
1451490856018,0.025390625
1451490858456,0.0244140625
1451490859704,0.0234375
1451490860948,0.0234375
1451490862197,0.0283203125
1451490863785,0.0263671875
1451490864973,0.0263671875
1451490866329,0.0263671875
1451490867565,0.0234375
1451490868806,0.0244140625
1451490870050,0.025390625
1451490871290,0.025390625
1451490873786,0.025390625
1451490874954,0.02734375
1451490876197,0.0244140625
1451490877437,0.0224609375
1451490878679,0.033203125
1451490879929,0.0263671875
1451490881173,0.0234375
1451490882418,0.025390625
1451490883788,0.0244140625
1451490885272,0.025390625
1451490886524,0.025390625
1451490887766,0.03125
1451490889012,0.0244140625
1451490890254,0.025390625
1451490891497,0.025390625
1451490893787,0.0302734375
1451490894027,0.0263671875
1451490895269,0.0263671875
1451490896512,0.0302734375
1451490898542,0.0390625
1451490899792,0.0244140625
1451490902279,0.0244140625
1451490904067,0.0263671875
1451490905311,0.025390625
1451490906555,0.0263671875
1451490907797,0.0263671875
1451490909039,0.02734375
1451490910274,0.025390625
1451490911522,0.0244140625
1451490913793,0.0244140625
1451490914046,0.025390625
1451490915294,0.025390625
1451490916545,0.025390625
1451490917789,0.0234375
1451490919035,0.0234375
1451490920311,0.0224609375
1451490921805,0.02734375
1451490923792,0.0234375
1451490924372,0.025390625
1451490925612,0.0263671875
1451490926856,0.0263671875
1451490928098,0.02734375
1451490929344,0.025390625
1451490930589,0.0263671875
1451490931829,0.02734375
1451490933797,0.0263671875
1451490934315,0.0244140625
1451490935557,0.0224609375
1451490936808,0.0224609375
1451490938056,0.0263671875
1451490939302,0.0322265625
1451490940732,0.02734375
1451490942204,0.0234375
1451490943795,0.0224609375
1451490945887,0.0224609375
1451490947131,0.0224609375
1451490948369,0.0234375
1451490949613,0.0244140625
1451490950855,0.0390625
1451490952096,0.0419921875
1451490953796,0.0244140625
1451490954590,0.0263671875
1451490955840,0.0263671875
1451490957085,0.0234375
1451490959043,0.0263671875
1451490960679,0.0234375
1451490962599,0.0400390625
1451490963832,0.025390625
1451490965074,0.0263671875
1451490966317,0.025390625
1451490967554,0.025390625
1451490968794,0.0244140625
1451490970036,0.025390625
1451490971284,0.025390625
1451490972535,0.0244140625
1451490974974,0.0224609375
1451490976227,0.0263671875
1451490979076,0.0244140625
1451490980326,0.0234375
1451490981568,0.0244140625
1451490984001,0.0224609375
1451490985241,0.0234375
1451490986487,0.0244140625
1451490987727,0.025390625
1451490988966,0.0390625
1451490990207,0.0224609375
1451490991471,0.0224609375
1451490993802,0.0234375
1451490993954,0.025390625
1451490995202,0.0263671875
1451490996450,0.025390625
1451490997939,0.025390625
1451491000549,0.0234375
1451491001791,0.025390625
1451491003803,0.017578125
1451491005634,0.025390625
1451491008416,0.0302734375
1451491009657,0.017578125
1451491014197,0.0341796875
1451491017523,0.033203125
1451491019592,0.0263671875
1451491024524,0.017578125
1451491025854,0.033203125
1451491027529,0.03125
1451491030949,0.0400390625
1451491034412,0.0302734375
1451491035670,0.0341796875
1451491039742,0.0390625
1451491044118,0.0283203125
1451491045365,0.0185546875
1451491049186,0.037109375
1451491053810,0.0283203125
1451491058041,0.0361328125
1451491059739,0.0341796875
1451491060988,0.0185546875
1451491064802,0.03515625
1451491066045,0.017578125
1451491069999,0.0341796875
1451491073983,0.03515625
1451491076346,0.03515625
1451491077770,0.021484375
1451491080304,0.025390625
1451491085005,0.03125
1451491088296,0.0341796875
1451491093817,0.033203125
1451491094122,0.0380859375
1451491097245,0.0380859375
1451491098489,0.017578125
1451491102616,0.0302734375
1451491103897,0.0244140625
1451491108771,0.0263671875
1451491110785,0.0244140625
1451491112107,0.017578125
1451491115570,0.0302734375
1451491118040,0.03515625
1451491120502,0.0380859375
1451491121777,0.0234375
1451491126956,0.037109375
1451491128700,0.033203125
1451491131570,0.0322265625
1451491133820,0.0302734375
1451491136951,0.029296875
1451491140713,0.021484375
1451491143958,0.0263671875
1451491149249,0.0322265625
1451491152603,0.03515625
1451491153843,0.017578125
1451491156890,0.0322265625
1451491158142,0.0361328125
1451491161365,0.0341796875
1451491162609,0.017578125
1451491167137,0.029296875
1451491171227,0.029296875
1451491173824,0.0341796875
1451491174882,0.0205078125
1451491179041,0.03125
1451491181955,0.0302734375
1451491183826,0.017578125
1451491187466,0.0361328125
1451491190620,0.0361328125
1451491191871,0.017578125
1451491195391,0.0302734375
1451491198430,0.0341796875
1451491201205,0.03515625
1451491202436,0.02734375
1451491206359,0.033203125
1451491210271,0.0283203125
1451491211516,0.021484375
1451491214580,0.0234375
1451491217896,0.0263671875
1451491221211,0.0302734375
1451491224336,0.0244140625
1451491229108,0.0322265625
1451491230350,0.017578125
1451491233831,0.0322265625
1451491234997,0.017578125
1451491238962,0.0283203125
1451491241680,0.033203125
1451491244613,0.0263671875
1451491246474,0.0380859375
1451491247719,0.0234375
1451491251192,0.025390625
1451491252442,0.0263671875
1451491257286,0.0244140625
1451491258869,0.0361328125
1451491264171,0.017578125
1451491269498,0.0341796875
1451491270789,0.0390625
1451491274177,0.033203125
1451491275421,0.021484375
1451491278085,0.0263671875
1451491279994,0.025390625
1451491283838,0.0283203125
1451491286987,0.0322265625
1451491288983,0.029296875
1451491292510,0.0263671875
1451491293840,0.0244140625
1451491297114,0.0341796875
1451491301297,0.037109375
1451491302537,0.0322265625
1451491304117,0.0390625
1451491306859,0.03125
1451491311623,0.0380859375
1451491315413,0.0322265625
1451491316649,0.0224609375
1451491321468,0.033203125
1451491324490,0.017578125
1451491325730,0.0234375
1451491326990,0.017578125
1451491332183,0.033203125
1451491333847,0.017578125
1451491337418,0.037109375
1451491339147,0.03125
1451491340393,0.0263671875
1451491344809,0.0302734375
1451491348162,0.033203125
1451491349392,0.01953125
1451491352466,0.0263671875
1451491355265,0.03125
1451491356715,0.029296875
1451491357957,0.02734375
1451491361338,0.03125
1451491362584,0.017578125
1451491367280,0.03125
1451491370497,0.0244140625
1451491372087,0.041015625
1451491376978,0.03515625
1451491380406,0.0283203125
1451491382184,0.017578125
1451491386049,0.0322265625
1451491387297,0.025390625
1451491388549,0.017578125
1451491393884,0.025390625
1451491396087,0.0341796875
1451491399999,0.0322265625
1451491401534,0.0185546875
1451491404442,0.0283203125
1451491408096,0.0322265625
1451491410775,0.0322265625
1451491412283,0.0263671875
1451491415484,0.03125
1451491417692,0.0263671875
1451491419014,0.025390625
1451491422168,0.0283203125
1451491423883,0.0263671875
1451491428363,0.03125
1451491429848,0.029296875
1451491431102,0.0283203125
1451491434606,0.029296875
1451491438259,0.037109375
1451491442332,0.03125
1451491444396,0.0263671875
1451491449208,0.0263671875
1451491450463,0.017578125
1451491453929,0.0322265625
1451491455169,0.021484375
1451491459044,0.0361328125
1451491460288,0.0185546875
1451491464261,0.033203125
1451491465503,0.017578125
1451491468983,0.0302734375
1451491470225,0.0185546875
1451491473862,0.0263671875
1451491474888,0.021484375
1451491477819,0.0283203125
1451491483865,0.021484375
1451491487660,0.03515625
1451491493867,0.03125
1451491494741,0.02734375
1451491495983,0.0185546875
1451491499100,0.0224609375
1451491503870,0.017578125
1451491504763,0.021484375
1451491507697,0.017578125
1451491511533,0.03515625
1451491514722,0.033203125
1451491516398,0.0263671875
1451491517640,0.0224609375
1451491520747,0.0322265625
1451491521985,0.0205078125
1451491528502,0.0263671875
1451491529750,0.017578125
1451491534161,0.0302734375
1451491537112,0.0302734375
1451491539287,0.0263671875
1451491542632,0.029296875
1451491546081,0.029296875
1451491547327,0.0302734375
1451491550727,0.0283203125
1451491551972,0.0205078125
1451491555356,0.0322265625
1451491559797,0.029296875
1451491561077,0.0283203125
1451491566130,0.017578125
1451491569678,0.0302734375
1451491570920,0.01953125
1451491573937,0.0234375
1451491575177,0.0185546875
1451491579034,0.033203125
1451491580277,0.0263671875
1451491584034,0.029296875
1451491586719,0.0205078125
1451491588447,0.0263671875
1451491589695,0.0185546875
1451491594086,0.0322265625
1451491600233,0.029296875
1451491604155,0.033203125
1451491605536,0.033203125
1451491607702,0.025390625
1451491610146,0.0302734375
1451491611858,0.0263671875
1451491613883,0.017578125
1451491615877,0.033203125
1451491617122,0.0185546875
1451491620890,0.0283203125
1451491626212,0.0283203125
1451491627981,0.0361328125
1451491630895,0.029296875
1451491632139,0.017578125
1451491635426,0.0322265625
1451491636668,0.0341796875
1451491639896,0.033203125
1451491641147,0.017578125
1451491644921,0.03125
1451491646967,0.0302734375
1451491650868,0.0244140625
1451491655371,0.0302734375
1451491658443,0.02734375
1451491659691,0.0244140625
1451491661145,0.017578125
1451491663888,0.0361328125
1451491664960,0.0224609375
1451491669369,0.037109375
1451491672625,0.0244140625
1451491673889,0.017578125
1451491677804,0.0322265625
1451491679082,0.017578125
1451491681901,0.0234375
1451491685237,0.041015625
1451491689322,0.017578125
1451491692564,0.033203125
1451491696309,0.03515625
1451491698971,0.0302734375
1451491700221,0.0302734375
1451491703894,0.033203125
1451491707038,0.0380859375
1451491709024,0.025390625
1451491712611,0.033203125
1451491713897,0.037109375
1451491715334,0.0283203125
1451491716518,0.017578125
1451491720074,0.0322265625
1451491722347,0.0380859375
1451491725723,0.0341796875
1451491729184,0.0263671875
1451491732386,0.0322265625
1451491733954,0.017578125
1451491736197,0.029296875
1451491740015,0.037109375
1451491744032,0.029296875
1451491748524,0.017578125
1451491753899,0.03125
1451491754458,0.017578125
1451491755699,0.0185546875
1451491760110,0.0361328125
1451491761358,0.0244140625
1451491764839,0.02734375
1451491768981,0.0302734375
1451491771046,0.0263671875
1451491773902,0.03515625
1451491774226,0.029296875
1451491779119,0.033203125
1451491780369,0.017578125
1451491783922,0.033203125
1451491784752,0.0205078125
1451491785982,0.0263671875
1451491789428,0.02734375
1451491790757,0.017578125
1451491795505,0.0302734375
1451491800464,0.0361328125
1451491801710,0.017578125
1451491805083,0.017578125
1451491808851,0.017578125
1451491813918,0.0302734375
1451491815464,0.0244140625
1451491818379,0.0322265625
1451491820973,0.03125
1451491823915,0.021484375
1451491824755,0.0205078125
1451491827938,0.03515625
1451491833911,0.0390625
1451491835095,0.017578125
1451491837869,0.0390625
1451491839112,0.017578125
1451491842360,0.0283203125
1451491845089,0.025390625
1451491848387,0.0322265625
1451491850733,0.0302734375
1451491853922,0.0361328125
1451491857454,0.0390625
1451491858691,0.0224609375
1451491861987,0.0361328125
1451491864915,0.0302734375
1451491867836,0.01953125
1451491871262,0.0341796875
1451491875011,0.02734375
1451491878876,0.0283203125
1451491881816,0.025390625
1451491886903,0.0322265625
1451491890236,0.0322265625
1451491891477,0.0244140625
1451491895874,0.03515625
1451491898398,0.0302734375
1451491900309,0.0322265625
1451491901555,0.0322265625
1451491904477,0.0263671875
1451491905722,0.017578125
1451491910626,0.0341796875
1451491914775,0.029296875
1451491919323,0.0322265625
1451491924442,0.017578125
1451491928557,0.017578125
1451491932717,0.033203125
1451491933964,0.017578125
1451491938304,0.0341796875
1451491941401,0.0234375
1451491943925,0.0390625
1451491947089,0.0341796875
1451491948332,0.021484375
1451491953926,0.0302734375
1451491955843,0.0322265625
1451491957329,0.0302734375
1451491958567,0.0234375
1451491962201,0.03515625
1451491963938,0.0205078125
1451491967762,0.0283203125
1451492114768,0.0380859375
1451492116007,0.017578125
1451492119387,0.0390625
1451492120943,0.0341796875
1451492122821,0.037109375
1451492124071,0.0224609375
1451492129020,0.033203125
1451492132194,0.0263671875
1451492134029,0.0224609375
1451492137025,0.03515625
1451492138999,0.029296875
1451492143762,0.0361328125
1451492145002,0.01953125
1451492148985,0.0302734375
1451492150231,0.0380859375
1451492152183,0.029296875
1451492153434,0.0224609375
1451492156546,0.0322265625
1451492159939,0.0283203125
1451492161945,0.0234375
1451492165511,0.0244140625
1451492167059,0.0322265625
1451492172566,0.01953125
1451492174491,0.0341796875
1451492175739,0.041015625
1451492178987,0.033203125
1451492182312,0.03125
1451492183538,0.017578125
1451492187039,0.0341796875
1451492189421,0.033203125
1451492191529,0.037109375
1451492193399,0.029296875
1451492196844,0.03515625
1451492198988,0.02734375
1451492203617,0.0341796875
1451492204855,0.0205078125
1451492208990,0.0341796875
1451492212262,0.03125
1451492214128,0.0283203125
1451492215379,0.017578125
1451492218987,0.0234375
1451492221888,0.0263671875
1451492223376,0.033203125
1451492226610,0.029296875
1451492229603,0.0302734375
1451492230853,0.0224609375
1451492235544,0.0361328125
1451492236794,0.0185546875
1451492240260,0.03515625
1451492244168,0.0302734375
1451492247183,0.0341796875
1451492248992,0.017578125
1451492253348,0.033203125
1451492256431,0.03515625
1451492260275,0.0400390625
1451492261514,0.0234375
1451492264858,0.03515625
1451492268997,0.0400390625
1451492269489,0.0234375
1451492273043,0.033203125
1451492276394,0.0244140625
1451492280902,0.0302734375
1451492282148,0.02734375
1451492283386,0.017578125
1451492287479,0.03515625
1451492288998,0.017578125
1451492293198,0.0380859375
1451492297441,0.0361328125
1451492299008,0.017578125
1451492302700,0.02734375
1451492304784,0.0341796875
1451492309075,0.0361328125
1451492309478,0.01953125
1451492312079,0.0283203125
1451492314359,0.03125
1451492315599,0.017578125
1451492319654,0.0380859375
1451492321132,0.037109375
1451492325027,0.037109375
1451492326859,0.029296875
1451492330056,0.037109375
1451492333736,0.0263671875
1451492334988,0.0244140625
1451492339143,0.0380859375
1451492340387,0.017578125
1451492343866,0.0322265625
1451492345106,0.017578125
1451492349006,0.0322265625
1451492351005,0.02734375
1451492354857,0.0185546875
1451492357812,0.0234375
1451492359836,0.0361328125
1451492363515,0.0390625
1451492364795,0.041015625
1451492369007,0.0380859375
1451492371156,0.03515625
1451492375294,0.033203125
1451492376538,0.0185546875
1451492379009,0.033203125
1451492380248,0.0234375
1451492383788,0.029296875
1451492386650,0.029296875
1451492389446,0.029296875
1451492392558,0.03515625
1451492393801,0.029296875
1451492397369,0.025390625
1451492399012,0.017578125
1451492402918,0.0361328125
1451492404808,0.0244140625
1451492406049,0.017578125
1451492409721,0.03515625
1451492410969,0.029296875
1451492415598,0.01953125
1451492419015,0.033203125
1451492420945,0.037109375
1451492424151,0.033203125
1451492425391,0.01953125
1451492427610,0.0322265625
1451492431368,0.0390625
1451492432614,0.0283203125
1451492436369,0.0361328125
1451492437617,0.0380859375
1451492441388,0.03125
1451492444486,0.0263671875
1451492449491,0.0341796875
1451492452465,0.0361328125
1451492454334,0.03515625
1451492456370,0.029296875
1451492457608,0.017578125
1451492461061,0.029296875
1451492462311,0.0185546875
1451492465813,0.03515625
1451492469024,0.03515625
1451492469978,0.017578125
1451492474019,0.0390625
1451492477223,0.017578125
1451492479025,0.029296875
1451492482132,0.03515625
1451492484016,0.02734375
1451492485256,0.017578125
1451492488959,0.0361328125
1451492491959,0.0263671875
1451492493205,0.017578125
1451492496244,0.03125
1451492499508,0.0244140625
1451492501208,0.037109375
1451492502447,0.0390625
1451492505557,0.0361328125
1451492506797,0.017578125
1451492510428,0.03515625
1451492511668,0.0185546875
1451492515361,0.037109375
1451492516603,0.017578125
1451492520228,0.0380859375
1451492524386,0.03125
1451492524762,0.017578125
1451492529695,0.0361328125
1451492532229,0.0419921875
1451492536668,0.0263671875
1451492538160,0.033203125
1451492542200,0.03515625
1451492544379,0.0234375
1451492547603,0.03515625
1451492548856,0.0224609375
1451492553048,0.03515625
1451492557345,0.03515625
1451492560533,0.0283203125
1451492564388,0.033203125
1451492565666,0.017578125
1451492571353,0.0390625
1451492574791,0.03125
1451492578134,0.0263671875
1451492580020,0.0322265625
1451492581266,0.0205078125
1451492584527,0.037109375
1451492588119,0.0419921875
1451492591786,0.033203125
1451492594386,0.0322265625
1451492595480,0.017578125
1451492597429,0.017578125
1451492601258,0.0322265625
1451492604388,0.03125
1451492605338,0.0380859375
1451492607192,0.0322265625
1451492610384,0.0224609375
1451492611833,0.02734375
1451492613083,0.0263671875
1451492614398,0.0283203125
1451492615565,0.0263671875
1451492616805,0.02734375
1451492618050,0.0244140625
1451492619290,0.025390625
1451492620530,0.02734375
1451492621778,0.02734375
1451492623017,0.0263671875
1451492624390,0.0263671875
1451492625521,0.0244140625
1451492626765,0.025390625
1451492628015,0.025390625
1451492629267,0.0224609375
1451492632134,0.0244140625
1451492634392,0.0244140625
1451492634648,0.02734375
1451492635890,0.02734375
1451492637133,0.02734375
1451492638381,0.0263671875
1451492639621,0.025390625
1451492640863,0.025390625
1451492642099,0.025390625
1451492644398,0.02734375
1451492644626,0.0263671875
1451492645876,0.0234375
1451492647118,0.025390625
1451492648364,0.025390625
1451492649684,0.025390625
1451492651178,0.0224609375
1451492652438,0.0244140625
1451492654395,0.0263671875
1451492655477,0.0263671875
1451492657213,0.0263671875
1451492658447,0.025390625
1451492659700,0.0244140625
1451492660950,0.0224609375
1451492662196,0.025390625
1451492664397,0.0224609375
1451492664740,0.025390625
1451492666225,0.0263671875
1451492667589,0.0234375
1451492668827,0.0244140625
1451492670069,0.0263671875
1451492671313,0.0263671875
1451492672556,0.0400390625
1451492674428,0.0234375
1451492675040,0.0234375
1451492676284,0.0244140625
1451492678718,0.0263671875
1451492679971,0.0263671875
1451492681219,0.0390625
1451492682463,0.0234375
1451492684397,0.0224609375
1451492684961,0.02734375
1451492686460,0.0234375
1451492687860,0.025390625
1451492689092,0.025390625
1451492691518,0.0400390625
1451492692762,0.0302734375
1451492694399,0.025390625
1451492695245,0.025390625
1451492696487,0.025390625
1451492697739,0.0244140625
1451492698975,0.0244140625
1451492700224,0.0234375
1451492701470,0.0234375
1451492702712,0.0234375
1451492704404,0.0302734375
1451492705280,0.0234375
1451492706763,0.0244140625
1451492708033,0.0244140625
1451492710471,0.0224609375
1451492711718,0.0224609375
1451492712956,0.0224609375
1451492714416,0.03125
1451492719298,0.0224609375
1451492721161,0.0244140625
1451492722411,0.0234375
1451492724403,0.0224609375
1451492725121,0.0380859375
1451492726581,0.02734375
1451492727818,0.0244140625
1451492729062,0.0244140625
1451492730302,0.0234375
1451492731545,0.025390625
1451492732774,0.0234375
1451492734409,0.0224609375
1451492735265,0.0380859375
1451492736507,0.0224609375
1451492737747,0.0234375
1451492738995,0.0234375
1451492740244,0.0234375
1451492741490,0.0224609375
1451492742740,0.0263671875
1451492744406,0.0263671875
1451492745499,0.0244140625
1451492746939,0.0234375
1451492748143,0.025390625
1451492749385,0.0263671875
1451492750633,0.0244140625
1451492751873,0.025390625
1451492753122,0.0263671875
1451492754410,0.025390625
1451492755604,0.025390625
1451492756844,0.02734375
1451492758086,0.0244140625
1451492759328,0.0224609375
1451492760583,0.0224609375
1451492761829,0.025390625
1451492763078,0.025390625
1451492764518,0.0263671875
1451492765983,0.025390625
1451492767240,0.0234375
1451492768482,0.0224609375
1451492769726,0.0224609375
1451492770964,0.0234375
1451492772204,0.0234375
1451492774411,0.025390625
1451492775407,0.03515625
1451492776647,0.025390625
1451492778558,0.0244140625
1451492779861,0.0224609375
1451492781334,0.02734375
1451492782594,0.0263671875
1451492784410,0.0263671875
1451492785062,0.0224609375
1451492786302,0.0234375
1451492787546,0.0244140625
1451492788789,0.025390625
1451492790031,0.0263671875
1451492791278,0.0263671875
1451492792519,0.0263671875
1451492794415,0.0234375
1451492795008,0.0244140625
1451492796258,0.02734375
1451492797506,0.0263671875
1451492798756,0.025390625
1451492800046,0.0234375
1451492801533,0.0224609375
1451492802865,0.0263671875
1451492804413,0.0234375
1451492805333,0.025390625
1451492806578,0.025390625
1451492807817,0.02734375
1451492809058,0.02734375
1451492810300,0.0244140625
1451492811542,0.0224609375
1451492812780,0.033203125
1451492814414,0.0234375
1451492815273,0.0234375
1451492816521,0.0224609375
1451492817769,0.02734375
1451492819015,0.025390625
1451492821881,0.025390625
1451492823120,0.0234375
1451492824418,0.025390625
1451492825600,0.0224609375
1451492826840,0.0244140625
1451492828078,0.0234375
1451492829323,0.0263671875
1451492830567,0.0263671875
1451492831805,0.0234375
1451492833043,0.0234375
1451492834418,0.0244140625
1451492836675,0.0244140625
1451492838738,0.025390625
1451492839980,0.025390625
1451492841222,0.029296875
1451492842464,0.025390625
1451492847639,0.03515625
1451492848885,0.017578125
1451492852466,0.0380859375
1451492854422,0.017578125
1451492857911,0.033203125
1451492859165,0.017578125
1451492863278,0.0390625
1451492867138,0.0341796875
1451492869267,0.0205078125
1451492870783,0.0263671875
1451492874923,0.0400390625
1451492876167,0.017578125
1451492881280,0.0361328125
1451492884917,0.0322265625
1451492889972,0.033203125
1451492894426,0.0322265625
1451492897460,0.025390625
1451492902218,0.0361328125
1451492904428,0.0205078125
1451492907540,0.0390625
1451492910749,0.03515625
1451492911993,0.0341796875
1451492915243,0.0302734375
1451492918552,0.0322265625
1451492919792,0.017578125
1451492924467,0.0234375
1451492927833,0.0283203125
1451492929299,0.017578125
1451492934430,0.0234375
1451492938068,0.0361328125
1451492939299,0.03125
1451492943237,0.0283203125
1451492944481,0.017578125
1451492949658,0.0322265625
1451492951043,0.017578125
1451492953091,0.0302734375
1451492954861,0.041015625
1451492956861,0.017578125
1451492961002,0.037109375
1451492964438,0.037109375
1451492965482,0.02734375
1451492967399,0.0283203125
1451492969267,0.033203125
1451492972662,0.0302734375
1451492974519,0.02734375
1451492976514,0.0341796875
1451492977836,0.0302734375
1451492980715,0.02734375
1451492984437,0.0322265625
1451492989218,0.0361328125
1451492990516,0.0263671875
1451492994439,0.0361328125
1451492995065,0.0185546875
1451492998941,0.0390625
1451493001108,0.0322265625
1451493003038,0.033203125
1451493005019,0.029296875
1451493010565,0.033203125
1451493012313,0.0361328125
1451493014444,0.0322265625
1451493017290,0.03125
1451493021729,0.037109375
1451493025129,0.02734375
1451493026365,0.017578125
1451493030100,0.03515625
1451493034443,0.0341796875
1451493034739,0.017578125
1451493038787,0.0341796875
1451493040279,0.017578125
1451493044449,0.0322265625
1451493046979,0.033203125
1451493048219,0.0234375
1451493052975,0.033203125
1451493054741,0.02734375
1451493055982,0.033203125
1451493059620,0.0302734375
1451493060875,0.017578125
1451493065241,0.0361328125
1451493067034,0.0322265625
1451493068277,0.017578125
1451493074453,0.0400390625
1451493076701,0.017578125
1451493081255,0.0341796875
1451493082496,0.01953125
1451493087640,0.037109375
1451493091015,0.0341796875
1451493092993,0.0380859375
1451493094796,0.0380859375
1451493098034,0.03125
1451493101352,0.0322265625
1451493102603,0.0244140625
1451493106853,0.03125
1451493108093,0.017578125
1451493112322,0.037109375
1451493115441,0.0302734375
1451493116682,0.017578125
1451493120385,0.037109375
1451493121707,0.0224609375
1451493125434,0.0341796875
1451493126684,0.0185546875
1451493130797,0.03125
1451493132229,0.0234375
1451493137175,0.0263671875
1451493140036,0.017578125
1451493142024,0.037109375
1451493145397,0.0302734375
1451493146643,0.0234375
1451493151922,0.0341796875
1451493154462,0.017578125
1451493156950,0.037109375
1451493161701,0.0263671875
1451493162947,0.017578125
1451493167018,0.025390625
1451493168260,0.017578125
1451493171905,0.03515625
1451493173231,0.0283203125
1451493174469,0.01953125
1451493178478,0.0361328125
1451493179726,0.017578125
1451493181818,0.017578125
1451493184462,0.029296875
1451493185477,0.017578125
1451493189247,0.029296875
1451493190481,0.017578125
1451493194666,0.033203125
1451493195912,0.0322265625
1451493201251,0.017578125
1451493202583,0.025390625
1451493207388,0.033203125
1451493208680,0.017578125
1451493212625,0.0341796875
1451493217940,0.033203125
1451493219186,0.0205078125
1451493224468,0.0283203125
1451493228319,0.0302734375
1451493231763,0.0302734375
1451493235512,0.033203125
1451493238434,0.0263671875
1451493239679,0.0234375
1451493243127,0.0302734375
1451493244633,0.017578125
1451493248736,0.0341796875
1451493249970,0.017578125
1451493254471,0.0361328125
1451493257941,0.017578125
1451493261810,0.029296875
1451493263066,0.0283203125
1451493265681,0.01953125
1451493268955,0.017578125
1451493272884,0.03125
1451493276440,0.0302734375
1451493279631,0.0322265625
1451493281563,0.01953125
1451493282807,0.01953125
1451493286480,0.0361328125
1451493289814,0.03125
1451493294477,0.033203125
1451493295277,0.025390625
1451493297257,0.0283203125
1451493299263,0.02734375
1451493300750,0.017578125
1451493304478,0.0302734375
1451493305222,0.0322265625
1451493308875,0.0341796875
1451493310117,0.029296875
1451493315240,0.033203125
1451493316540,0.0302734375
1451493319532,0.025390625
1451493321217,0.0302734375
1451493325937,0.025390625
1451493327616,0.0283203125
1451493331948,0.03125
1451493333188,0.033203125
1451493336379,0.033203125
1451493337621,0.017578125
1451493340693,0.0361328125
1451493344484,0.037109375
1451493345460,0.0185546875
1451493349509,0.033203125
1451493352827,0.03125
1451493356869,0.025390625
1451493361891,0.03515625
1451493363229,0.0224609375
1451493364489,0.0419921875
1451493368221,0.0322265625
1451493369458,0.021484375
1451493374489,0.03515625
1451493375599,0.033203125
1451493376853,0.0244140625
1451493385592,0.0302734375
1451493389055,0.033203125
1451493391103,0.0283203125
1451493394492,0.03125
1451493398038,0.0361328125
1451493399280,0.033203125
1451493402210,0.0322265625
1451493405855,0.0263671875
1451493407163,0.0224609375
1451493411866,0.03515625
1451493413354,0.017578125
1451493418031,0.0341796875
1451493421631,0.03125
1451493424496,0.03125
1451493425604,0.0322265625
1451493427558,0.0361328125
1451493428800,0.0205078125
1451493432155,0.03515625
1451493434495,0.033203125
1451493437828,0.0341796875
1451493442472,0.037109375
1451493444499,0.02734375
1451493447539,0.0283203125
1451493450919,0.033203125
1451493452156,0.017578125
1451493456184,0.033203125
1451493457424,0.0185546875
1451493461253,0.033203125
1451493462505,0.017578125
1451493467440,0.02734375
1451493468818,0.0263671875
1451493472261,0.03125
1451493474501,0.0224609375
1451493475057,0.0234375
1451493477864,0.0244140625
1451493479178,0.02734375
1451493484503,0.033203125
1451493484826,0.017578125
1451493489117,0.03515625
1451493492250,0.029296875
1451493494502,0.0400390625
1451493494899,0.0205078125
1451493498508,0.0302734375
1451493501415,0.017578125
1451493505724,0.03515625
1451493506960,0.01953125
1451493510516,0.0361328125
1451493514505,0.0322265625
1451493517883,0.03515625
1451493519132,0.017578125
1451493522820,0.0283203125
1451493525626,0.021484375
1451493528343,0.029296875
1451493529669,0.0341796875
1451493531602,0.033203125
1451493532846,0.0244140625
1451493536902,0.033203125
1451493538710,0.0224609375
1451493540921,0.0322265625
1451493544552,0.029296875
1451493545135,0.017578125
1451493548779,0.0322265625
1451493551688,0.033203125
1451493555389,0.021484375
1451493558607,0.029296875
1451493560790,0.017578125
1451493565270,0.033203125
1451493566490,0.01953125
1451493570369,0.0341796875
1451493571619,0.017578125
1451493575119,0.03515625
1451493577208,0.0341796875
1451493578703,0.017578125
1451493583410,0.03125
1451493584693,0.017578125
1451493588826,0.033203125
1451493590070,0.0244140625
1451493591319,0.017578125
1451493596469,0.029296875
1451493597709,0.017578125
1451493601706,0.037109375
1451493605094,0.03125
1451493606340,0.0244140625
1451493610089,0.03515625
1451493611581,0.017578125
1451493618698,0.0302734375
1451493622311,0.0361328125
1451493624521,0.0361328125
1451493627348,0.0341796875
1451493628596,0.017578125
1451493632242,0.0322265625
1451493634523,0.03125
1451493639223,0.0302734375
1451493640479,0.021484375
1451493644522,0.03125
1451493645586,0.03125
1451493647479,0.02734375
1451493648719,0.017578125
1451493652855,0.0390625
1451493654527,0.029296875
1451493657068,0.0341796875
1451493659223,0.037109375
1451493660466,0.017578125
1451493663155,0.0302734375
1451493667131,0.03515625
1451493669564,0.0244140625
1451493672832,0.0380859375
1451493674771,0.0341796875
1451493678083,0.02734375
1451493679325,0.017578125
1451493682376,0.0400390625
1451493686299,0.0341796875
1451493687542,0.017578125
1451493691339,0.0244140625
1451493692987,0.0205078125
1451493697388,0.0322265625
1451493699446,0.03515625
1451493700686,0.017578125
1451493704531,0.0390625
1451493705621,0.02734375
1451493706863,0.0302734375
1451493710502,0.0361328125
1451493712759,0.033203125
1451493717140,0.0341796875
1451493718699,0.0263671875
1451493720489,0.0244140625
1451493723189,0.021484375
1451493728210,0.0361328125
1451493731951,0.0361328125
1451493733191,0.017578125
1451493736583,0.0322265625
1451493738162,0.0400390625
1451493740376,0.017578125
1451493743144,0.0263671875
1451493751280,0.0302734375
1451493754748,0.0361328125
1451493755990,0.017578125
1451493759913,0.0361328125
1451493761155,0.017578125
1451493765014,0.0341796875
1451493766254,0.0185546875
1451493771180,0.0341796875
1451493774841,0.0341796875
1451493776087,0.017578125
1451493779948,0.0322265625
1451493784540,0.025390625
1451493787511,0.0322265625
1451493789063,0.0263671875
1451493791297,0.0302734375
1451493793208,0.0322265625
1451493797139,0.0341796875
1451493800979,0.017578125
1451493802743,0.017578125
1451493806572,0.0341796875
1451493808680,0.033203125
1451493810184,0.0234375
1451493814545,0.0361328125
1451493816207,0.02734375
1451493820012,0.0322265625
1451493821520,0.029296875
1451493824646,0.0283203125
1451493827859,0.0322265625
1451493829111,0.0341796875
1451493832728,0.033203125
1451493834548,0.0185546875
1451493838020,0.0302734375
1451493839685,0.021484375
1451493841219,0.033203125
1451493842455,0.0322265625
1451493847148,0.03515625
1451493849506,0.0322265625
1451493851352,0.0283203125
1451493853200,0.0361328125
1451493855289,0.0224609375
1451493857439,0.0400390625
1451493858687,0.017578125
1451493864556,0.017578125
1451493868751,0.02734375
1451493870219,0.0341796875
1451493874554,0.041015625
1451493875098,0.0283203125
1451493878208,0.037109375
1451493879454,0.021484375
1451493884649,0.037109375
1451493887924,0.0341796875
1451493889174,0.0341796875
1451493893106,0.03515625
1451493897513,0.03515625
1451493898765,0.017578125
1451493904558,0.03125
1451493905429,0.033203125
1451493910190,0.037109375
1451493911425,0.01953125
1451493915206,0.03125
1451493917356,0.0380859375
1451493924563,0.017578125
1451493926425,0.0302734375
1451493929510,0.03515625
1451493934561,0.03515625
1451493937235,0.0302734375
1451493938475,0.017578125
1451493941562,0.0390625
1451493944989,0.03515625
1451493947942,0.0302734375
1451493951541,0.0361328125
1451493952909,0.017578125
1451493956654,0.033203125
1451493957900,0.017578125
1451493959134,0.03515625
1451493964565,0.03515625
1451493964705,0.025390625
1451493968326,0.0322265625
1451493969570,0.017578125
1451493973182,0.0341796875
1451493974570,0.017578125
1451493978590,0.0341796875
1451493979829,0.01953125
1451493983426,0.017578125
1451493988329,0.03515625
1451493991631,0.0380859375
1451493995417,0.0361328125
1451493997396,0.0283203125
1451493998636,0.017578125
1451494002654,0.0341796875
1451494006311,0.0361328125
1451494007559,0.017578125
1451494011018,0.0322265625
1451494012536,0.03515625
1451494015768,0.0361328125
1451494019150,0.037109375
1451494020805,0.0361328125
1451494022699,0.03515625
1451494024572,0.0185546875
1451494028758,0.037109375
1451494031953,0.0380859375
1451494034573,0.033203125
1451494039374,0.0361328125
1451494040658,0.0263671875
1451494045503,0.017578125
1451494048661,0.033203125
1451494049902,0.0185546875
1451494054576,0.0322265625
1451494055762,0.017578125
1451494060989,0.0390625
1451494062237,0.02734375
1451494065582,0.033203125
1451494066932,0.0244140625
1451494071444,0.0234375
1451494075961,0.0390625
1451494079572,0.0390625
1451494081099,0.0341796875
1451494084583,0.0400390625
1451494084720,0.017578125
1451494089943,0.0380859375
1451494091198,0.017578125
1451494096554,0.0390625
1451494101963,0.037109375
1451494106331,0.037109375
1451494108924,0.0380859375
1451494110166,0.017578125
1451494117267,0.037109375
1451494120874,0.0400390625
1451494124586,0.0341796875
1451494124848,0.017578125
1451494128117,0.0244140625
1451494129627,0.017578125
1451494134804,0.03515625
1451494136522,0.0205078125
1451494140579,0.033203125
1451494141819,0.017578125
1451494144995,0.03515625
1451494146880,0.033203125
1451494148176,0.0205078125
1451494152501,0.029296875
1451494155929,0.0322265625
1451494157828,0.0380859375
1451494159772,0.03125
1451494161268,0.017578125
1451494166820,0.017578125
1451494169895,0.0322265625
1451494176354,0.0361328125
1451494178276,0.0361328125
1451494180470,0.0302734375
1451494182153,0.0322265625
1451494183411,0.017578125
1451494186767,0.0302734375
1451494188368,0.0283203125
1451494192430,0.03125
1451494194595,0.0283203125
1451494197835,0.0400390625
1451494199071,0.021484375
1451494202666,0.0322265625
1451494204596,0.0224609375
1451494208767,0.0361328125
1451494212277,0.0380859375
1451494215621,0.0341796875
1451494219560,0.0361328125
1451494225117,0.017578125
1451494227509,0.017578125
1451494229509,0.037109375
1451494231692,0.0302734375
1451494232946,0.0185546875
1451494235223,0.03125
1451494240073,0.0283203125
1451494242050,0.03515625
1451494246684,0.029296875
1451494249781,0.037109375
1451494251025,0.0224609375
1451494254835,0.0361328125
1451494257854,0.0361328125
1451494261376,0.0322265625
1451494264603,0.029296875
1451494265731,0.021484375
1451494270006,0.037109375
1451494273284,0.03515625
1451494274608,0.017578125
1451494279675,0.0302734375
1451494284876,0.017578125
1451494288324,0.0341796875
1451494289566,0.0224609375
1451494294607,0.0361328125
1451494296487,0.0244140625
1451494298346,0.0283203125
1451494300840,0.029296875
1451494304613,0.02734375
1451494308395,0.0390625
1451494311838,0.0341796875
1451494315682,0.0380859375
1451494316924,0.0185546875
1451494320623,0.0341796875
1451494324612,0.03515625
1451494326450,0.025390625
1451494329979,0.03515625
1451494331225,0.017578125
1451494335241,0.0361328125
1451494338968,0.0341796875
1451494344615,0.037109375
1451494345823,0.017578125
1451494349427,0.041015625
1451494351379,0.03125
1451494352630,0.017578125
1451494356254,0.033203125
1451494359533,0.0341796875
1451494364620,0.0205078125
1451494365169,0.0205078125
1451494369444,0.0361328125
1451494372839,0.0390625
1451494374647,0.025390625
1451494375961,0.037109375
1451494377205,0.0205078125
1451494381008,0.041015625
1451494384620,0.037109375
1451494385500,0.017578125
1451494388935,0.0390625
1451494392093,0.033203125
1451494394646,0.0341796875
1451494397420,0.02734375
1451494402160,0.041015625
1451494404901,0.017578125
1451494408564,0.0244140625
1451494409860,0.0361328125
1451494413285,0.0400390625
1451494416183,0.03515625
1451494419710,0.0244140625
1451494421438,0.02734375
1451494426232,0.0380859375
1451494427473,0.017578125
1451494432785,0.017578125
1451494438408,0.033203125
1451494444627,0.0380859375
1451494445789,0.033203125
1451494447071,0.0322265625
1451494450032,0.0322265625
1451494451473,0.017578125
1451494455757,0.037109375
1451494457097,0.0224609375
1451494458341,0.02734375
1451494459581,0.025390625
1451494460822,0.0283203125
1451494462066,0.0244140625
1451494463304,0.02734375
1451494465242,0.0263671875
1451494466486,0.03125
1451494468549,0.0263671875
1451494469997,0.0263671875
1451494471489,0.0244140625
1451494472693,0.0244140625
1451494474632,0.02734375
1451494475170,0.0263671875
1451494476408,0.02734375
1451494477648,0.0263671875
1451494478888,0.025390625
1451494480130,0.0244140625
1451494481377,0.0263671875
1451494482615,0.025390625
1451494484633,0.0234375
1451494485097,0.0244140625
1451494486344,0.0234375
1451494487594,0.0263671875
1451494488838,0.025390625
1451494490280,0.0234375
1451494491877,0.025390625
1451494492990,0.025390625
1451494494632,0.0244140625
1451494495477,0.0263671875
1451494496720,0.025390625
1451494497959,0.0244140625
1451494499205,0.0224609375
1451494500447,0.0224609375
1451494501685,0.025390625
1451494502924,0.025390625
1451494504634,0.025390625
1451494505424,0.0234375
1451494507864,0.0224609375
1451494509123,0.025390625
1451494510621,0.0263671875
1451494513139,0.025390625
1451494514635,0.0244140625
1451494515628,0.0263671875
1451494516870,0.0263671875
1451494518128,0.025390625
1451494520556,0.0234375
1451494521785,0.0234375
1451494523019,0.0234375
1451494524640,0.0361328125
1451494525991,0.025390625
1451494527295,0.0283203125
1451494529339,0.0234375
1451494530566,0.0263671875
1451494531812,0.0419921875
1451494533052,0.0263671875
1451494534648,0.025390625
1451494535545,0.0244140625
1451494536785,0.0244140625
1451494538025,0.025390625
1451494539263,0.025390625
1451494540520,0.0234375
1451494541772,0.0224609375
1451494543016,0.025390625
1451494544644,0.025390625
1451494545516,0.0234375
1451494547008,0.025390625
1451494548392,0.0234375
1451494549629,0.0244140625
1451494550873,0.02734375
1451494552123,0.0234375
1451494553363,0.0234375
1451494554655,0.0263671875
1451494555847,0.025390625
1451494557080,0.025390625
1451494558320,0.0263671875
1451494559562,0.025390625
1451494560814,0.0263671875
1451494562064,0.025390625
1451494563308,0.0234375
1451494564645,0.0234375
1451494565851,0.0224609375
1451494567345,0.0224609375
1451494568643,0.0263671875
1451494569899,0.025390625
1451494571120,0.0234375
1451494572360,0.0224609375
1451494574648,0.0224609375
1451494574900,0.0224609375
1451494576134,0.0224609375
1451494577375,0.0224609375
1451494578620,0.037109375
1451494579863,0.0234375
1451494581111,0.0244140625
1451494582361,0.0224609375
1451494584646,0.0263671875
1451494584920,0.0263671875
1451494586904,0.0234375
1451494588138,0.0244140625
1451494589974,0.0263671875
1451494591207,0.0224609375
1451494592445,0.0234375
1451494594647,0.025390625
1451494594973,0.025390625
1451494596213,0.0263671875
1451494597461,0.02734375
1451494598708,0.025390625
1451494599952,0.0263671875
1451494601280,0.0263671875
1451494602770,0.0244140625
1451494604647,0.0244140625
1451494605275,0.0244140625
1451494606520,0.033203125
1451494607761,0.025390625
1451494609005,0.025390625
1451494611434,0.025390625
1451494612672,0.025390625
1451494614650,0.0224609375
1451494616350,0.0224609375
1451494617597,0.0224609375
1451494618841,0.0234375
1451494620085,0.0234375
1451494621383,0.025390625
1451494622887,0.0263671875
1451494624650,0.0263671875
1451494625412,0.0244140625
1451494626658,0.0224609375
1451494627898,0.0224609375
1451494629140,0.025390625
1451494630377,0.025390625
1451494631623,0.0263671875
1451494632865,0.0263671875
1451494634651,0.0234375
1451494635351,0.0224609375
1451494636595,0.0224609375
1451494637845,0.0263671875
1451494639094,0.025390625
1451494640340,0.0244140625
1451494641834,0.0234375
1451494643294,0.025390625
1451494644653,0.0263671875
1451494646511,0.0263671875
1451494648269,0.025390625
1451494649509,0.025390625
1451494650751,0.02734375
1451494651994,0.0234375
1451494653246,0.0244140625
1451494654655,0.0341796875
1451494657034,0.0244140625
1451494658496,0.025390625
1451494659749,0.0224609375
1451494662185,0.0244140625
1451494663425,0.025390625
1451494664665,0.0234375
1451494665906,0.021484375
1451494667144,0.0244140625
1451494668384,0.0263671875
1451494669640,0.0224609375
1451494670868,0.0224609375
1451494672113,0.0244140625
1451494673361,0.025390625
1451494674657,0.0234375
1451494675849,0.0234375
1451494677251,0.0234375
1451494678736,0.025390625
1451494679992,0.025390625
1451494681234,0.0234375
1451494682478,0.0234375
1451494684658,0.0380859375
1451494684984,0.025390625
1451494686227,0.025390625
1451494687477,0.017578125
1451494689007,0.0283203125
1451494697325,0.0224609375
1451494701369,0.0419921875
1451494702885,0.0263671875
1451494706751,0.017578125
1451494710496,0.02734375
1451494712595,0.041015625
1451494714663,0.01953125
1451494718143,0.0400390625
1451494723302,0.0419921875
1451494725194,0.0322265625
1451494727390,0.0244140625
1451494732498,0.03515625
1451494736030,0.0400390625
1451494739935,0.0380859375
1451494742437,0.03515625
1451494744665,0.0380859375
1451494746202,0.0361328125
1451494748456,0.03515625
1451494750602,0.0361328125
1451494754669,0.03125
1451494758645,0.0341796875
1451494760914,0.0244140625
1451494762946,0.025390625
1451494764750,0.017578125
1451494768865,0.017578125
1451494774676,0.0390625
1451494777700,0.03125
1451494780176,0.0361328125
1451494782135,0.029296875
1451494783371,0.0244140625
1451494787229,0.0361328125
1451494792240,0.033203125
1451494794674,0.037109375
1451494795447,0.02734375
1451494798970,0.0341796875
1451494802754,0.0341796875
1451494806454,0.033203125
1451494808917,0.033203125
1451494814685,0.041015625
1451494815976,0.0322265625
1451494819566,0.02734375
1451494821583,0.029296875
1451494823397,0.0361328125
1451494825670,0.02734375
1451494834680,0.0302734375
1451494835386,0.0283203125
1451494837535,0.017578125
1451494839431,0.0185546875
1451494840675,0.0244140625
1451494844682,0.0205078125
1451494846172,0.0234375
1451494848300,0.0419921875
1451494851830,0.0400390625
1451494856694,0.0361328125
1451494858376,0.0322265625
1451494863091,0.0283203125
1451494865059,0.0419921875
1451494866911,0.037109375
1451494868165,0.0419921875
1451494871846,0.0302734375
1451494873094,0.017578125
1451494877955,0.021484375
1451494881715,0.0390625
1451494882959,0.017578125
1451494887330,0.0263671875
1451494888978,0.0390625
1451494892593,0.037109375
1451494894685,0.0205078125
1451494898188,0.0400390625
1451494901770,0.021484375
1451494904687,0.03125
1451494905911,0.0361328125
1451494907155,0.0244140625
1451494911452,0.03515625
1451494912828,0.0224609375
1451494916248,0.0322265625
1451494920251,0.0302734375
1451494924693,0.0341796875
1451494925962,0.0341796875
1451494927942,0.03125
1451494930252,0.0322265625
1451494934695,0.0322265625
1451494939490,0.029296875
1451494940744,0.017578125
1451494944723,0.0361328125
1451494949284,0.02734375
1451494953224,0.029296875
1451494954694,0.017578125
1451494958515,0.0361328125
1451494959999,0.017578125
1451494964695,0.0390625
1451494967234,0.0263671875
1451494969082,0.02734375
1451494970331,0.0322265625
1451494974697,0.0341796875
1451494977050,0.037109375
1451494978281,0.0224609375
1451494982116,0.0400390625
1451494985705,0.03515625
1451494989683,0.037109375
1451494990963,0.017578125
1451494995064,0.0224609375
1451494999838,0.029296875
1451495001545,0.021484375
1451495004705,0.03125
1451495005740,0.0263671875
1451495008286,0.017578125
1451495010590,0.0390625
1451495014705,0.0283203125
1451495015630,0.017578125
1451495019531,0.029296875
1451495021298,0.0302734375
1451495022540,0.017578125
1451495027255,0.037109375
1451495028489,0.017578125
1451495033030,0.0400390625
1451495034711,0.017578125
1451495038342,0.0380859375
1451495039590,0.0205078125
1451495043129,0.0322265625
1451495045197,0.0322265625
1451495048862,0.0302734375
1451495051962,0.02734375
1451495053508,0.0283203125
1451495057625,0.037109375
1451495061814,0.0361328125
1451495063056,0.03515625
1451495067110,0.03125
1451495071337,0.033203125
1451495076902,0.0263671875
1451495080402,0.0244140625
1451495081636,0.017578125
1451495085350,0.0322265625
1451495086591,0.017578125
1451495091006,0.037109375
1451495093212,0.0322265625
1451495094720,0.017578125
1451495099011,0.0341796875
1451495102574,0.0361328125
1451495104718,0.0234375
1451495106492,0.033203125
1451495107746,0.025390625
1451495112015,0.0205078125
1451495117266,0.0380859375
1451495119300,0.03125
1451495123305,0.029296875
1451495124721,0.0244140625
1451495129027,0.0341796875
1451495134720,0.0341796875
1451495137849,0.0302734375
1451495142462,0.0341796875
1451495145870,0.0322265625
1451495147154,0.0244140625
1451495151275,0.02734375
1451495153359,0.0341796875
1451495155553,0.0302734375
1451495157756,0.03125
1451495159010,0.0390625
1451495162908,0.0322265625
1451495166817,0.0302734375
1451495168085,0.017578125
1451495172636,0.0283203125
1451495176300,0.0341796875
1451495180080,0.0263671875
1451495182111,0.0322265625
1451495184724,0.033203125
1451495188020,0.02734375
1451495189961,0.017578125
1451495193127,0.017578125
1451495196824,0.033203125
1451495201858,0.03125
1451495205449,0.0283203125
1451495206693,0.033203125
1451495211490,0.0302734375
1451495214728,0.0302734375
1451495215053,0.0185546875
1451495219121,0.033203125
1451495220381,0.0224609375
1451495224732,0.033203125
1451495225346,0.0244140625
1451495229732,0.02734375
1451495234901,0.02734375
1451495236141,0.017578125
1451495239872,0.037109375
1451495241116,0.017578125
1451495245089,0.0341796875
1451495247147,0.033203125
1451495250145,0.017578125
1451495252021,0.017578125
1451495257118,0.02734375
1451495261089,0.03125
1451495262333,0.0283203125
1451495266327,0.0322265625
1451495268464,0.0302734375
1451495270856,0.033203125
1451495272101,0.017578125
1451495276331,0.0390625
1451495277569,0.017578125
1451495283036,0.0341796875
1451495286531,0.0302734375
1451495292145,0.0234375
1451495294740,0.01953125
1451495298068,0.03125
1451495299941,0.0244140625
1451495301827,0.0361328125
1451495303071,0.0185546875
1451495307332,0.03515625
1451495308570,0.0390625
1451495313476,0.017578125
1451495318491,0.025390625
1451495320684,0.0234375
1451495321920,0.017578125
1451495325950,0.0322265625
1451495327192,0.017578125
1451495331877,0.03515625
1451495335258,0.03125
1451495337378,0.03125
1451495338620,0.029296875
1451495342602,0.03125
1451495347885,0.03515625
1451495349186,0.029296875
1451495353052,0.025390625
1451495358553,0.0361328125
1451495359795,0.02734375
1451495364746,0.03125
1451495367804,0.029296875
1451495371919,0.0341796875
1451495377310,0.029296875
1451495382431,0.0244140625
1451495385921,0.029296875
1451495391314,0.0380859375
1451495392611,0.0234375
1451495395881,0.0341796875
1451495397697,0.0380859375
1451495401540,0.02734375
1451495404752,0.03125
1451495405986,0.02734375
1451495408074,0.0341796875
1451495409320,0.017578125
1451495413461,0.0234375
1451495418252,0.0400390625
1451495420190,0.041015625
1451495424755,0.0283203125
1451495427571,0.0322265625
1451495432012,0.017578125
1451495435766,0.0322265625
1451495437745,0.03515625
1451495439215,0.017578125
1451495444760,0.02734375
1451495448168,0.029296875
1451495450633,0.03515625
1451495453007,0.021484375
1451495455215,0.0263671875
1451495458680,0.029296875
1451495461124,0.0283203125
1451495463613,0.03125
1451495465879,0.0263671875
1451495469639,0.03125
1451495471142,0.017578125
1451495475048,0.0390625
1451495477166,0.037109375
1451495481097,0.0322265625
1451495482337,0.017578125
1451495486156,0.029296875
1451495487394,0.01953125
1451495492353,0.017578125
1451495495227,0.03125
1451495500764,0.0302734375
1451495504851,0.0380859375
1451495506765,0.0224609375
1451495509281,0.0361328125
1451495513352,0.03125
1451495514770,0.025390625
1451495518574,0.0341796875
1451495522571,0.02734375
1451495524771,0.0185546875
1451495527696,0.0302734375
1451495529642,0.037109375
1451495532023,0.029296875
1451495537296,0.037109375
1451495541124,0.029296875
1451495545900,0.0380859375
1451495547755,0.029296875
1451495549773,0.0322265625
1451495554288,0.0341796875
1451495556464,0.03515625
1451495558980,0.0380859375
1451495562637,0.0322265625
1451495563883,0.0244140625
1451495567536,0.03125
1451495571486,0.0341796875
1451495578603,0.0361328125
1451495580926,0.0390625
1451495586115,0.0263671875
1451495588635,0.0380859375
1451495591145,0.03125
1451495592891,0.029296875
1451495595902,0.033203125
1451495599118,0.0419921875
1451495600362,0.0263671875
1451495603931,0.03125
1451495607966,0.0380859375
1451495609216,0.017578125
1451495613694,0.029296875
1451495617647,0.0224609375
1451495622922,0.0341796875
1451495625906,0.0263671875
1451495629025,0.033203125
1451495630337,0.03125
1451495635971,0.0400390625
1451495638556,0.03515625
1451495639796,0.0205078125
1451495644411,0.0263671875
1451495648351,0.0244140625
1451495650436,0.0380859375
1451495651942,0.017578125
1451495655911,0.037109375
1451495659331,0.0390625
1451495661584,0.0341796875
1451495665912,0.029296875
1451495669067,0.0302734375
1451495670309,0.017578125
1451495674677,0.03515625
1451495677188,0.025390625
1451495679304,0.02734375
1451495681442,0.02734375
1451495685915,0.029296875
1451495690860,0.037109375
1451495692098,0.0234375
1451495696522,0.041015625
1451495697763,0.0185546875
1451495701751,0.03515625
1451495703002,0.017578125
1451495708574,0.0361328125
1451495709839,0.0244140625
1451495714691,0.0361328125
1451495718600,0.0380859375
1451495721032,0.0302734375
1451495722272,0.025390625
1451495726353,0.03125
1451495727591,0.017578125
1451495731325,0.041015625
1451495733098,0.017578125
1451495736957,0.017578125
1451495738695,0.025390625
1451495742052,0.029296875
1451495745927,0.017578125
1451495749880,0.02734375
1451495751711,0.0263671875
1451495753903,0.0380859375
1451495757800,0.03125
1451495759804,0.0419921875
1451495763733,0.0302734375
1451495767691,0.029296875
1451495770053,0.0283203125
1451495772314,0.0224609375
1451495774304,0.0322265625
1451495779269,0.0390625
1451495783691,0.0390625
1451495785928,0.01953125
1451495788928,0.0380859375
1451495794027,0.017578125
1451495796797,0.0283203125
1451495799362,0.03125
1451495803378,0.0380859375
1451495806867,0.029296875
1451495810727,0.025390625
1451495814720,0.0341796875
1451495819095,0.03125
1451495821573,0.021484375
1451495823667,0.033203125
1451495826500,0.0205078125
1451495828160,0.0244140625
1451495831542,0.033203125
1451495833049,0.017578125
1451495836873,0.0283203125
1451495838980,0.033203125
1451495842731,0.0263671875
1451495848743,0.0390625
1451495853245,0.03515625
1451495857120,0.033203125
1451495861303,0.029296875
1451495865937,0.0322265625
1451495866256,0.025390625
1451495870250,0.033203125
1451495874485,0.03125
1451495878945,0.03125
1451495883340,0.0283203125
1451495884712,0.025390625
1451495889447,0.0390625
1451495893557,0.0380859375
1451495897612,0.0390625
1451495901577,0.0302734375
1451495902817,0.017578125
1451495907229,0.0302734375
1451495910973,0.0283203125
1451495914739,0.017578125
1451495917799,0.0380859375
1451495919045,0.017578125
1451495923918,0.017578125
1451495928335,0.029296875
1451495934269,0.03125
1451495935956,0.017578125
1451495939792,0.0400390625
1451495943935,0.0322265625
1451495947762,0.03515625
1451495950202,0.02734375
1451495954354,0.0322265625
1451495958273,0.0302734375
1451495962496,0.0341796875
1451495966734,0.029296875
1451495970447,0.0302734375
1451495973983,0.0419921875
1451495977404,0.0302734375
1451495981572,0.0361328125
1451495986055,0.02734375
1451495989725,0.025390625
1451495995963,0.029296875
1451496000577,0.0322265625
1451496001821,0.033203125
1451496005956,0.029296875
1451496008124,0.025390625
1451496009374,0.017578125
1451496014369,0.037109375
1451496016953,0.03125
1451496018222,0.0185546875
1451496021390,0.025390625
1451496026653,0.037109375
1451496030161,0.0341796875
1451496034564,0.017578125
1451496038747,0.0400390625
1451496043027,0.037109375
1451496046008,0.0400390625
1451496047294,0.029296875
1451496050329,0.0185546875
1451496052771,0.0419921875
1451496054767,0.0263671875
1451496057255,0.041015625
1451496058496,0.017578125
1451496062037,0.0341796875
1451496063935,0.0380859375
1451496065963,0.017578125
1451496069271,0.037109375
1451496073416,0.0390625
1451496075964,0.0283203125
1451496078087,0.0234375
1451496083743,0.0380859375
1451496085974,0.021484375
1451496089406,0.0419921875
1451496093359,0.037109375
1451496098618,0.017578125
1451496102690,0.037109375
1451496105969,0.0380859375
1451496106631,0.0263671875
1451496110463,0.0419921875
1451496114330,0.0322265625
1451496115976,0.0205078125
1451496121565,0.033203125
1451496126626,0.0234375
1451496130114,0.0322265625
1451496134261,0.03125
1451496135973,0.017578125
1451496140028,0.041015625
1451496144704,0.0380859375
1451496147065,0.0380859375
1451496150961,0.0244140625
1451496155976,0.0283203125
1451496159678,0.029296875
1451496163913,0.0283203125
1451496335586,0.0361328125
1451496336832,0.0224609375
1451496338077,0.02734375
1451496339319,0.025390625
1451496340825,0.025390625
1451496341815,0.025390625
1451496343065,0.0224609375
1451496344315,0.0263671875
1451496345702,0.0234375
1451496347136,0.0224609375
1451496348370,0.02734375
1451496349612,0.02734375
1451496350856,0.025390625
1451496352101,0.0244140625
1451496353333,0.02734375
1451496354575,0.0263671875
1451496355817,0.0263671875
1451496357057,0.0263671875
1451496358300,0.0263671875
1451496359552,0.0244140625
1451496360828,0.0244140625
1451496362044,0.025390625
1451496363294,0.02734375
1451496364543,0.0263671875
1451496366051,0.025390625
1451496367509,0.0263671875
1451496368751,0.025390625
1451496370830,0.0244140625
1451496371229,0.025390625
1451496372476,0.025390625
1451496373714,0.025390625
1451496374956,0.0244140625
1451496376200,0.0244140625
1451496377443,0.0244140625
1451496378683,0.025390625
1451496380837,0.0234375
1451496381183,0.041015625
1451496382429,0.0263671875
1451496383679,0.0244140625
1451496384979,0.025390625
1451496386462,0.0263671875
1451496387722,0.0244140625
1451496388960,0.0224609375
1451496390832,0.0234375
1451496392631,0.0263671875
1451496394961,0.0234375
1451496396355,0.0263671875
1451496397601,0.0244140625
1451496398849,0.0234375
1451496400834,0.0263671875
1451496401586,0.0263671875
1451496404118,0.025390625
1451496405362,0.0244140625
1451496406611,0.0224609375
1451496407853,0.0224609375
1451496409097,0.0224609375
1451496410843,0.0224609375
1451496411575,0.025390625
1451496412818,0.0263671875
1451496414060,0.0263671875
1451496415314,0.0244140625
1451496416564,0.0224609375
1451496417810,0.025390625
1451496419060,0.0263671875
1451496420841,0.0234375
1451496421799,0.025390625
1451496423195,0.0244140625
1451496424423,0.0234375
1451496425668,0.0224609375
1451496426912,0.0244140625
1451496428156,0.0234375
1451496429398,0.0224609375
1451496430838,0.0234375
1451496431870,0.025390625
1451496433116,0.0224609375
1451496434355,0.0224609375
1451496435603,0.029296875
1451496436849,0.0244140625
1451496438095,0.0224609375
1451496439344,0.0244140625
1451496440848,0.0361328125
1451496442234,0.0263671875
1451496443484,0.0224609375
1451496444730,0.025390625
1451496445976,0.0244140625
1451496447225,0.0244140625
1451496448467,0.025390625
1451496449707,0.0263671875
1451496450997,0.03515625
1451496452235,0.025390625
1451496454031,0.0224609375
1451496455286,0.02734375
1451496457654,0.0224609375
1451496458970,0.025390625
1451496460841,0.0263671875
1451496461453,0.025390625
1451496462695,0.0244140625
1451496463939,0.025390625
1451496465181,0.025390625
1451496466427,0.025390625
1451496467658,0.0224609375
1451496468906,0.0244140625
1451496470848,0.0244140625
1451496471402,0.0263671875
1451496472648,0.0263671875
1451496473893,0.025390625
1451496475145,0.0234375
1451496476397,0.0224609375
1451496477881,0.025390625
1451496479332,0.025390625
1451496480869,0.0234375
1451496481808,0.0244140625
1451496483056,0.0244140625
1451496484294,0.025390625
1451496485538,0.0263671875
1451496486782,0.0263671875
1451496488025,0.0263671875
1451496489267,0.025390625
1451496490845,0.0224609375
1451496491751,0.0244140625
1451496493000,0.025390625
1451496495434,0.0234375
1451496496768,0.0224609375
1451496498252,0.02734375
1451496499516,0.0244140625
1451496500850,0.0234375
1451496502003,0.0224609375
1451496503247,0.0234375
1451496504485,0.0234375
1451496505725,0.025390625
1451496506967,0.0263671875
1451496508212,0.0244140625
1451496509456,0.0244140625
1451496510848,0.0244140625
1451496511962,0.0244140625
1451496513212,0.0224609375
1451496515441,0.0244140625
1451496517349,0.0224609375
1451496518583,0.0244140625
1451496520852,0.0263671875
1451496521111,0.0263671875
1451496522357,0.0263671875
1451496523594,0.0234375
1451496524832,0.0234375
1451496526072,0.025390625
1451496527322,0.0234375
1451496528573,0.025390625
1451496530855,0.025390625
1451496531105,0.033203125
1451496532372,0.0224609375
1451496533877,0.0224609375
1451496535215,0.0341796875
1451496536462,0.017578125
1451496538604,0.0322265625
1451496540853,0.0380859375
1451496541950,0.017578125
1451496548041,0.0341796875
1451496549293,0.0244140625
1451496554350,0.0380859375
1451496559137,0.0341796875
1451496565082,0.029296875
1451496569485,0.03125
1451496572167,0.03515625
1451496579029,0.0400390625
1451496583005,0.033203125
1451496585479,0.037109375
1451496586727,0.029296875
1451496591124,0.0361328125
1451496595963,0.0322265625
1451496598441,0.041015625
1451496600862,0.03125
1451496602063,0.0185546875
1451496606240,0.041015625
1451496607482,0.0341796875
1451496612707,0.0341796875
1451496615161,0.0302734375
1451496617702,0.0390625
1451496618948,0.021484375
1451496623274,0.03515625
1451496625717,0.0263671875
1451496630863,0.0419921875
1451496631066,0.01953125
1451496635256,0.0390625
1451496639167,0.0263671875
1451496645540,0.03125
1451496648292,0.0322265625
1451496652449,0.0263671875
1451496656897,0.037109375
1451496661106,0.0400390625
1451496662346,0.017578125
1451496667119,0.017578125
1451496671381,0.0361328125
1451496676380,0.021484375
1451496678237,0.0205078125
1451496681019,0.041015625
1451496684957,0.0361328125
1451496689362,0.03125
1451496696953,0.017578125
1451496702922,0.021484375
1451496704170,0.017578125
1451496705412,0.0185546875
1451496708285,0.0341796875
1451496710877,0.0400390625
1451496712135,0.017578125
1451496713922,0.0361328125
1451496715394,0.017578125
1451496716952,0.02734375
1451496721309,0.0361328125
1451496725875,0.037109375
1451496728316,0.0234375
1451496730876,0.0361328125
1451496735091,0.0263671875
1451496738164,0.0302734375
1451496740882,0.0400390625
1451496743024,0.03515625
1451496746760,0.0322265625
1451496749357,0.025390625
1451496755854,0.017578125
1451496761353,0.0341796875
1451496765801,0.0341796875
1451496770882,0.033203125
1451496773259,0.0380859375
1451496775951,0.0224609375
1451496778107,0.033203125
1451496784362,0.02734375
1451496788421,0.0302734375
1451496790885,0.0234375
1451496791853,0.0283203125
1451496795934,0.0361328125
1451496798682,0.0341796875
1451496801538,0.02734375
1451496805891,0.03125
1451496808200,0.0390625
1451496810888,0.0263671875
1451496813208,0.0302734375
1451496814450,0.0224609375
1451496816403,0.017578125
1451496818967,0.0322265625
1451496821147,0.0283203125
1451496823705,0.017578125
1451496825600,0.0322265625
1451496826844,0.017578125
1451496834577,0.033203125
1451496839316,0.037109375
1451496842035,0.03515625
1451496846601,0.0361328125
1451496851356,0.0390625
1451496855698,0.03515625
1451496858027,0.0322265625
1451496862496,0.0341796875
1451496865224,0.0361328125
1451496866694,0.017578125
1451496871441,0.029296875
1451496876769,0.0234375
1451496884099,0.0263671875
1451496886869,0.0361328125
1451496888115,0.0244140625
1451496893504,0.0322265625
1451496895024,0.01953125
1451496898801,0.0341796875
1451496901247,0.0234375
1451496902481,0.0224609375
1451496906935,0.03125
1451496908883,0.03125
1451496912295,0.03125
1451496916889,0.0390625
1451496918142,0.017578125
1451496923330,0.0341796875
1451496926075,0.029296875
1451496928222,0.021484375
1451496932500,0.0341796875
1451496935196,0.029296875
1451496940903,0.0341796875
1451496945690,0.0361328125
1451496946936,0.01953125
1451496950907,0.033203125
1451496955927,0.0390625
1451496960906,0.033203125
1451496964046,0.0234375
1451496966617,0.037109375
1451496969599,0.0400390625
1451496970909,0.0185546875
1451496974816,0.0390625
1451496980909,0.0341796875
1451496984287,0.033203125
1451496985538,0.017578125
1451496990910,0.0341796875
1451496993643,0.0234375
1451496997965,0.017578125
1451497434157,0.03125
1451497437480,0.0361328125
1451497440563,0.03515625
1451497445251,0.037109375
1451497591013,0.0361328125
1451497596725,0.0302734375
1451497600358,0.03515625
1451497605945,0.029296875
1451497608991,0.0341796875
1451497611612,0.0322265625
1451497615706,0.0263671875
1451497620543,0.0341796875
1451497625796,0.0302734375
1451497629242,0.0380859375
1451497632368,0.03515625
1451497636177,0.03515625
1451497639754,0.033203125
1451497643014,0.0380859375
1451497649653,0.033203125
1451497654102,0.0390625
1451497657440,0.033203125
1451497661087,0.03125
1451497666783,0.0283203125
1451497669850,0.021484375
1451497673106,0.0302734375
1451497676679,0.041015625
1451497683198,0.0322265625
1451497686122,0.0419921875
1451497691581,0.0283203125
1451497695716,0.0341796875
1451497698892,0.0322265625
1451497702415,0.0390625
1451497705947,0.0361328125
1451497710282,0.017578125
1451497712626,0.0283203125
1451497715735,0.0361328125
1451497719239,0.0322265625
1451497722402,0.0341796875
1451497726043,0.0361328125
1451497729357,0.033203125
1451497732541,0.0341796875
1451497735720,0.0390625
1451497738228,0.03515625
1451497741418,0.0283203125
1451497743003,0.0185546875
1451497748171,0.0361328125
1451497751130,0.03515625
1451497756813,0.037109375
1451497762103,0.037109375
1451497765724,0.029296875
1451497768214,0.041015625
1451497773247,0.0263671875
1451497776209,0.02734375
1451497779654,0.0400390625
1451497784305,0.029296875
1451497787219,0.0302734375
1451497790834,0.03515625
1451497793254,0.017578125
1451497794564,0.0361328125
1451497799805,0.029296875
1451497802424,0.0224609375
1451497806422,0.0380859375
1451497813237,0.0302734375
1451497816398,0.03515625
1451497819184,0.0322265625
1451497822356,0.03515625
1451497825755,0.0322265625
1451497833466,0.03515625
1451497839553,0.0302734375
1451497842629,0.017578125
1451497845996,0.03125
1451497849160,0.029296875
1451497852611,0.0400390625
1451497858287,0.0341796875
1451497863985,0.025390625
1451497867643,0.0341796875
1451497870537,0.029296875
1451497882971,0.0283203125
1451497888534,0.029296875
1451497891163,0.017578125
1451497893953,0.0283203125
1451497897615,0.0302734375
1451497900600,0.0185546875
1451497902076,0.017578125
1451497906169,0.0390625
1451497909729,0.0380859375
1451497914560,0.037109375
1451497917402,0.037109375
1451497920229,0.0283203125
1451497926094,0.0361328125
1451497929474,0.0341796875
1451497932987,0.03515625
1451497937283,0.0322265625
1451497940293,0.03125
1451497942316,0.025390625
1451497945748,0.029296875
1451497949743,0.017578125
1451497956108,0.03515625
1451497959525,0.0322265625
1451497962719,0.0283203125
1451497965833,0.025390625
1451497967345,0.017578125
1451497968592,0.0341796875
1451497972504,0.0361328125
1451497975753,0.0322265625
1451497981368,0.0341796875
1451497985762,0.037109375
1451497988469,0.0341796875
1451497990977,0.03125
1451497994078,0.03125
1451497997320,0.0361328125
1451497998826,0.017578125
1451498002501,0.03125
1451498005757,0.03515625
1451498011406,0.017578125
1451498013502,0.037109375
1451498016443,0.0244140625
1451498021410,0.0341796875
1451498025758,0.0322265625
1451498030313,0.021484375
1451498035892,0.025390625
1451498041585,0.0302734375
1451498047601,0.0322265625
1451498050878,0.0302734375
1451498053876,0.037109375
1451498057239,0.03515625
1451498060161,0.0390625
1451498063902,0.0361328125
1451498075774,0.037109375
1451498079154,0.03125
1451498082325,0.0302734375
1451498085767,0.0322265625
1451498088109,0.0322265625
1451498098769,0.03515625
1451498101299,0.017578125
1451498105824,0.0380859375
1451498109138,0.0341796875
1451498111943,0.0341796875
1451498117113,0.0322265625
1451498120038,0.0361328125
1451498123531,0.0341796875
1451498126913,0.0341796875
1451498132182,0.0224609375
1451498134420,0.0390625
1451498137183,0.029296875
1451498140411,0.0322265625
1451498143964,0.033203125
1451498147292,0.0380859375
1451498150528,0.0283203125
1451498154389,0.041015625
1451498157370,0.0263671875
1451498162634,0.0341796875
1451498165785,0.0361328125
1451498168869,0.03125
1451498172480,0.0302734375
1451498175778,0.0185546875
1451498176290,0.03125
1451498177533,0.0283203125
1451498178785,0.025390625
1451498180031,0.0244140625
1451498181279,0.0244140625
1451498182603,0.025390625
1451498184135,0.0234375
1451498185778,0.0361328125
1451498186642,0.0263671875
1451498187886,0.0263671875
1451498189133,0.0283203125
1451498191114,0.0263671875
1451498192345,0.0234375
1451498194287,0.0234375
1451498195787,0.0244140625
1451498196787,0.02734375
1451498198037,0.025390625
1451498199530,0.0224609375
1451498200884,0.025390625
1451498202118,0.0244140625
1451498203360,0.0234375
1451498204598,0.0234375
1451498205841,0.0234375
1451498207083,0.0234375
1451498208323,0.0234375
1451498209563,0.0224609375
1451498210805,0.025390625
1451498212045,0.0263671875
1451498213298,0.0244140625
1451498215784,0.0244140625
1451498216986,0.0244140625
1451498219683,0.0234375
1451498221119,0.0244140625
1451498222355,0.0234375
1451498223597,0.0390625
1451498225792,0.029296875
1451498226122,0.0234375
1451498228556,0.025390625
1451498229796,0.0234375
1451498231038,0.0244140625
1451498232274,0.0234375
1451498233518,0.025390625
1451498235787,0.0234375
1451498236055,0.0263671875
1451498237299,0.0244140625
1451498238657,0.0263671875
1451498240144,0.0224609375
1451498241398,0.029296875
1451498242640,0.0234375
1451498243878,0.0234375
1451498245786,0.0234375
1451498246350,0.02734375
1451498247597,0.0263671875
1451498248839,0.025390625
1451498250079,0.025390625
1451498251969,0.0263671875
1451498253862,0.0244140625
1451498255796,0.02734375
1451498256744,0.025390625
1451498257980,0.0244140625
1451498259220,0.0234375
1451498260463,0.0244140625
1451498261707,0.0244140625
1451498262953,0.029296875
1451498264195,0.0234375
1451498265789,0.0224609375
1451498266680,0.0234375
1451498267920,0.0244140625
1451498269166,0.0244140625
1451498270408,0.0234375
1451498271656,0.0234375
1451498272900,0.0234375
1451498274143,0.0234375
1451498275795,0.0224609375
1451498277061,0.0263671875
1451498278316,0.0263671875
1451498279551,0.0263671875
1451498280793,0.025390625
1451498282038,0.0244140625
1451498283276,0.025390625
1451498284518,0.0263671875
1451498285798,0.02734375
1451498287002,0.025390625
1451498288243,0.02734375
1451498289493,0.0263671875
1451498290741,0.0244140625
1451498291985,0.0234375
1451498293233,0.0224609375
1451498294510,0.0263671875
1451498295998,0.02734375
1451498297318,0.025390625
1451498298554,0.0263671875
1451498299798,0.0380859375
1451498301038,0.02734375
1451498302277,0.0234375
1451498303519,0.0234375
1451498305795,0.0234375
1451498306041,0.025390625
1451498307283,0.0263671875
1451498308526,0.02734375
1451498311682,0.02734375
1451498313068,0.025390625
1451498315897,0.0263671875
1451498317141,0.025390625
1451498318377,0.0234375
1451498319617,0.025390625
1451498322046,0.0234375
1451498323290,0.0244140625
1451498324530,0.025390625
1451498325800,0.0263671875
1451498327014,0.0263671875
1451498328265,0.0263671875
1451498329511,0.025390625
1451498330755,0.0234375
1451498332039,0.0234375
1451498335802,0.0263671875
1451498336072,0.0234375
1451498337314,0.0244140625
1451498338554,0.025390625
1451498339800,0.0244140625
1451498341042,0.0244140625
1451498342285,0.025390625
1451498343523,0.02734375
1451498345947,0.0244140625
1451498347195,0.0263671875
1451498348443,0.02734375
1451498349688,0.0263671875
1451498350934,0.025390625
1451498352234,0.0234375
1451498353718,0.0244140625
1451498355803,0.0244140625
1451498356233,0.025390625
1451498357475,0.0263671875
1451498358717,0.0263671875
1451498359963,0.0263671875
1451498361202,0.0263671875
1451498362451,0.0263671875
1451498363686,0.0234375
1451498365802,0.0234375
1451498366178,0.0224609375
1451498367421,0.0234375
1451498368666,0.0234375
1451498369918,0.0244140625
1451498371183,0.025390625
1451498373317,0.0234375
1451498374555,0.0244140625
1451498376857,0.0322265625
1451498378099,0.025390625
1451498379342,0.025390625
1451498380580,0.0244140625
1451498381822,0.0224609375
1451498383067,0.0224609375
1451498384317,0.021484375
1451498385805,0.025390625
1451498386809,0.025390625
1451498388145,0.0390625
1451498389621,0.0263671875
1451498390876,0.0244140625
1451498392118,0.0224609375
1451498393360,0.0224609375
1451498394596,0.0244140625
1451498395843,0.0244140625
1451498397085,0.025390625
1451498398323,0.0263671875
1451498399605,0.017578125
1451498403685,0.0361328125
1451498407774,0.0322265625
1451498413081,0.0322265625
1451498416229,0.0244140625
1451498419604,0.033203125
1451498425811,0.03125
1451498428627,0.0322265625
1451498432416,0.0185546875
1451498435816,0.0283203125
1451498438411,0.0322265625
1451498441521,0.0322265625
1451498447262,0.033203125
1451498453135,0.02734375
1451498459174,0.0322265625
1451498461766,0.03125
1451498465816,0.0341796875
1451498468075,0.0380859375
1451498471517,0.0322265625
1451498475816,0.033203125
1451498480841,0.0302734375
1451498486248,0.0234375
1451498492101,0.0341796875
1451498496091,0.017578125
1451498501694,0.0322265625
1451498507623,0.029296875
1451498510093,0.0341796875
1451498512717,0.0234375
1451498518160,0.0322265625
1451498521415,0.03515625
1451498524517,0.02734375
1451498527048,0.033203125
1451498530850,0.033203125
1451498536757,0.033203125
1451498540061,0.02734375
1451498545828,0.03125
1451498548613,0.0302734375
1451498550097,0.02734375
1451498556722,0.0322265625
1451498562929,0.029296875
1451498568906,0.03515625
1451498572824,0.0341796875
1451498575833,0.0234375
1451498580987,0.025390625
1451498584142,0.0263671875
1451498587496,0.02734375
1451498591387,0.0361328125
1451498595646,0.0322265625
1451498599198,0.0361328125
1451498602299,0.033203125
1451498606067,0.03125
1451498609025,0.0302734375
1451498612260,0.029296875
1451498615580,0.017578125
1451498617503,0.017578125
1451498620511,0.025390625
1451498625208,0.0283203125
1451498630133,0.0302734375
1451498633287,0.03125
1451498636702,0.0361328125
1451498640830,0.0263671875
1451498643927,0.0263671875
1451498646895,0.0283203125
1451498650642,0.037109375
1451498655212,0.03125
1451498659313,0.0322265625
1451498665212,0.029296875
1451498669104,0.0400390625
1451498672657,0.0302734375
1451498676869,0.01953125
1451498680116,0.0283203125
1451498682960,0.037109375
1451498686123,0.03125
1451498691944,0.03125
1451498695216,0.0283203125
1451498700515,0.033203125
1451498703393,0.0322265625
1451498708628,0.03515625
1451498718389,0.0322265625
1451498725224,0.0322265625
1451498730355,0.033203125
1451498734010,0.033203125
1451498743113,0.025390625
1451498748964,0.033203125
1451498755225,0.025390625
1451498757471,0.0322265625
1451498762972,0.029296875
1451498767285,0.029296875
1451498773116,0.029296875
1451498777392,0.0283203125
1451498788398,0.033203125
1451498793896,0.0322265625
1451498797535,0.0185546875
1451498800760,0.03125
1451498803658,0.0341796875
1451498807493,0.025390625
1451498810844,0.033203125
1451498815232,0.02734375
1451498818016,0.03125
1451498821526,0.03515625
1451498827372,0.033203125
1451498833288,0.0341796875
1451498837439,0.029296875
1451498841544,0.03125
1451498845256,0.029296875
1451498848489,0.03125
1451498855250,0.029296875
1451498860052,0.0361328125
1451498865239,0.03125
1451498870018,0.03515625
1451498873926,0.03125
1451498877489,0.033203125
1451498881238,0.0390625
1451498885252,0.03125
1451498887580,0.033203125
1451498890937,0.0341796875
1451498895243,0.033203125
1451498897488,0.0302734375
1451498901288,0.0361328125
1451498905243,0.03515625
1451498907851,0.037109375
1451498913504,0.0322265625
1451498917209,0.0400390625
1451498920283,0.0390625
1451498926064,0.0361328125
1451498928866,0.0322265625
1451498935247,0.0341796875
1451498940064,0.0361328125
1451498949733,0.03515625
1451498953070,0.0390625
1451498956512,0.0361328125
1451498961653,0.0390625
1451498967184,0.03515625
1451498970430,0.033203125
1451498973945,0.0283203125
1451498978732,0.017578125
1451498981646,0.0341796875
1451498985497,0.0302734375
1451498988727,0.037109375
1451498995256,0.033203125
1451498999939,0.0322265625
1451499005270,0.029296875
1451499010684,0.0322265625
1451499022234,0.0302734375
1451499027769,0.0322265625
1451499032808,0.0361328125
1451499038725,0.0234375
1451499041605,0.0341796875
1451499045261,0.033203125
1451499050156,0.0302734375
1451499053129,0.03515625
1451499056757,0.0283203125
1451499059644,0.0234375
1451499063104,0.029296875
1451499066529,0.0283203125
1451499069730,0.03515625
1451499073264,0.0341796875
1451499076692,0.0341796875
1451499080553,0.041015625
1451499083092,0.0302734375
1451499085745,0.0341796875
1451499088766,0.037109375
1451499092228,0.0322265625
1451499099098,0.017578125
1451499105528,0.02734375
1451499115774,0.03515625
1451499118624,0.0341796875
1451499122155,0.0341796875
1451499126175,0.037109375
1451499128810,0.0322265625
1451499132415,0.03125
1451499138361,0.03125
1451499142236,0.03515625
1451499148689,0.0224609375
1451499151481,0.03515625
1451499155280,0.0322265625
1451499158314,0.0302734375
1451499163419,0.03125
1451499166613,0.0322265625
1451499169940,0.0322265625
1451499173498,0.025390625
1451499179295,0.0361328125
1451499182138,0.0302734375
1451499185518,0.0380859375
1451499188366,0.029296875
1451499195282,0.03515625
1451499199528,0.0361328125
1451499203000,0.033203125
1451499206319,0.033203125
1451499220059,0.0224609375
1451499223736,0.029296875
1451499226975,0.0302734375
1451499232547,0.03515625
1451499235909,0.0302734375
1451499239224,0.0361328125
1451499245291,0.02734375
1451499250119,0.0341796875
1451499253878,0.037109375
1451499259256,0.033203125
1451499262383,0.029296875
1451499266215,0.033203125
1451499271947,0.03125
1451499275299,0.02734375
1451499279010,0.017578125
1451499281926,0.03515625
1451499285447,0.03125
1451499288907,0.03515625
1451499292592,0.0361328125
1451499295404,0.03125
1451499298549,0.03125
1451499301275,0.0234375
1451499305300,0.029296875
1451499308574,0.0302734375
1451499311915,0.037109375
1451499317439,0.041015625
1451499323810,0.03515625
1451499326659,0.03515625
1451499333092,0.037109375
1451499336310,0.0361328125
1451499341237,0.017578125
1451499343459,0.033203125
1451499346922,0.03515625
1451499350388,0.0361328125
1451499353188,0.0390625
1451499358843,0.0361328125
1451499365304,0.0322265625
1451499367547,0.0341796875
1451499373852,0.0302734375
1451499379085,0.0341796875
1451499381719,0.0302734375
1451499385571,0.03515625
1451499388500,0.0380859375
1451499393417,0.0361328125
1451499399321,0.0244140625
1451499407054,0.025390625
1451499412359,0.029296875
1451499415840,0.0234375
1451499419886,0.0361328125
1451499423351,0.0380859375
1451499429085,0.037109375
1451499435313,0.0380859375
1451499437683,0.037109375
1451499441539,0.0322265625
1451499445314,0.0400390625
1451499447720,0.0380859375
1451499450781,0.0419921875
1451499455315,0.037109375
1451499457536,0.033203125
1451499460894,0.0341796875
1451499464109,0.0390625
1451499467385,0.0341796875
1451499473310,0.0390625
1451499476645,0.03515625
1451499480231,0.0390625
1451499485798,0.037109375
1451499490089,0.0322265625
1451499493463,0.03515625
1451499497422,0.033203125
1451499501268,0.03125
1451499504086,0.03515625
1451499507781,0.02734375
1451499511312,0.0400390625
1451499515324,0.0361328125
1451499520337,0.0380859375
1451499523051,0.033203125
1451499525326,0.017578125
1451499531233,0.0283203125
1451499535331,0.0322265625
1451499538264,0.0283203125
1451499541360,0.0390625
1451499545327,0.02734375
1451499549970,0.041015625
1451499553560,0.03515625
1451499559299,0.037109375
1451499563219,0.02734375
1451499569220,0.0341796875
1451499572109,0.0322265625
1451499575331,0.041015625
1451499578284,0.0361328125
1451499581574,0.0224609375
1451499586969,0.0322265625
1451499590076,0.0361328125
1451499593736,0.0322265625
1451499597438,0.0322265625
1451499600601,0.0302734375
1451499603417,0.0263671875
1451499606786,0.0390625
1451499610736,0.03515625
1451499615337,0.033203125
1451499619844,0.0380859375
1451499623242,0.0283203125
1451499626885,0.0380859375
1451499629991,0.0302734375
1451499633524,0.0283203125
1451499636594,0.0341796875
1451499645653,0.0380859375
1451499649672,0.0302734375
1451499652670,0.0283203125
1451499655885,0.0322265625
1451499659502,0.0361328125
1451499665342,0.017578125
1451499670945,0.017578125
1451499677012,0.03515625
1451499682871,0.037109375
1451499688036,0.0400390625
1451499693867,0.0302734375
1451499697361,0.029296875
1451499705352,0.033203125
1451499707178,0.0283203125
1451499710349,0.0361328125
1451499714215,0.0361328125
1451499717316,0.0390625
1451499720611,0.03515625
1451499723625,0.03125
1451499726885,0.0380859375
1451499730408,0.033203125
1451499735353,0.0419921875
1451499737347,0.03515625
1451499742557,0.0390625
1451499745680,0.0263671875
1451499748976,0.037109375
1451499752653,0.033203125
1451499758142,0.0302734375
1451499764209,0.017578125
1451499769515,0.0341796875
1451499772790,0.0390625
1451499776362,0.0361328125
1451499779379,0.0400390625
1451499785400,0.033203125
1451499788412,0.03515625
1451499793863,0.033203125
1451499795359,0.0263671875
1451499800484,0.025390625
1451499806107,0.0302734375
1451499811818,0.0400390625
1451499817449,0.0322265625
1451499821419,0.017578125
1451499829809,0.0322265625
1451499839250,0.0341796875
1451499844189,0.033203125
1451499847883,0.03515625
1451499853682,0.037109375
1451499856676,0.03515625
1451499860017,0.0361328125
1451499863511,0.03515625
1451499866698,0.03125
1451499874101,0.033203125
1451499875369,0.017578125
1451499881696,0.037109375
1451499885372,0.0361328125
1451499888199,0.0322265625
1451499891391,0.0283203125
1451499896374,0.03125
1451499899999,0.0361328125
1451499905589,0.029296875
1451499912072,0.033203125
1451499915377,0.03125
1451499918503,0.03515625
1451499921980,0.03125
1451499927897,0.0283203125
1451499931303,0.029296875
1451499937320,0.0302734375
1451499940509,0.0341796875
1451499948752,0.0341796875
1451499952702,0.041015625
1451499956367,0.0302734375
1451499962362,0.0341796875
1451499965900,0.0283203125
1451499968729,0.0302734375
1451499972419,0.0302734375
1451499975480,0.03125
1451499978668,0.037109375
1451499982429,0.0400390625
1451499988057,0.0341796875
1451499991286,0.0419921875
1451499995467,0.0263671875
1451500000619,0.0380859375
1451500009967,0.0302734375
1451500012921,0.0361328125
1451500016004,0.03515625
1451500018810,0.0205078125
1451500020055,0.033203125
1451500021304,0.0244140625
1451500022551,0.0263671875
1451500023801,0.0263671875
1451500025396,0.0263671875
1451500026701,0.0283203125
1451500027957,0.025390625
1451500029196,0.0234375
1451500031628,0.02734375
1451500032862,0.0234375
1451500035391,0.02734375
1451500036527,0.025390625
1451500037767,0.025390625
1451500040203,0.02734375
1451500041453,0.0263671875
1451500042700,0.0224609375
1451500043942,0.02734375
1451500045396,0.0244140625
1451500046848,0.0263671875
1451500048092,0.0234375
1451500049326,0.025390625
1451500050569,0.0234375
1451500051809,0.0244140625
1451500053056,0.0224609375
1451500055397,0.0244140625
1451500055538,0.0263671875
1451500056780,0.0234375
1451500058020,0.0244140625
1451500060464,0.0244140625
1451500061715,0.025390625
1451500063963,0.0244140625
1451500065943,0.0234375
1451500067189,0.0263671875
1451500068433,0.0263671875
1451500069676,0.025390625
1451500070914,0.0234375
1451500072154,0.0244140625
1451500073396,0.0244140625
1451500075396,0.0234375
1451500075874,0.0263671875
1451500077121,0.0234375
1451500078367,0.0224609375
1451500079615,0.0263671875
1451500080873,0.0234375
1451500082360,0.0244140625
1451500083720,0.0244140625
1451500085418,0.0234375
1451500086190,0.0234375
1451500087436,0.0234375
1451500088670,0.0234375
1451500089913,0.0244140625
1451500091155,0.025390625
1451500092391,0.025390625
1451500093637,0.0244140625
1451500095419,0.0244140625
1451500097327,0.0244140625
1451500098574,0.0224609375
1451500101012,0.0234375
1451500102512,0.025390625
1451500103979,0.0419921875
1451500105401,0.0234375
1451500106473,0.0234375
1451500107717,0.0244140625
1451500110147,0.0263671875
1451500111392,0.02734375
1451500112632,0.025390625
1451500113868,0.0234375
1451500115402,0.0244140625
1451500116360,0.0234375
1451500117604,0.0234375
1451500118849,0.0234375
1451500120091,0.0234375
1451500123736,0.025390625
1451500126398,0.0263671875
1451500127640,0.0234375
1451500128878,0.0234375
1451500130118,0.025390625
1451500131360,0.025390625
1451500132607,0.025390625
1451500133849,0.0263671875
1451500135406,0.0234375
1451500136373,0.0224609375
1451500137590,0.02734375
1451500139036,0.0263671875
1451500141658,0.0224609375
1451500142906,0.025390625
1451500144147,0.025390625
1451500145405,0.025390625
1451500146627,0.0263671875
1451500147865,0.02734375
1451500149107,0.0263671875
1451500150349,0.02734375
1451500151587,0.0244140625
1451500152835,0.0234375
1451500154078,0.0224609375
1451500155428,0.025390625
1451500156578,0.0234375
1451500157816,0.0234375
1451500159299,0.0224609375
1451500160753,0.0234375
1451500161999,0.02734375
1451500163239,0.025390625
1451500165409,0.025390625
1451500165753,0.0263671875
1451500166994,0.0263671875
1451500169427,0.025390625
1451500170662,0.0263671875
1451500171908,0.0263671875
1451500173157,0.025390625
1451500175409,0.0244140625
1451500175699,0.02734375
1451500176945,0.02734375
1451500464189,0.037109375
1451500468874,0.03125
1451500473626,0.0390625
1451500477129,0.03125
1451500480832,0.037109375
1451500493938,0.0302734375
1451500499908,0.03515625
1451500503155,0.03515625
1451500506816,0.0341796875
1451500512706,0.0341796875
1451500516047,0.03125
1451500521294,0.017578125
1451500526546,0.033203125
1451500529727,0.025390625
1451500534636,0.0361328125
1451500540470,0.03125
1451500543869,0.0341796875
1451500547657,0.0283203125
1451500553150,0.0341796875
1451500556229,0.0283203125
1451500557751,0.017578125
1451500562528,0.03515625
1451500568881,0.037109375
1451500571876,0.0361328125
1451500577366,0.0380859375
1451500580728,0.02734375
1451500584425,0.01953125
1451500590490,0.0361328125
1451500594058,0.033203125
1451500597671,0.0361328125
1451500601049,0.033203125
1451500606364,0.037109375
1451500611147,0.03515625
1451500616744,0.033203125
1451500621020,0.0263671875
1451500626761,0.025390625
1451500632304,0.03515625
1451500635878,0.0322265625
1451500638913,0.02734375
1451500642593,0.0234375
1451500645592,0.0322265625
1451500818281,0.025390625
1451500822566,0.03125
1451500825822,0.033203125
1451500829023,0.033203125
1451500833187,0.03125
1451500836284,0.033203125
1451500839744,0.0234375
1451500845289,0.0400390625
1451500848838,0.0322265625
1451500854809,0.0400390625
1451500862566,0.029296875
1451500865330,0.037109375
1451500868785,0.0322265625
1451500872639,0.0302734375
1451500878508,0.02734375
1451500884035,0.0361328125
1451500889984,0.03515625
1451500893716,0.037109375
1451500897491,0.029296875
1451500902569,0.0283203125
1451500908108,0.0302734375
1451500911249,0.0390625
1451500916639,0.0341796875
1451500919622,0.033203125
1451500923001,0.0380859375
1451500929757,0.041015625
1451500933430,0.0341796875
1451500937447,0.0234375
1451500941367,0.0244140625
1451500944434,0.0390625
1451500950409,0.03125
1451500954091,0.0380859375
1451500957786,0.0361328125
1451500963226,0.033203125
1451500969037,0.0322265625
1451500972584,0.0283203125
1451500975947,0.03515625
1451500977447,0.017578125
1451500983772,0.0341796875
1451500987407,0.0390625
1451500992857,0.03125
1451500998638,0.0400390625
1451501002588,0.029296875
1451501007247,0.0390625
1451501013486,0.0263671875
1451501016676,0.03125
1451501019855,0.03125
1451501023785,0.033203125
1451501027487,0.0361328125
1451501033263,0.029296875
1451501036287,0.0302734375
1451501040338,0.0400390625
1451501043290,0.0361328125
1451501046849,0.021484375
1451501050273,0.0322265625
1451501056262,0.02734375
1451501062597,0.0302734375
1451501065783,0.0263671875
1451501068830,0.0380859375
1451501075307,0.0419921875
1451501078329,0.0302734375
1451501083726,0.0341796875
1451501086851,0.0322265625
1451501092735,0.033203125
1451501098578,0.0322265625
1451501102595,0.0380859375
1451501105619,0.03125
1451501108900,0.0341796875
1451501115209,0.033203125
1451501118217,0.029296875
1451501124134,0.0400390625
1451501127447,0.02734375
1451501130637,0.0341796875
1451501133957,0.0322265625
1451501137404,0.03125
1451501140977,0.03515625
1451501145917,0.03515625
1451501148826,0.037109375
1451501155009,0.03125
1451501158699,0.03125
1451501162604,0.03515625
1451501165436,0.037109375
1451501169127,0.03125
1451501172605,0.03515625
1451501173845,0.0380859375
1451501178784,0.0302734375
1451501184603,0.03125
1451501189847,0.0283203125
1451501193518,0.0322265625
1451501196500,0.0341796875
1451501200139,0.0302734375
1451501203982,0.033203125
1451501212615,0.0302734375
1451501218610,0.0341796875
1451501222610,0.0302734375
1451501227941,0.03125
1451501232614,0.02734375
1451501234880,0.0380859375
1451501237985,0.03125
1451501242613,0.0322265625
1451501245160,0.03125
1451501248392,0.0263671875
1451501253755,0.0263671875
1451501257727,0.0283203125
1451501261360,0.037109375
1451501266733,0.0341796875
1451501272618,0.033203125
1451501275350,0.0400390625
1451501278671,0.0361328125
1451501282619,0.037109375
1451501284906,0.0400390625
1451501288732,0.0361328125
1451501291445,0.033203125
1451501294745,0.03515625
1451501301406,0.03125
1451501307303,0.03125
1451501310917,0.0283203125
1451501316250,0.0390625
1451501319600,0.0390625
1451501325332,0.03515625
1451501332628,0.0361328125
1451501334583,0.037109375
1451501335895,0.0419921875
1451501347755,0.033203125
1451501353324,0.02734375
1451501359108,0.0341796875
1451501363007,0.03515625
1451501368982,0.0361328125
1451501377261,0.025390625
1451501381247,0.0361328125
1451501384984,0.037109375
1451501389529,0.0361328125
1451501392753,0.033203125
1451501396470,0.041015625
1451501399794,0.0322265625
1451501402907,0.029296875
1451501408440,0.03125
1451501412638,0.0283203125
1451501415199,0.033203125
1451501418515,0.0322265625
1451501422776,0.0205078125
1451501428046,0.033203125
1451501433711,0.0341796875
1451501437188,0.03125
1451501442639,0.0283203125
1451501448392,0.0380859375
1451501452640,0.0302734375
1451501454814,0.0302734375
1451501460529,0.0380859375
1451501463636,0.029296875
1451501467128,0.033203125
1451501471191,0.033203125
1451501474777,0.0400390625
1451501478822,0.017578125
1451501482783,0.017578125
1451501487585,0.03515625
1451501490816,0.0361328125
1451501496926,0.0283203125
1451501503055,0.0263671875
1451501513443,0.0380859375
1451501517272,0.033203125
1451501521026,0.03125
1451501527017,0.0380859375
1451501530165,0.0361328125
1451501533508,0.0341796875
1451501539839,0.041015625
1451501543747,0.017578125
1451501546757,0.03515625
1451501552655,0.0341796875
1451501553663,0.0283203125
1451501559294,0.02734375
1451501564845,0.03515625
1451501568183,0.03125
1451501572658,0.041015625
1451501575212,0.041015625
1451501578589,0.029296875
1451501582657,0.033203125
1451501585421,0.0341796875
1451501588978,0.0322265625
1451501594789,0.03125
1451501600784,0.03515625
1451501608509,0.0419921875
1451501611285,0.03515625
1451501616758,0.029296875
1451501620923,0.0341796875
1451501623960,0.029296875
1451501629654,0.037109375
1451501635251,0.0322265625
1451501638765,0.0322265625
1451501641776,0.033203125
1451501645997,0.0390625
1451501648901,0.0302734375
1451501652569,0.03125
1451501656006,0.0341796875
1451501658822,0.03515625
1451501663265,0.017578125
1451501666145,0.033203125
1451501674863,0.0322265625
1451501678221,0.0283203125
1451501681728,0.03515625
1451501687722,0.03125
1451501691283,0.03125
1451501697446,0.0322265625
1451501700978,0.033203125
1451501706654,0.02734375
1451501714104,0.0380859375
1451501716973,0.0263671875
1451501721215,0.0283203125
1451501726002,0.0380859375
1451501728020,0.0341796875
1451501733577,0.0302734375
1451501739134,0.03125
1451501742360,0.0341796875
1451501746017,0.033203125
1451501749797,0.03125
1451501753016,0.03125
1451501756375,0.03515625
1451501759691,0.0380859375
1451501763244,0.0302734375
1451501766438,0.033203125
1451501772651,0.0390625
1451501776741,0.0419921875
1451501782028,0.029296875
1451501786009,0.0283203125
1451501789151,0.0380859375
1451501793224,0.0224609375
1451501794470,0.0302734375
1451501796904,0.02734375
1451501798257,0.0283203125
1451501799755,0.025390625
1451501801017,0.0244140625
1451501802261,0.0283203125
1451501803505,0.025390625
1451501806022,0.0234375
1451501807158,0.02734375
1451501808400,0.02734375
1451501809656,0.0302734375
1451501810880,0.0263671875
1451501812127,0.0263671875
1451501813368,0.02734375
1451501814619,0.0263671875
1451501816013,0.0224609375
1451501817107,0.02734375
1451501818538,0.0234375
1451501820018,0.0234375
1451501821238,0.03125
1451501822480,0.0234375
1451501823724,0.0224609375
1451501826017,0.0263671875
1451501826251,0.025390625
1451501827491,0.0234375
1451501828737,0.0224609375
1451501831168,0.0244140625
1451501832417,0.0263671875
1451501833674,0.0244140625
1451501834914,0.025390625
1451501836206,0.0234375
1451501837462,0.0263671875
1451501838952,0.0224609375
1451501841049,0.0234375
1451501842287,0.0234375
1451501844255,0.03515625
1451501846018,0.02734375
1451501846730,0.0263671875
1451501847978,0.0244140625
1451501849223,0.0234375
1451501850469,0.025390625
1451501851721,0.025390625
1451501852969,0.0224609375
1451501856019,0.0263671875
1451501857051,0.0244140625
1451501858296,0.0263671875
1451501859535,0.02734375
1451501860776,0.02734375
1451501862012,0.0234375
1451501863263,0.0244140625
1451501864498,0.0244140625
1451501866030,0.0234375
1451501866977,0.0234375
1451501868223,0.0234375
1451501869471,0.0244140625
1451501870717,0.025390625
1451501871965,0.0234375
1451501873214,0.025390625
1451501874710,0.0263671875
1451501876180,0.025390625
1451501877436,0.0224609375
1451501878679,0.0244140625
1451501879925,0.02734375
1451501881161,0.02734375
1451501882401,0.025390625
1451501883641,0.0234375
1451501884877,0.0234375
1451501886119,0.0234375
1451501887362,0.0244140625
1451501888614,0.0224609375
1451501891054,0.025390625
1451501892298,0.0234375
1451501893575,0.0224609375
1451501896034,0.02734375
1451501896451,0.025390625
1451501897707,0.02734375
1451501898928,0.0283203125
1451501900161,0.0244140625
1451501901946,0.0244140625
1451501903656,0.0224609375
1451501906025,0.0263671875
1451501906256,0.0244140625
1451501907506,0.0234375
1451501908755,0.0263671875
1451501910237,0.0234375
1451501911671,0.025390625
1451501912907,0.0244140625
1451501914152,0.0224609375
1451501916028,0.0322265625
1451501916636,0.0224609375
1451501917880,0.0224609375
1451501919122,0.0224609375
1451501921555,0.025390625
1451501922797,0.0263671875
1451501924045,0.0263671875
1451501926039,0.025390625
1451501926551,0.025390625
1451501927800,0.0234375
1451501929048,0.0224609375
1451501930526,0.025390625
1451501931988,0.0263671875
1451501933223,0.0263671875
1451501934471,0.0263671875
1451501936029,0.0263671875
1451501936955,0.025390625
1451501938199,0.0263671875
1451501939439,0.0263671875
1451501940679,0.0263671875
1451501941922,0.0283203125
1451501943166,0.0263671875
1451501944418,0.0263671875
1451501946030,0.025390625
1451501946912,0.0244140625
1451501948159,0.0224609375
1451501949499,0.0244140625
1451501950979,0.025390625
1451501952241,0.0224609375
1451501953488,0.0244140625
1451501954734,0.0244140625
1451501956038,0.025390625
1451501957216,0.0244140625
1451501958460,0.0244140625
1451501959702,0.0234375
1451501961588,0.0244140625
1451501962845,0.0263671875
1451501964095,0.0224609375
1451501966487,0.02734375
1451501968104,0.025390625
1451501969340,0.0263671875
1451501970584,0.025390625
1451501973014,0.0234375
1451501974252,0.0234375
1451501976035,0.025390625
1451501976725,0.0234375
1451501977969,0.0224609375
1451501979211,0.0224609375
1451501980457,0.0224609375
1451501981697,0.0234375
1451501982952,0.0224609375
1451501984200,0.0263671875
1451501986042,0.0380859375
1451501986916,0.02734375
1451501988374,0.0263671875
1451501989633,0.02734375
1451501990875,0.0263671875
1451501992120,0.0263671875
1451501993363,0.0263671875
1451501994605,0.025390625
1451501996038,0.0263671875
1451501997098,0.0263671875
1451501998338,0.0341796875
1451501999580,0.0244140625
1451502000826,0.0224609375
1451502002081,0.0283203125
1451502003321,0.0263671875
1451502004567,0.025390625
1451502006039,0.0263671875
1451502007383,0.0244140625
1451502008646,0.0263671875
1451502009892,0.017578125
1451502012328,0.03125
1451502018705,0.0283203125
1451502022818,0.025390625
1451502026268,0.017578125
1451502031925,0.0302734375
1451502036043,0.029296875
1451502041621,0.03125
1451502046049,0.0341796875
1451502049205,0.0322265625
1451502056046,0.0302734375
1451502058767,0.033203125
1451502062165,0.0361328125
1451502063462,0.0185546875
1451502069994,0.02734375
1451502074137,0.0380859375
1451502077529,0.0341796875
1451502081578,0.0283203125
1451502086191,0.0205078125
1451502088657,0.03515625
1451502092232,0.029296875
1451502096092,0.0341796875
1451502106056,0.0341796875
1451502109568,0.033203125
1451502112651,0.0361328125
1451502118667,0.0302734375
1451502121724,0.025390625
1451502126083,0.033203125
1451502132364,0.0302734375
1451502136058,0.0244140625
1451502136880,0.0205078125
1451502143097,0.017578125
1451502149328,0.0361328125
1451502152435,0.0341796875
1451502156735,0.029296875
1451502161736,0.033203125
1451502166062,0.0302734375
1451502176060,0.02734375
1451502180781,0.0263671875
1451502184293,0.037109375
1451502187947,0.02734375
1451502191238,0.029296875
1451502194827,0.0283203125
1451502198201,0.0341796875
1451502204550,0.02734375
1451502208039,0.02734375
1451502212419,0.0390625
1451502216462,0.0302734375
1451502219632,0.0302734375
1451502223037,0.033203125
1451502227212,0.0322265625
1451502230662,0.03515625
1451502234077,0.0341796875
1451502240394,0.0244140625
1451502243218,0.03515625
1451502246612,0.03515625
1451502250587,0.0302734375
1451502254154,0.0322265625
1451502257398,0.029296875
1451502261062,0.03125
1451502271906,0.0302734375
1451502276075,0.033203125
1451502279247,0.0283203125
1451502282654,0.0390625
1451502286222,0.0302734375
1451502289897,0.02734375
1451502293801,0.029296875
1451502299450,0.03125
1451502303261,0.02734375
1451502307217,0.0341796875
1451502310398,0.03515625
1451502316262,0.0322265625
1451502319367,0.0322265625
1451502327232,0.017578125
1451502330503,0.0244140625
1451502338018,0.0322265625
1451502341524,0.0283203125
1451502346083,0.037109375
1451502351508,0.0322265625
1451502354950,0.0283203125
1451502359977,0.03125
1451502363752,0.0322265625
1451502367604,0.033203125
1451502371061,0.03125
1451502377017,0.033203125
1451502383056,0.0322265625
1451502386543,0.029296875
1451502389887,0.0341796875
1451502396680,0.0322265625
1451502400293,0.017578125
1451502402537,0.02734375
1451502408734,0.0390625
1451502412345,0.0322265625
1451502416361,0.0341796875
1451502421888,0.0390625
1451502426093,0.029296875
1451502428585,0.0302734375
1451502432161,0.0322265625
1451502437926,0.0302734375
1451502444617,0.0263671875
1451502451292,0.0322265625
1451502454673,0.0302734375
1451502457967,0.0390625
1451502461694,0.0263671875
1451502466099,0.03125
1451502468737,0.0234375
1451502474274,0.03515625
1451502478052,0.029296875
1451502483977,0.0361328125
1451502489732,0.0361328125
1451502496103,0.0302734375
1451502498859,0.0302734375
1451502502666,0.0341796875
1451502508703,0.0283203125
1451502512051,0.0302734375
1451502524643,0.0302734375
1451502528132,0.0341796875
1451502531474,0.03125
1451502536109,0.0341796875
1451502541792,0.021484375
1451502544814,0.0263671875
1451502548884,0.02734375
1451502551763,0.0263671875
1451502557726,0.03515625
1451502560716,0.033203125
1451502561958,0.0185546875
1451502568293,0.033203125
1451502574190,0.037109375
1451502579977,0.0380859375
1451502583348,0.03125
1451502587533,0.0341796875
1451502591493,0.03515625
1451502596131,0.033203125
1451502600184,0.033203125
1451502603477,0.03125
1451502607257,0.033203125
1451502610460,0.037109375
1451502613454,0.0341796875
1451502616629,0.0322265625
1451502619985,0.0390625
1451502623264,0.0341796875
1451502627094,0.0244140625
1451502630362,0.025390625
1451502634141,0.0244140625
1451502637786,0.0224609375
1451502641442,0.0361328125
1451502644524,0.03125
1451502648285,0.0341796875
1451502653618,0.041015625
1451502657779,0.03125
1451502662347,0.0341796875
1451502667670,0.0283203125
1451502670986,0.033203125
1451502679278,0.0244140625
1451502686128,0.02734375
1451502689551,0.033203125
1451502696160,0.033203125
1451502701788,0.03515625
1451502709620,0.0361328125
1451502712937,0.037109375
1451502716155,0.033203125
1451502721618,0.0380859375
1451502726401,0.03125
1451502729953,0.037109375
1451502733548,0.03515625
1451502736804,0.0390625
1451502740673,0.0322265625
1451502750018,0.017578125
1451502756137,0.0302734375
1451502761480,0.037109375
1451502767634,0.0283203125
1451502773544,0.0419921875
1451502776646,0.03125
1451502780221,0.03125
1451502783281,0.0302734375
1451502786737,0.03125
1451502792954,0.0283203125
1451502798765,0.0283203125
1451502802468,0.0283203125
1451502811888,0.029296875
1451502816144,0.0244140625
1451502819220,0.0322265625
1451502824915,0.033203125
1451502828552,0.03125
1451502832028,0.033203125
1451502836147,0.0341796875
1451502846148,0.0283203125
1451502851901,0.03515625
1451502856149,0.033203125
1451502862164,0.033203125
1451502868193,0.0205078125
1451502874096,0.0390625
1451502877839,0.03125
1451502883490,0.03515625
1451502886826,0.02734375
1451502890821,0.0380859375
1451502896940,0.0302734375
1451502902976,0.033203125
1451502906157,0.037109375
1451502909515,0.03125
1451502913954,0.033203125
1451502917024,0.0380859375
1451502920267,0.03515625
1451502926332,0.0361328125
1451502929952,0.0302734375
1451502933237,0.0400390625
1451502936833,0.0361328125
1451502940635,0.0380859375
1451502944368,0.0302734375
1451502947699,0.029296875
1451502950921,0.03125
1451502954596,0.033203125
1451502960487,0.037109375
1451502966396,0.0322265625
1451502969650,0.0263671875
1451502974311,0.0302734375
1451502977521,0.0283203125
1451502982492,0.0263671875
1451502988641,0.02734375
1451502996168,0.0283203125
1451502999605,0.0302734375
1451503003307,0.029296875
1451503007014,0.03125
1451503010524,0.0244140625
1451503016169,0.0341796875
1451503020093,0.03515625
1451503023532,0.0390625
1451503026973,0.0283203125
1451503030875,0.0341796875
1451503034980,0.037109375
1451503038028,0.03515625
1451503041748,0.0419921875
1451503046195,0.0263671875
1451503049308,0.017578125
1451503054132,0.037109375
1451503057383,0.037109375
1451503061092,0.03515625
1451503064038,0.03515625
1451503067211,0.0322265625
1451503079645,0.0234375
1451503083021,0.029296875
1451503086679,0.03515625
1451503092540,0.025390625
1451503098915,0.0361328125
1451503102222,0.0361328125
1451503106459,0.0302734375
1451503112417,0.017578125
1451503116184,0.033203125
1451503119048,0.03125
1451503122248,0.03125
1451503128089,0.03515625
1451503133926,0.0322265625
1451503138775,0.033203125
1451503141777,0.0322265625
1451503149358,0.037109375
1451503156188,0.0361328125
1451503159640,0.0341796875
1451503166209,0.0322265625
1451503172750,0.025390625
1451503176191,0.0341796875
1451503181088,0.0322265625
1451503184232,0.0302734375
1451503190265,0.0322265625
1451503196211,0.033203125
1451503199082,0.0361328125
1451503203146,0.03125
1451503206743,0.0361328125
1451503210299,0.0322265625
1451503219637,0.03125
1451503223649,0.033203125
1451503226708,0.0341796875
1451503229474,0.0283203125
1451503233089,0.0283203125
1451503238790,0.03515625
1451503247335,0.0390625
1451503250521,0.037109375
1451503254120,0.03515625
1451503257504,0.0341796875
1451503258946,0.03515625
1451503263749,0.0400390625
1451503266612,0.0380859375
1451503270564,0.033203125
1451503274503,0.029296875
1451503281180,0.03515625
1451503285016,0.033203125
1451503289273,0.025390625
1451503291909,0.0263671875
1451503296206,0.029296875
1451503298994,0.0322265625
1451503310684,0.03515625
1451503314627,0.033203125
1451503319811,0.0361328125
1451503323208,0.029296875
1451503326818,0.02734375
1451503330365,0.033203125
1451503333765,0.0322265625
1451503338192,0.033203125
1451503341727,0.0361328125
1451503350419,0.0322265625
1451503353794,0.03515625
1451503357001,0.0390625
1451503363046,0.0322265625
1451503366502,0.0341796875
1451503369687,0.0263671875
1451503376878,0.0322265625
1451503379918,0.0322265625
1451503383829,0.033203125
1451503387589,0.0322265625
1451503390878,0.041015625
1451503396533,0.0322265625
1451503399721,0.03125
1451503406236,0.033203125
1451503412197,0.029296875
1451503416221,0.0302734375
1451503425017,0.0322265625
1451503426283,0.037109375
1451503432980,0.03515625
1451503436393,0.037109375
1451503440059,0.0390625
1451503443043,0.029296875
1451503446702,0.0400390625
1451503452355,0.03125
1451503456227,0.0322265625
1451503459350,0.037109375
1451503463056,0.03125
1451503466247,0.03515625
1451503472182,0.037109375
1451503477671,0.03125
1451503482091,0.0361328125
1451503486232,0.0302734375
1451503489568,0.037109375
1451503496245,0.0283203125
1451503498972,0.0283203125
1451503504886,0.029296875
1451503508215,0.0341796875
1451503516234,0.033203125
1451503518308,0.03125
1451503523991,0.0380859375
1451503527670,0.0380859375
1451503531316,0.0302734375
1451503540766,0.029296875
1451503546629,0.0341796875
1451503549857,0.0341796875
1451503551103,0.0263671875
1451503552346,0.02734375
1451503553586,0.025390625
1451503554824,0.0263671875
1451503556254,0.029296875
1451503557318,0.0283203125
1451503558576,0.0244140625
1451503559821,0.0234375
1451503561071,0.0244140625
1451503562319,0.025390625
1451503563807,0.02734375
1451503566242,0.0234375
1451503566549,0.0263671875
1451503567792,0.025390625
1451503569036,0.037109375
1451503570276,0.0244140625
1451503571520,0.0244140625
1451503572759,0.025390625
1451503574001,0.0234375
1451503576243,0.025390625
1451503576529,0.02734375
1451503577767,0.025390625
1451503579015,0.0244140625
1451503580266,0.0263671875
1451503581510,0.0263671875
1451503582830,0.0390625
1451503584312,0.0263671875
1451503586254,0.025390625
1451503586817,0.0234375
1451503588059,0.0224609375
1451503589299,0.0234375
1451503590531,0.0244140625
1451503592255,0.0263671875
1451503593489,0.0263671875
1451503596246,0.0263671875
1451503597102,0.029296875
1451503598440,0.0224609375
1451503599916,0.0234375
1451503601169,0.0244140625
1451503602413,0.0263671875
1451503603655,0.025390625
1451503604895,0.025390625
1451503606247,0.0244140625
1451503607375,0.025390625
1451503608616,0.025390625
1451503609856,0.0263671875
1451503611096,0.0263671875
1451503612340,0.0263671875
1451503613584,0.025390625
1451503614829,0.0234375
1451503616259,0.0234375
1451503618675,0.025390625
1451503620138,0.025390625
1451503621388,0.0234375
1451503622628,0.02734375
1451503623870,0.02734375
1451503625112,0.02734375
1451503626346,0.0224609375
1451503627592,0.0244140625
1451503628833,0.0244140625
1451503630073,0.0234375
1451503631313,0.0234375
1451503632567,0.025390625
1451503633817,0.0263671875
1451503635062,0.02734375
1451503636312,0.0244140625
1451503637576,0.025390625
1451503639078,0.025390625
1451503640411,0.0244140625
1451503642833,0.0234375
1451503644077,0.0234375
1451503646261,0.0234375
1451503646583,0.0234375
1451503647823,0.03515625
1451503649064,0.025390625
1451503650310,0.0244140625
1451503652216,0.0263671875
1451503653472,0.0263671875
1451503656256,0.0234375
1451503657179,0.025390625
1451503658421,0.0244140625
1451503659663,0.0244140625
1451503660907,0.0234375
1451503662150,0.025390625
1451503663390,0.025390625
1451503664630,0.0263671875
1451503666256,0.0263671875
1451503667118,0.0244140625
1451503668361,0.025390625
1451503669609,0.0234375
1451503670859,0.037109375
1451503672104,0.0224609375
1451503673353,0.0263671875
1451503674659,0.0263671875
1451503676266,0.0263671875
1451503677468,0.0263671875
1451503678700,0.0234375
1451503679943,0.0224609375
1451503681184,0.0234375
1451503682424,0.0244140625
1451503683667,0.0234375
1451503684909,0.025390625
1451503686257,0.0263671875
1451503687393,0.0263671875
1451503688641,0.0263671875
1451503689888,0.0263671875
1451503691136,0.0244140625
1451503692384,0.033203125
1451503693626,0.0234375
1451503695094,0.0263671875
1451503696637,0.0244140625
1451503697893,0.025390625
1451503699139,0.0244140625
1451503700379,0.025390625
1451503701621,0.025390625
1451503702861,0.025390625
1451503704102,0.0263671875
1451503706268,0.025390625
1451503706592,0.0244140625
1451503707832,0.025390625
1451503709074,0.0263671875
1451503710322,0.0263671875
1451503712325,0.0224609375
1451503713911,0.0244140625
1451503716261,0.0224609375
1451503717292,0.025390625
1451503718529,0.0263671875
1451503719768,0.02734375
1451503721010,0.025390625
1451503722250,0.0234375
1451503723492,0.0234375
1451503726263,0.0224609375
1451503727173,0.025390625
1451503729611,0.0234375
1451503730864,0.0224609375
1451503732360,0.025390625
1451503733740,0.0234375
1451503734976,0.0263671875
1451503736273,0.0244140625
1451503737459,0.0234375
1451503738699,0.0244140625
1451503739943,0.025390625
1451503741189,0.0244140625
1451503742427,0.0263671875
1451503743670,0.0263671875
1451503744908,0.02734375
1451503746264,0.0263671875
1451503747408,0.02734375
1451503748654,0.0263671875
1451503749902,0.0244140625
1451503751194,0.0224609375
1451503752701,0.025390625
1451503753999,0.0234375
1451503756267,0.0263671875
1451503756519,0.0263671875
1451503757765,0.0263671875
1451503759008,0.0263671875
1451503760250,0.025390625
1451503761490,0.0224609375
1451503762732,0.0224609375
1451503763976,0.0224609375
1451503766277,0.0234375
1451503766511,0.025390625
1451503768109,0.017578125
1451503770559,0.029296875
1451503776802,0.017578125
1451503779453,0.037109375
1451503783529,0.0322265625
1451503786846,0.0322265625
1451503792937,0.0302734375
1451503798971,0.0302734375
1451503802418,0.0283203125
1451503803930,0.01953125
1451503809111,0.0302734375
1451503813080,0.0361328125
1451503817436,0.037109375
1451503821427,0.0302734375
1451503824974,0.03125
1451503829254,0.029296875
1451503833273,0.029296875
1451503837671,0.017578125
1451503840614,0.037109375
1451503844684,0.03125
1451503850689,0.03125
1451503854106,0.03125
1451503858144,0.03515625
1451503862003,0.02734375
1451503866299,0.033203125
1451503872100,0.0390625
1451503876281,0.0302734375
1451503880297,0.033203125
1451503886944,0.0361328125
1451503889857,0.029296875
1451503897504,0.0302734375
1451503900436,0.0263671875
1451503904421,0.03125
1451503910568,0.03515625
1451503917013,0.0341796875
1451503920709,0.033203125
1451503927548,0.0302734375
1451503931465,0.0283203125
1451503934931,0.025390625
1451503938102,0.025390625
1451503942241,0.025390625
1451503947163,0.0322265625
1451503950350,0.03515625
1451503953998,0.0361328125
1451503957803,0.0322265625
1451503963904,0.0341796875
1451503968550,0.0234375
1451503976631,0.033203125
1451503982642,0.0341796875
1451503986619,0.0341796875
1451503990068,0.0302734375
1451503996296,0.03515625
1451504001461,0.0341796875
1451504007754,0.02734375
1451504014849,0.03125
1451504017901,0.03125
1451504026301,0.03515625
1451504029985,0.0322265625
1451504036306,0.029296875
1451504040263,0.0419921875
1451504044124,0.0341796875
1451504046304,0.0244140625
1451504050871,0.033203125
1451504054169,0.0380859375
1451504057459,0.029296875
1451504063800,0.0380859375
1451504066785,0.0361328125
1451504069759,0.03125
1451504079334,0.03515625
1451504083009,0.0380859375
1451504088626,0.02734375
1451504095125,0.0302734375
1451504101100,0.033203125
1451504104990,0.0302734375
1451504109089,0.025390625
1451504116314,0.0380859375
1451504118554,0.029296875
1451504122717,0.03125
1451504126317,0.03125
1451504130000,0.037109375
1451504136539,0.017578125
1451504146320,0.03515625
1451504151257,0.037109375
1451504154505,0.0341796875
1451504160771,0.03515625
1451504166554,0.03515625
1451504170088,0.0283203125
1451504176321,0.03125
1451504180467,0.041015625
1451504183874,0.02734375
1451504190053,0.0341796875
1451504196536,0.0185546875
1451504200060,0.0380859375
1451504204083,0.0361328125
1451504207469,0.03125
1451504211444,0.0361328125
1451504217641,0.0322265625
1451504221339,0.03125
1451504226328,0.0322265625
1451504230735,0.0322265625
1451504234815,0.0283203125
1451504239114,0.0302734375
1451504243581,0.033203125
1451504246623,0.0302734375
1451504250582,0.0263671875
1451504254188,0.033203125
1451504257499,0.0390625
1451504261123,0.033203125
1451504264652,0.0302734375
1451504268192,0.0341796875
1451504271429,0.0341796875
1451504274365,0.02734375
1451504278326,0.0361328125
1451504283406,0.0390625
1451504290097,0.033203125
1451504294154,0.0361328125
1451504297848,0.0361328125
1451504303469,0.0322265625
1451504307304,0.03125
1451504311501,0.0400390625
1451504317969,0.017578125
1451504322530,0.0302734375
1451504326885,0.0263671875
1451504331265,0.037109375
1451504334734,0.0283203125
1451504338136,0.037109375
1451504342075,0.029296875
1451504346342,0.0400390625
1451504348702,0.0390625
1451504352016,0.0341796875
1451504356350,0.033203125
1451504359071,0.0283203125
1451504362856,0.03515625
1451504366422,0.029296875
1451504370150,0.0341796875
1451504376898,0.0341796875
1451504380525,0.0341796875
1451504383951,0.033203125
1451504388094,0.0302734375
1451504392340,0.0322265625
1451504396349,0.0361328125
1451504399282,0.033203125
1451504403210,0.02734375
1451504409607,0.03125
1451504413016,0.029296875
1451504416352,0.0361328125
1451504419612,0.03515625
1451504426353,0.0380859375
1451504429046,0.029296875
1451504436655,0.0185546875
1451504441385,0.03125
1451504448079,0.0283203125
1451504451571,0.0322265625
1451504455230,0.0322265625
1451504458956,0.0322265625
1451504462507,0.0283203125
1451504466359,0.0361328125
1451504469632,0.02734375
1451504473676,0.029296875
1451504477637,0.03125
1451504483422,0.0283203125
1451504489212,0.0341796875
1451504492575,0.0380859375
1451504499014,0.0341796875
1451504503486,0.033203125
1451504514898,0.0263671875
1451504518663,0.0283203125
1451504524996,0.029296875
1451504528654,0.029296875
1451504532799,0.0322265625
1451504536806,0.03515625
1451504540708,0.03125
1451504544787,0.03125
1451504549579,0.0224609375
1451504552852,0.0341796875
1451504556782,0.017578125
1451504558791,0.033203125
1451504562375,0.0341796875
1451504566372,0.0361328125
1451504569926,0.0341796875
1451504576373,0.0322265625
1451504584692,0.029296875
1451504588779,0.0380859375
1451504592718,0.0341796875
1451504596650,0.033203125
1451504599987,0.0380859375
1451504603921,0.0322265625
1451504607694,0.0322265625
1451504611582,0.033203125
1451504616377,0.03515625
1451504618950,0.0341796875
1451504622332,0.0283203125
1451504626378,0.0322265625
1451504630337,0.03125
1451504634060,0.03125
1451504637312,0.03125
1451504641230,0.0419921875
1451504646381,0.037109375
1451504649708,0.0341796875
1451504653039,0.03125
1451504659650,0.037109375
1451504666385,0.03125
1451504672109,0.033203125
1451504675198,0.0322265625
1451504679108,0.017578125
1451504686388,0.0322265625
1451504688794,0.0322265625
1451504695205,0.03125
1451504699057,0.0361328125
1451504702536,0.03515625
1451504707543,0.03125
1451504710373,0.033203125
1451504714167,0.0224609375
1451504717538,0.0283203125
1451504720894,0.0341796875
1451504727539,0.0263671875
1451504731930,0.0302734375
1451504736375,0.0380859375
1451504742498,0.0302734375
1451504748364,0.0302734375
1451504749893,0.021484375
1451504754649,0.03125
1451504760660,0.037109375
1451504763869,0.0322265625
1451504768291,0.0380859375
1451504772366,0.0302734375
1451504778275,0.03515625
1451504781803,0.0263671875
1451504788640,0.0322265625
1451504794319,0.0400390625
1451504801628,0.033203125
1451504804933,0.03515625
1451504808381,0.033203125
1451504818219,0.0380859375
1451504824380,0.033203125
1451504830287,0.03515625
1451504835025,0.0361328125
1451504838624,0.02734375
1451504842310,0.0390625
1451504845531,0.0341796875
1451504849053,0.0302734375
1451504855116,0.037109375
1451504861211,0.03515625
1451504867558,0.03515625
1451504870852,0.037109375
1451504874213,0.033203125
1451504880196,0.0380859375
1451504886232,0.02734375
1451504892377,0.0302734375
1451504898202,0.0380859375
1451504903597,0.0322265625
1451504909638,0.0361328125
1451504913064,0.033203125
1451504919769,0.017578125
1451504922906,0.02734375
1451504928387,0.033203125
1451504933888,0.041015625
1451504940900,0.033203125
1451504944983,0.03515625
1451504948832,0.037109375
1451504952172,0.033203125
1451504959213,0.0390625
1451504964198,0.0390625
1451504967685,0.0302734375
1451504972061,0.03125
1451504977572,0.03515625
1451504980016,0.0283203125
1451504983200,0.041015625
1451504986235,0.0361328125
1451504990526,0.03125
1451504994432,0.029296875
1451505000261,0.0380859375
1451505003902,0.03125
1451505007600,0.0341796875
1451505011880,0.0283203125
1451505016192,0.0322265625
1451505021727,0.0283203125
1451505028111,0.0322265625
1451505031128,0.033203125
1451505034505,0.0361328125
1451505038227,0.0380859375
1451505043102,0.017578125
1451505058776,0.0341796875
1451505062113,0.03515625
1451505065769,0.03515625
1451505069442,0.033203125
1451505075536,0.03515625
1451505080841,0.0380859375
1451505084204,0.0283203125
1451505090373,0.0322265625
1451505096273,0.0302734375
1451505099336,0.0361328125
1451505103244,0.03125
1451505107589,0.0390625
1451505113276,0.0390625
1451505119231,0.0361328125
1451505131543,0.041015625
1451505134791,0.03515625
1451505140970,0.029296875
1451505145112,0.025390625
1451505148767,0.0361328125
1451505153940,0.0361328125
1451505157962,0.0322265625
1451505161829,0.0185546875
1451505164907,0.017578125
1451505170934,0.0302734375
1451505177597,0.03125
1451505180090,0.0302734375
1451505183492,0.029296875
1451505189245,0.0400390625
1451505192271,0.03515625
1451505197600,0.041015625
1451505203151,0.0302734375
1451505207602,0.0361328125
1451505210494,0.0302734375
1451505217605,0.037109375
1451505222484,0.0322265625
1451505226316,0.0341796875
1451505229567,0.029296875
1451505235558,0.037109375
1451505239280,0.0341796875
1451505242723,0.0380859375
1451505248568,0.0380859375
1451505252138,0.03125
1451505256077,0.0341796875
1451505259401,0.03125
1451505263180,0.037109375
1451505269339,0.03125
1451505273061,0.037109375
1451505277610,0.037109375
1451505282665,0.0302734375
1451505288555,0.03125
1451505292054,0.029296875
1451505295573,0.0390625
1451505299281,0.0302734375
1451505303168,0.0322265625
1451505306420,0.033203125
1451505310820,0.0380859375
1451505317616,0.029296875
1451505318632,0.02734375
1451505319878,0.025390625
1451505321124,0.02734375
1451505322375,0.029296875
1451505323623,0.025390625
1451505325117,0.025390625
1451505327627,0.0244140625
1451505327849,0.02734375
1451505329090,0.0234375
1451505330330,0.0234375
1451505331570,0.0283203125
1451505332812,0.0244140625
1451505334058,0.0234375
1451505335290,0.0234375
1451505337621,0.0244140625
1451505337771,0.0234375
1451505339013,0.025390625
1451505340261,0.0234375
1451505342183,0.0244140625
1451505343676,0.0234375
1451505344942,0.025390625
1451505347624,0.02734375
1451505348042,0.0263671875
1451505349283,0.025390625
1451505350523,0.025390625
1451505351763,0.0244140625
1451505353005,0.0234375
1451505354241,0.0234375
1451505355493,0.0224609375
1451505357622,0.0263671875
1451505357986,0.0234375
1451505359236,0.0244140625
1451505360488,0.0244140625
1451505361984,0.0263671875
1451505363391,0.0263671875
1451505364629,0.0224609375
1451505365867,0.0234375
1451505367623,0.0244140625
1451505368349,0.02734375
1451505369591,0.02734375
1451505370835,0.0263671875
1451505372078,0.0263671875
1451505373318,0.0263671875
1451505374558,0.025390625
1451505375810,0.0234375
1451505377625,0.0224609375
1451505378301,0.0234375
1451505379547,0.0263671875
1451505380847,0.0244140625
1451505383584,0.0234375
1451505384802,0.0244140625
1451505386044,0.0244140625
1451505387630,0.0244140625
1451505388530,0.0234375
1451505389770,0.0244140625
1451505391009,0.0234375
1451505392251,0.0244140625
1451505393489,0.0244140625
1451505394739,0.0244140625
1451505395979,0.0234375
1451505397628,0.0234375
1451505398467,0.0234375
1451505399712,0.025390625
1451505401210,0.0234375
1451505403164,0.025390625
1451505404398,0.025390625
1451505406259,0.0234375
1451505407631,0.0263671875
1451505408725,0.0234375
1451505409965,0.0244140625
1451505412400,0.0234375
1451505413642,0.0234375
1451505414890,0.0234375
1451505416152,0.0263671875
1451505418919,0.0234375
1451505420155,0.0263671875
1451505421395,0.0263671875
1451505422637,0.025390625
1451505423877,0.0263671875
1451505425123,0.0263671875
1451505426362,0.02734375
1451505427632,0.025390625
1451505428838,0.0234375
1451505430082,0.0400390625
1451505431329,0.0224609375
1451505432577,0.025390625
1451505433821,0.025390625
1451505435069,0.0234375
1451505436319,0.0224609375
1451505437818,0.0234375
1451505439216,0.0234375
1451505440452,0.0263671875
1451505441696,0.0263671875
1451505442936,0.025390625
1451505444180,0.0263671875
1451505445421,0.0263671875
1451505447635,0.0263671875
1451505447939,0.025390625
1451505449177,0.0234375
1451505450415,0.0234375
1451505451657,0.0263671875
1451505452910,0.0263671875
1451505454158,0.0224609375
1451505455400,0.0234375
1451505457636,0.0244140625
1451505458299,0.0234375
1451505459546,0.0234375
1451505460789,0.0244140625
1451505462025,0.0263671875
1451505463777,0.0244140625
1451505465485,0.0244140625
1451505467911,0.0263671875
1451505469156,0.025390625
1451505470398,0.0234375
1451505471642,0.0234375
1451505472942,0.025390625
1451505474417,0.025390625
1451505475667,0.0234375
1451505477637,0.03125
1451505478135,0.0234375
1451505479382,0.0244140625
1451505480622,0.025390625
1451505481864,0.0263671875
1451505483108,0.0263671875
1451505484350,0.0263671875
1451505485595,0.0263671875
1451505487639,0.0263671875
1451505488079,0.025390625
1451505489330,0.025390625
1451505490573,0.0263671875
1451505491821,0.0244140625
1451505493273,0.0263671875
1451505494722,0.0234375
1451505495982,0.0244140625
1451505497640,0.0244140625
1451505498460,0.0244140625
1451505499703,0.0244140625
1451505500945,0.025390625
1451505502191,0.0244140625
1451505504623,0.0224609375
1451505505863,0.0244140625
1451505507642,0.0234375
1451505508364,0.0234375
1451505509611,0.0234375
1451505510858,0.0244140625
1451505512109,0.0263671875
1451505513609,0.025390625
1451505514979,0.0224609375
1451505517641,0.0244140625
1451505518639,0.025390625
1451505519877,0.0234375
1451505521120,0.0283203125
1451505522354,0.0263671875
1451505524086,0.0224609375
1451505525846,0.0234375
1451505527878,0.025390625
1451505529191,0.0234375
1451505530665,0.025390625
1451505531931,0.025390625
1451505533291,0.017578125
1451505537646,0.03125
1451505541635,0.03515625
1451505548200,0.033203125
1451505554639,0.0263671875
1451505559453,0.0302734375
1451505566232,0.03515625
1451505576308,0.03515625
1451505583609,0.017578125
1451505586410,0.033203125
1451505592181,0.0302734375
1451505595815,0.0283203125
1451505599813,0.033203125
1451505601285,0.017578125
1451505607654,0.029296875
1451505613205,0.02734375
1451505617656,0.03515625
1451505621210,0.0322265625
1451505625777,0.0361328125
1451505629293,0.03125
1451505633102,0.029296875
1451505637659,0.03125
1451505643873,0.017578125
1451505648178,0.03125
1451505651547,0.033203125
1451505656029,0.03125
1451505662316,0.03125
1451505667661,0.0283203125
1451505670667,0.0234375
1451505674924,0.029296875
1451505679042,0.03125
1451505683253,0.0341796875
1451505687664,0.0361328125
1451505690928,0.0341796875
1451505694397,0.033203125
1451505698482,0.02734375
1451505704768,0.0263671875
1451505711295,0.03125
1451505715952,0.037109375
1451505719501,0.0322265625
1451505726260,0.033203125
1451505730058,0.0361328125
1451505733337,0.0263671875
1451505739055,0.0244140625
1451505742928,0.0380859375
1451505745773,0.0322265625
1451505748969,0.0380859375
1451505752836,0.0341796875
1451505757674,0.0263671875
1451505761067,0.0361328125
1451505768248,0.021484375
1451505771608,0.025390625
1451505777679,0.03125
1451505781716,0.0322265625
1451505785948,0.033203125
1451505792495,0.0341796875
1451505795530,0.029296875
1451505801665,0.0322265625
1451505805305,0.0302734375
1451505809670,0.033203125
1451505812978,0.025390625
1451505816353,0.0341796875
1451505822632,0.0283203125
1451505827706,0.029296875
1451505830141,0.033203125
1451505834248,0.03125
1451505841004,0.03515625
1451505844471,0.02734375
1451505848444,0.033203125
1451505853183,0.0341796875
1451505857705,0.0361328125
1451505861979,0.03125
1451505868682,0.03125
1451505872663,0.0283203125
1451505875521,0.029296875
1451505879652,0.0400390625
1451505883695,0.0283203125
1451505888387,0.0322265625
1451505891402,0.03125
1451505894852,0.0302734375
1451505898321,0.029296875
1451505901659,0.03515625
1451505908328,0.02734375
1451505912163,0.0302734375
1451505915345,0.03125
1451505919202,0.0390625
1451505923210,0.03125
1451505929431,0.03125
1451505933302,0.0361328125
1451505937698,0.033203125
1451505940899,0.0361328125
1451505945296,0.0302734375
1451505949722,0.0322265625
1451505953437,0.03515625
1451505957700,0.037109375
1451505960998,0.033203125
1451505964994,0.03125
1451505968979,0.0341796875
1451505976321,0.03515625
1451505981999,0.033203125
1451505988048,0.03125
1451505991879,0.041015625
1451505995107,0.0302734375
1451506001470,0.0322265625
1451506011251,0.03125
1451506015064,0.033203125
1451506021247,0.0322265625
1451506025175,0.03515625
1451506031510,0.0322265625
1451506034951,0.03125
1451506041992,0.03125
1451506048531,0.025390625
1451506052109,0.0283203125
1451506055468,0.0341796875
1451506059336,0.0361328125
1451506070011,0.03515625
1451506079585,0.0341796875
1451506086232,0.03515625
1451506089677,0.0302734375
1451506096514,0.02734375
1451506100768,0.0322265625
1451506107719,0.02734375
1451506110496,0.0322265625
1451506116295,0.0224609375
1451506122003,0.033203125
1451506125658,0.03125
1451506131959,0.029296875
1451506135514,0.0302734375
1451506142651,0.0341796875
1451506147724,0.025390625
1451506150440,0.0302734375
1451506156068,0.0400390625
1451506160463,0.0390625
1451506166516,0.033203125
1451506170085,0.0302734375
1451506176314,0.03515625
1451506180016,0.0322265625
1451506183531,0.03125
1451506188623,0.017578125
1451506192662,0.017578125
1451506194822,0.0341796875
1451506198301,0.03515625
1451506201773,0.0390625
1451506207998,0.03125
1451506211685,0.029296875
1451506215145,0.0283203125
1451506218864,0.0322265625
1451506223000,0.0322265625
1451506229607,0.03515625
1451506233132,0.0322265625
1451506237734,0.0341796875
1451506242951,0.0341796875
1451506249130,0.017578125
1451506252655,0.0244140625
1451506257737,0.0361328125
1451506263346,0.0283203125
1451506270017,0.0390625
1451506273542,0.029296875
1451506277852,0.0341796875
1451506281407,0.0322265625
1451506284897,0.0322265625
1451506292014,0.0341796875
1451506298621,0.03515625
1451506301611,0.03125
1451506308737,0.021484375
1451506313772,0.0322265625
1451506318084,0.0283203125
1451506322657,0.02734375
1451506327748,0.0302734375
1451506331004,0.037109375
1451506337759,0.037109375
1451506342976,0.0302734375
1451506346632,0.03125
1451506352191,0.033203125
1451506355814,0.0283203125
1451506364441,0.037109375
1451506370544,0.0283203125
1451506377755,0.0322265625
1451506380465,0.029296875
1451506385142,0.03515625
1451506388288,0.033203125
1451506392211,0.0361328125
1451506402285,0.0361328125
1451506405747,0.0322265625
1451506412332,0.0361328125
1451506417759,0.041015625
1451506420855,0.02734375
1451506425896,0.0361328125
1451506429883,0.0341796875
1451506434572,0.0380859375
1451506437904,0.0341796875
1451506443473,0.03515625
1451506444759,0.0341796875
1451506451324,0.0302734375
1451506455856,0.025390625
1451506462771,0.0283203125
1451506467774,0.0361328125
1451506473075,0.037109375
1451506476207,0.0302734375
1451506480770,0.033203125
1451506485569,0.033203125
1451506492742,0.017578125
1451506498463,0.0361328125
1451506503249,0.037109375
1451506507772,0.0361328125
1451506510896,0.0302734375
1451506514349,0.0390625
1451506518432,0.033203125
1451506522416,0.0361328125
1451506526373,0.029296875
1451506529435,0.0380859375
1451506535934,0.029296875
1451506539971,0.03515625
1451506544300,0.0341796875
1451506547784,0.03125
1451506554073,0.0244140625
1451506557782,0.0283203125
1451506561152,0.033203125
1451506564434,0.0283203125
1451506570389,0.03515625
1451506574152,0.0361328125
1451506580375,0.029296875
1451506583913,0.03515625
1451506590496,0.0341796875
1451506593929,0.025390625
1451506601022,0.0380859375
1451506605036,0.0283203125
1451506610683,0.017578125
1451506613430,0.017578125
1451506619022,0.0283203125
1451506623607,0.0341796875
1451506630802,0.0322265625
1451506634651,0.0380859375
1451506640014,0.0341796875
1451506644284,0.0283203125
1451506649817,0.0302734375
1451506653366,0.0244140625
1451506657790,0.0361328125
1451506664691,0.03125
1451506676653,0.0341796875
1451506682792,0.033203125
1451506685862,0.0302734375
1451506690635,0.03515625
1451506693595,0.0302734375
1451506697900,0.0361328125
1451506707797,0.0341796875
1451506710826,0.0341796875
1451506714416,0.0322265625
1451506719205,0.0322265625
1451506722032,0.037109375
1451506726348,0.037109375
1451506730560,0.02734375
1451506734727,0.017578125
1451506739478,0.03515625
1451506745529,0.03515625
1451506748545,0.0322265625
1451506752748,0.037109375
1451506756376,0.033203125
1451506759953,0.0322265625
1451506772329,0.0341796875
1451506779288,0.0361328125
1451506785049,0.0380859375
1451506795582,0.021484375
1451506801900,0.033203125
1451506811855,0.03515625
1451506818271,0.03125
1451506822434,0.0302734375
1451506826393,0.0322265625
1451506829969,0.0322265625
1451506836280,0.02734375
1451506841915,0.0390625
1451506844365,0.0361328125
1451506848294,0.0390625
1451506852431,0.017578125
1451506858691,0.041015625
1451506864260,0.0283203125
1451506869089,0.033203125
1451506876414,0.0322265625
1451506882127,0.033203125
1451506885943,0.0341796875
1451506889790,0.037109375
1451506892976,0.03515625
1451506895951,0.037109375
1451506899691,0.0341796875
1451506904642,0.03125
1451506918410,0.025390625
1451506922377,0.0361328125
1451506925719,0.03515625
1451506929774,0.0341796875
1451506936027,0.0322265625
1451506939879,0.033203125
1451506943082,0.0283203125
1451506946144,0.0341796875
1451506955748,0.03515625
1451506962126,0.02734375
1451506966013,0.0361328125
1451506968844,0.0361328125
1451506972881,0.0341796875
1451506979557,0.017578125
1451506985058,0.03125
1451506991623,0.0263671875
1451506995511,0.03515625
1451506999074,0.037109375
1451507002968,0.0341796875
1451507007837,0.037109375
1451507010904,0.0283203125
1451507015093,0.033203125
1451507019123,0.037109375
1451507022303,0.0380859375
1451507026148,0.033203125
1451507030036,0.033203125
1451507033593,0.037109375
1451507038186,0.017578125
1451507043273,0.037109375
1451507049867,0.03125
1451507053685,0.037109375
1451507057843,0.0263671875
1451507060359,0.0302734375
1451507066004,0.033203125
1451507069624,0.0361328125
1451507072815,0.0322265625
1451507076572,0.0341796875
1451507082170,0.0283203125
1451507087852,0.03515625
1451507093140,0.0341796875
1451507096072,0.021484375
1451507097848,0.02734375
1451507099241,0.0244140625
1451507100487,0.0283203125
1451507101737,0.0283203125
1451507102985,0.0283203125
1451507104235,0.0283203125
1451507105648,0.02734375
1451507107850,0.02734375
1451507108372,0.0283203125
1451507109614,0.025390625
1451507110856,0.0263671875
1451507112098,0.0263671875
1451507113345,0.037109375
1451507114585,0.025390625
1451507115821,0.02734375
1451507117849,0.02734375
1451507118303,0.0263671875
1451507119550,0.02734375
1451507120792,0.02734375
1451507122046,0.0263671875
1451507123292,0.0244140625
1451507124538,0.0244140625
1451507125996,0.033203125
1451507127851,0.0244140625
1451507128715,0.0234375
1451507131131,0.0244140625
1451507132374,0.0234375
1451507133612,0.0244140625
1451507134848,0.0234375
1451507136092,0.0234375
1451507137852,0.0224609375
1451507138566,0.0244140625
1451507139816,0.025390625
1451507141067,0.025390625
1451507142309,0.0234375
1451507143559,0.02734375
1451507144815,0.0244140625
1451507146305,0.025390625
1451507147854,0.0234375
1451507148904,0.025390625
1451507150140,0.0234375
1451507151382,0.0244140625
1451507153238,0.0234375
1451507154483,0.0263671875
1451507155723,0.0263671875
1451507157855,0.0263671875
1451507158213,0.02734375
1451507160049,0.02734375
1451507161462,0.0263671875
1451507162922,0.025390625
1451507164172,0.0263671875
1451507165414,0.02734375
1451507166660,0.0263671875
1451507167903,0.025390625
1451507169143,0.0263671875
1451507170381,0.02734375
1451507171620,0.02734375
1451507172865,0.0263671875
1451507174105,0.0263671875
1451507175350,0.0380859375
1451507176592,0.02734375
1451507177858,0.0263671875
1451507179090,0.0244140625
1451507181631,0.0234375
1451507183113,0.0234375
1451507184373,0.02734375
1451507185617,0.0244140625
1451507187859,0.0234375
1451507188144,0.0234375
1451507189386,0.0244140625
1451507190632,0.0234375
1451507191870,0.025390625
1451507193108,0.02734375
1451507194352,0.0244140625
1451507197861,0.025390625
1451507198085,0.0244140625
1451507199329,0.0234375
1451507200573,0.0234375
1451507202072,0.025390625
1451507203528,0.0244140625
1451507204764,0.0244140625
1451507206010,0.0244140625
1451507207862,0.0224609375
1451507208491,0.0263671875
1451507209731,0.025390625
1451507210972,0.02734375
1451507212205,0.0244140625
1451507213931,0.0224609375
1451507215178,0.02734375
1451507216424,0.0263671875
1451507217864,0.0244140625
1451507219086,0.025390625
1451507221366,0.0341796875
1451507222613,0.0263671875
1451507223857,0.0263671875
1451507225099,0.0263671875
1451507226341,0.0263671875
1451507227865,0.0263671875
1451507228829,0.0263671875
1451507230072,0.0263671875
1451507231322,0.0244140625
1451507232602,0.0244140625
1451507233822,0.0263671875
1451507235073,0.0263671875
1451507236325,0.0244140625
1451507237867,0.0234375
1451507239191,0.0400390625
1451507240427,0.0263671875
1451507241672,0.0263671875
1451507244102,0.0234375
1451507245346,0.0234375
1451507246586,0.0263671875
1451507247868,0.0263671875
1451507249067,0.025390625
1451507250309,0.0224609375
1451507252769,0.025390625
1451507254015,0.0263671875
1451507255265,0.0263671875
1451507256516,0.025390625
1451507258010,0.0244140625
1451507259404,0.0263671875
1451507260634,0.0234375
1451507261877,0.0234375
1451507263121,0.0244140625
1451507264361,0.025390625
1451507265599,0.02734375
1451507267873,0.0234375
1451507268123,0.0224609375
1451507269361,0.0234375
1451507270602,0.025390625
1451507271842,0.02734375
1451507273102,0.025390625
1451507274998,0.0244140625
1451507276477,0.0234375
1451507277871,0.0224609375
1451507279447,0.0234375
1451507280767,0.025390625
1451507282006,0.0234375
1451507283248,0.0244140625
1451507284487,0.025390625
1451507287872,0.0234375
1451507288204,0.025390625
1451507289450,0.02734375
1451507290701,0.0244140625
1451507291943,0.0234375
1451507293271,0.025390625
1451507294781,0.0234375
1451507296035,0.0224609375
1451507297874,0.025390625
1451507298522,0.025390625
1451507299768,0.0263671875
1451507301008,0.0263671875
1451507302252,0.025390625
1451507304685,0.0244140625
1451507305923,0.025390625
1451507307875,0.0263671875
1451507308405,0.0234375
1451507310152,0.0234375
1451507316663,0.0341796875
1451507326678,0.033203125
1451507331222,0.03515625
1451507337877,0.033203125
1451507342138,0.0361328125
1451507348363,0.033203125
1451507352942,0.0361328125
1451507356444,0.0361328125
1451507362689,0.029296875
1451507370208,0.0302734375
1451507373425,0.0361328125
1451507380476,0.03125
1451507387942,0.033203125
1451507400545,0.0244140625
1451507404511,0.0361328125
1451507408062,0.0341796875
1451507410976,0.03515625
1451507416235,0.03515625
1451507419600,0.0341796875
1451507424122,0.03125
1451507431107,0.0341796875
1451507434386,0.0302734375
1451507438908,0.029296875
1451507444207,0.0361328125
1451507447894,0.0380859375
1451507453390,0.029296875
1451507458465,0.0361328125
1451507462262,0.0283203125
1451507466110,0.0302734375
1451507472402,0.033203125
1451507476358,0.0322265625
1451507480400,0.033203125
1451507484895,0.0390625
1451507488061,0.03515625
1451507491650,0.02734375
1451507495415,0.0322265625
1451507499435,0.0380859375
1451507503194,0.03515625
1451507506038,0.0341796875
1451507510353,0.0341796875
1451507517902,0.0322265625
1451507522133,0.0234375
1451507525951,0.0322265625
1451507530710,0.0322265625
1451507537907,0.029296875
1451507540741,0.033203125
1451507544924,0.0341796875
1451507548849,0.0322265625
1451507552483,0.02734375
1451507559760,0.029296875
1451507567909,0.03515625
1451507570696,0.0361328125
1451507575273,0.025390625
1451507581707,0.0341796875
1451507586303,0.02734375
1451507596735,0.0380859375
1451507600022,0.033203125
1451507603908,0.0283203125
1451507607913,0.0322265625
1451507611486,0.03125
1451507618351,0.0322265625
1451507622769,0.02734375
1451507624162,0.0244140625
1451507631466,0.03125
1451507637939,0.0322265625
1451507640842,0.033203125
1451507644935,0.037109375
1451507648257,0.0302734375
1451507654658,0.0283203125
1451507659581,0.0419921875
1451507666416,0.0380859375
1451507671238,0.0361328125
1451507678466,0.03125
1451507682580,0.03125
1451507686148,0.0361328125
1451507689863,0.0361328125
1451507692612,0.0302734375
1451507698210,0.0205078125
1451507700805,0.03515625
1451507704449,0.029296875
1451507711754,0.0390625
1451507715533,0.03125
1451507719045,0.0283203125
1451507725514,0.033203125
1451507729447,0.025390625
1451507738680,0.033203125
1451507739933,0.0263671875
1451507745843,0.0341796875
1451507751488,0.03125
1451507755535,0.037109375
1451507759459,0.0322265625
1451507763638,0.017578125
1451507769283,0.0380859375
1451507775214,0.041015625
1451507781247,0.033203125
1451507789082,0.0341796875
1451507795310,0.0341796875
1451507799065,0.0361328125
1451507802832,0.0302734375
1451507806688,0.029296875
1451507810659,0.0390625
1451507817239,0.0390625
1451507820956,0.033203125
1451507824327,0.0283203125
1451507829072,0.0302734375
1451507835113,0.0322265625
1451507840917,0.0341796875
1451507844206,0.0341796875
1451507850625,0.029296875
1451507854677,0.02734375
1451507859740,0.03125
1451507863927,0.029296875
1451507867651,0.029296875
1451507871589,0.029296875
1451507874994,0.033203125
1451507880941,0.029296875
1451507885436,0.0322265625
1451507889078,0.033203125
1451507893681,0.037109375
1451507897416,0.033203125
1451507907007,0.029296875
1451507912616,0.0302734375
1451507917078,0.0361328125
1451507920285,0.0341796875
1451507924586,0.0322265625
1451507931846,0.029296875
1451507939512,0.017578125
1451507944910,0.0400390625
1451507949085,0.0341796875
1451507959087,0.0283203125
1451507962241,0.0341796875
1451507963735,0.0400390625
1451507969626,0.029296875
1451507975541,0.0390625
1451507979413,0.0361328125
1451507985384,0.0361328125
1451507986849,0.0341796875
1451507992721,0.0341796875
1451507996747,0.0380859375
1451508000896,0.033203125
1451508007588,0.0244140625
1451508011456,0.03515625
1451508014877,0.0341796875
1451508016131,0.029296875
1451508023778,0.033203125
1451508027174,0.033203125
1451508031165,0.0361328125
1451508034894,0.0322265625
1451508039098,0.03125
1451508043023,0.037109375
1451508046585,0.033203125
1451508050854,0.033203125
1451508057577,0.0361328125
1451508060867,0.037109375
1451508064774,0.017578125
1451508069177,0.0322265625
1451508072719,0.0322265625
1451508076572,0.03515625
1451508080866,0.0361328125
1451508084697,0.0361328125
1451508089115,0.0400390625
1451508092052,0.0341796875
1451508095673,0.0263671875
1451508100503,0.0380859375
1451508105674,0.03515625
1451508109785,0.029296875
1451508113479,0.03515625
1451508117320,0.03125
1451508120412,0.0341796875
1451508126183,0.0361328125
1451508129425,0.0322265625
1451508136724,0.0361328125
1451508142533,0.025390625
1451508146444,0.033203125
1451508152813,0.03125
1451508156363,0.037109375
1451508159438,0.033203125
1451508165981,0.0283203125
1451508170327,0.037109375
1451508177537,0.03125
1451508184493,0.0205078125
1451508190648,0.029296875
1451508195159,0.033203125
1451508199232,0.0341796875
1451508205763,0.0302734375
1451508209797,0.0302734375
1451508215858,0.0283203125
1451508219949,0.0283203125
1451508223409,0.033203125
1451508227084,0.0322265625
1451508232284,0.03515625
1451508235511,0.0322265625
1451508239727,0.0302734375
1451508242632,0.033203125
1451508249127,0.0302734375
1451508253765,0.03515625
1451508260373,0.0361328125
1451508264237,0.029296875
1451508269454,0.029296875
1451508272970,0.0322265625
1451508276863,0.0283203125
1451508280784,0.041015625
1451508284172,0.0283203125
1451508287463,0.0361328125
1451508290971,0.029296875
1451508297724,0.03515625
1451508301697,0.03125
1451508305781,0.0400390625
1451508313374,0.0322265625
1451508319767,0.033203125
1451508323502,0.03515625
1451508326834,0.029296875
1451508331935,0.0322265625
1451508337812,0.0361328125
1451508344063,0.0302734375
1451508350278,0.0283203125
1451508354024,0.0380859375
1451508357643,0.0361328125
1451508361323,0.03125
1451508367966,0.0302734375
1451508371645,0.03515625
1451508375777,0.033203125
1451508380614,0.02734375
1451508386365,0.0341796875
1451508393142,0.0380859375
1451508399391,0.0341796875
1451508406168,0.0341796875
1451508412863,0.0322265625
1451508417199,0.0341796875
1451508423669,0.0322265625
1451508427121,0.033203125
1451508431262,0.037109375
1451508436052,0.0380859375
1451508439911,0.0322265625
1451508443325,0.03515625
1451508447370,0.037109375
1451508450746,0.021484375
1451508454177,0.0263671875
1451508459322,0.0283203125
1451508463362,0.0380859375
1451508469907,0.03515625
1451508473888,0.037109375
1451508477688,0.0341796875
1451508484257,0.0322265625
1451508490014,0.03125
1451508493863,0.03125
1451508499158,0.03515625
1451508502362,0.03515625
1451508506785,0.0341796875
1451508510635,0.0263671875
1451508514656,0.029296875
1451508521575,0.0224609375
1451508527296,0.03125
1451508531813,0.0390625
1451508539167,0.0283203125
1451508542568,0.03125
1451508546759,0.0283203125
1451508551535,0.0244140625
1451508554994,0.029296875
1451508559164,0.0302734375
1451508562485,0.03515625
1451508565963,0.0390625
1451508570148,0.0390625
1451508574095,0.03515625
1451508578031,0.033203125
1451508583878,0.02734375
1451508589173,0.0380859375
1451508592497,0.0322265625
1451508595918,0.03125
1451508599720,0.033203125
1451508603495,0.0341796875
1451508609848,0.0302734375
1451508613808,0.0341796875
1451508618034,0.0263671875
1451508622177,0.033203125
1451508626606,0.033203125
1451508631345,0.0322265625
1451508637590,0.037109375
1451508641552,0.033203125
1451508647781,0.02734375
1451508651720,0.02734375
1451508657647,0.03125
1451508662514,0.017578125
1451508669935,0.021484375
1451508673399,0.0419921875
1451508681304,0.0341796875
1451508685499,0.0341796875
1451508689183,0.0283203125
1451508692762,0.025390625
1451508697011,0.0341796875
1451508703745,0.041015625
1451508707460,0.033203125
1451508711181,0.0361328125
1451508715705,0.0341796875
1451508719186,0.033203125
1451508727973,0.0185546875
1451508731373,0.0341796875
1451508735478,0.0361328125
1451508741471,0.029296875
1451508745068,0.0283203125
1451508753223,0.03515625
1451508759192,0.0283203125
1451508763264,0.0322265625
1451508766943,0.0380859375
1451508770711,0.033203125
1451508775244,0.0341796875
1451508779194,0.0322265625
1451508789468,0.017578125
1451508792721,0.0302734375
1451508799492,0.033203125
1451508803212,0.0400390625
1451508809797,0.0302734375
1451508813557,0.03125
1451508817666,0.0361328125
1451508821863,0.0322265625
1451508826093,0.029296875
1451508829954,0.0390625
1451508833960,0.0361328125
1451508837291,0.03125
1451508841141,0.033203125
1451508844574,0.0400390625
1451508850845,0.03515625
1451508857328,0.033203125
1451508864651,0.0400390625
1451508869206,0.0380859375
1451508875481,0.037109375
1451508882426,0.03515625
1451508886040,0.0341796875
1451508891489,0.0185546875
1451508892735,0.0302734375
1451508893981,0.0263671875
1451508895280,0.0283203125
1451508896784,0.0244140625
1451508899210,0.0244140625
1451508899464,0.0263671875
1451508900706,0.0234375
1451508901964,0.0244140625
1451508903721,0.02734375
1451508904961,0.0234375
1451508906205,0.0234375
1451508907473,0.0244140625
1451508909781,0.0244140625
1451508911042,0.0263671875
1451508912496,0.0234375
1451508913944,0.03515625
1451508915181,0.02734375
1451508916421,0.02734375
1451508917665,0.0263671875
1451508919211,0.02734375
1451508920135,0.0234375
1451508921379,0.0224609375
1451508922620,0.0224609375
1451508923860,0.0234375
1451508925098,0.0234375
1451508926348,0.0224609375
1451508927595,0.02734375
1451508929212,0.0234375
1451508930085,0.0234375
1451508932734,0.0244140625
1451508934209,0.0234375
1451508935459,0.0244140625
1451508936706,0.0224609375
1451508937954,0.0263671875
1451508939216,0.0263671875
1451508940436,0.0380859375
1451508941678,0.0244140625
1451508942919,0.0234375
1451508944165,0.0234375
1451508945405,0.0224609375
1451508946655,0.0263671875
1451508947909,0.0244140625
1451508949216,0.0234375
1451508950397,0.02734375
1451508951692,0.0244140625
1451508953185,0.0244140625
1451508954466,0.0263671875
1451508955701,0.0263671875
1451508956945,0.0263671875
1451508959217,0.025390625
1451508959469,0.025390625
1451508960711,0.0244140625
1451508961953,0.0234375
1451508963865,0.0263671875
1451508965114,0.0234375
1451508966364,0.02734375
1451508967612,0.025390625
1451508969756,0.025390625
1451508971339,0.0244140625
1451508972583,0.0322265625
1451508973825,0.02734375
1451508975067,0.0263671875
1451508976313,0.025390625
1451508977552,0.025390625
1451508979220,0.0263671875
1451508980036,0.025390625
1451508981280,0.0244140625
1451508982520,0.0234375
1451508983764,0.02734375
1451508985013,0.0263671875
1451508986255,0.0234375
1451508987499,0.0234375
1451508989224,0.02734375
1451508990275,0.02734375
1451508991580,0.0244140625
1451508992812,0.0234375
1451508994058,0.0224609375
1451508995300,0.0224609375
1451508996538,0.0234375
1451508997777,0.0234375
1451508999221,0.0234375
1451509000253,0.0263671875
1451509001495,0.025390625
1451509002735,0.0234375
1451509003977,0.0224609375
1451509005230,0.025390625
1451509006474,0.025390625
1451509007722,0.0244140625
1451509009224,0.0263671875
1451509010630,0.025390625
1451509013072,0.0234375
1451509014313,0.025390625
1451509015555,0.0263671875
1451509016795,0.02734375
1451509018038,0.02734375
1451509019274,0.0234375
1451509020514,0.0263671875
1451509021756,0.0263671875
1451509022994,0.0234375
1451509025965,0.0263671875
1451509027417,0.0263671875
1451509029227,0.03125
1451509030536,0.02734375
1451509031766,0.0234375
1451509033008,0.0244140625
1451509034250,0.0263671875
1451509035488,0.02734375
1451509036730,0.02734375
1451509037968,0.0234375
1451509039226,0.0234375
1451509040465,0.0224609375
1451509041711,0.0263671875
1451509042955,0.03125
1451509044207,0.0263671875
1451509045699,0.0234375
1451509047074,0.02734375
1451509049228,0.0263671875
1451509049556,0.0263671875
1451509050800,0.0263671875
1451509052041,0.025390625
1451509053283,0.0224609375
1451509054525,0.0234375
1451509055763,0.0234375
1451509057005,0.025390625
1451509059229,0.0263671875
1451509059542,0.0234375
1451509060788,0.0234375
1451509062030,0.0234375
1451509063274,0.0234375
1451509064598,0.025390625
1451509066082,0.0234375
1451509067344,0.0244140625
1451509069233,0.02734375
1451509069835,0.025390625
1451509071069,0.0263671875
1451509072311,0.0244140625
1451509073550,0.0234375
1451509074790,0.0244140625
1451509077222,0.0234375
1451509079232,0.0244140625
1451509079711,0.025390625
1451509080957,0.0234375
1451509082205,0.0244140625
1451509084351,0.0263671875
1451509085959,0.0263671875
1451509087198,0.0234375
1451509089234,0.025390625
1451509089672,0.0234375
1451509091390,0.0224609375
1451509092622,0.025390625
1451509093862,0.0263671875
1451509095111,0.0263671875
1451509096357,0.0263671875
1451509097605,0.0302734375
1451509099235,0.0224609375
1451509100101,0.0234375
1451509101568,0.0244140625
1451509103028,0.025390625
1451509104278,0.0419921875
1451509105520,0.025390625
1451509106762,0.0244140625
1451509108008,0.0263671875
1451509109251,0.025390625
1451509110501,0.017578125
1451509114820,0.0361328125
1451509119238,0.03515625
1451509120995,0.033203125
1451509125523,0.033203125
1451509132702,0.0361328125
1451509136013,0.0322265625
1451509139691,0.0341796875
1451509144188,0.01953125
1451509147607,0.0361328125
1451509152657,0.033203125
1451509157022,0.0302734375
1451509161276,0.02734375
1451509164735,0.0302734375
1451509169244,0.03515625
1451509172744,0.03515625
1451509179309,0.029296875
1451509183512,0.029296875
1451509188099,0.03125
1451509194675,0.0322265625
1451509199250,0.0302734375
1451509203785,0.03125
1451509209638,0.03515625
1451509213984,0.0302734375
1451509220599,0.03515625
1451509224590,0.03125
1451509231457,0.02734375
1451509235079,0.0361328125
1451509239254,0.03125
1451509242134,0.0302734375
1451509246639,0.0302734375
1451509250843,0.0302734375
1451509257577,0.029296875
1451509261621,0.0263671875
1451509265984,0.025390625
1451509269808,0.029296875
1451509273941,0.02734375
1451509277803,0.03125
1451509281538,0.03125
1451509285677,0.029296875
1451509291766,0.0302734375
1451509295424,0.0283203125
1451509299931,0.0224609375
1451509304003,0.02734375
1451509308016,0.0341796875
1451509314417,0.037109375
1451509321392,0.0341796875
1451509326038,0.03125
1451509330305,0.0283203125
1451509334646,0.0263671875
1451509339269,0.029296875
1451509342271,0.0361328125
1451509346723,0.0341796875
1451509353443,0.0361328125
1451509357247,0.0341796875
1451509360630,0.037109375
1451509367033,0.029296875
1451509377818,0.037109375
1451509381835,0.033203125
1451509386091,0.017578125
1451509389274,0.0341796875
1451509393046,0.0341796875
1451509397497,0.03515625
1451509405956,0.0380859375
1451509409275,0.0322265625
1451509415952,0.0322265625
1451509421050,0.0263671875
1451509425519,0.0341796875
1451509430494,0.0302734375
1451509434537,0.0283203125
1451509439280,0.033203125
1451509445378,0.041015625
1451509449885,0.0341796875
1451509453483,0.0283203125
1451509460588,0.02734375
1451509467519,0.029296875
1451509471908,0.0322265625
1451509475519,0.0244140625
1451509479503,0.0283203125
1451509483390,0.029296875
1451509488168,0.0400390625
1451509492235,0.0361328125
1451509496172,0.0322265625
1451509499808,0.033203125
1451509503709,0.0302734375
1451509507805,0.017578125
1451509513690,0.0380859375
1451509517240,0.0302734375
1451509523472,0.0322265625
1451509527682,0.037109375
1451509533873,0.033203125
1451509540364,0.0341796875
1451509544309,0.0302734375
1451509549293,0.0283203125
1451509555248,0.0341796875
1451509559295,0.0380859375
1451509562463,0.0361328125
1451509566482,0.0322265625
1451509570923,0.029296875
1451509579298,0.033203125
1451509582212,0.0302734375
1451509585979,0.0322265625
1451509590157,0.03125
1451509593978,0.0302734375
1451509597740,0.0341796875
1451509601405,0.033203125
1451509605366,0.0361328125
1451509609302,0.03125
1451509613599,0.03515625
1451509617685,0.03125
1451509621704,0.0361328125
1451509629461,0.017578125
1451509632431,0.017578125
1451509635608,0.0341796875
1451509639308,0.0341796875
1451509647580,0.0380859375
1451509651168,0.029296875
1451509654893,0.0322265625
1451509659325,0.0390625
1451509662728,0.0322265625
1451509669467,0.0341796875
1451509673105,0.033203125
1451509677442,0.0322265625
1451509681677,0.029296875
1451509685254,0.0322265625
1451509689545,0.017578125
1451509693274,0.0283203125
1451509696579,0.0390625
1451509700346,0.037109375
1451509703902,0.0283203125
1451509710065,0.0341796875
1451509713529,0.029296875
1451509719420,0.0341796875
1451509726323,0.0341796875
1451509732714,0.033203125
1451509736687,0.03125
1451509741798,0.0302734375
1451509745562,0.0302734375
1451509752533,0.03515625
1451509755932,0.0361328125
1451509759736,0.029296875
1451509763121,0.03515625
1451509769974,0.0263671875
1451509774480,0.025390625
1451509785324,0.02734375
1451509791782,0.0302734375
1451509797690,0.033203125
1451509804873,0.0263671875
1451509809884,0.017578125
1451509813688,0.02734375
1451509821883,0.0341796875
1451509825810,0.033203125
1451509829506,0.033203125
1451509835517,0.033203125
1451509839616,0.03515625
1451509844508,0.0302734375
1451509848145,0.0302734375
1451509855032,0.025390625
1451509859333,0.0263671875
1451509862424,0.0322265625
1451509869892,0.0419921875
1451509876739,0.0322265625
1451509880208,0.0322265625
1451509884228,0.0322265625
1451509892448,0.0361328125
1451509899354,0.0361328125
1451509905559,0.033203125
1451509913044,0.0341796875
1451509916799,0.0341796875
1451509920205,0.0361328125
1451509924482,0.0322265625
1451509931133,0.037109375
1451509937424,0.0341796875
1451509941247,0.029296875
1451509944913,0.0341796875
1451509949346,0.0283203125
1451509956429,0.02734375
1451509960586,0.025390625
1451509964728,0.0341796875
1451509969349,0.0302734375
1451509972551,0.0380859375
1451509979618,0.03125
1451509986127,0.0361328125
1451509990542,0.017578125
1451509996501,0.033203125
1451510000262,0.0341796875
1451510003708,0.0283203125
1451510009353,0.037109375
1451510012443,0.0400390625
1451510016186,0.03515625
1451510022785,0.0341796875
1451510026849,0.0341796875
1451510031914,0.02734375
1451510039381,0.0361328125
1451510045098,0.0341796875
1451510049371,0.0263671875
1451510054171,0.02734375
1451510063891,0.03515625
1451510067241,0.03125
1451510073682,0.033203125
1451510080117,0.0263671875
1451510084662,0.033203125
1451510091373,0.03125
1451510095543,0.0400390625
1451510101922,0.0244140625
1451510109823,0.0341796875
1451510113618,0.0390625
1451510119367,0.03515625
1451510122309,0.0361328125
1451510123629,0.0419921875
1451510130622,0.033203125
1451510136283,0.0380859375
1451510140538,0.0380859375
1451510144278,0.03515625
1451510150970,0.0341796875
1451510154682,0.03125
1451510161529,0.0361328125
1451510165682,0.0419921875
1451510170140,0.0322265625
1451510174145,0.03515625
1451510180350,0.037109375
1451510184070,0.033203125
1451510190513,0.0380859375
1451510194388,0.0322265625
1451510198202,0.0361328125
1451510204823,0.0400390625
1451510209380,0.0361328125
1451510215075,0.0322265625
1451510221276,0.033203125
1451510225514,0.0341796875
1451510232564,0.017578125
1451510237186,0.017578125
1451510241043,0.0341796875
1451510245145,0.033203125
1451510249676,0.033203125
1451510253795,0.033203125
1451510258020,0.033203125
1451510262488,0.0302734375
1451510266360,0.0380859375
1451510270139,0.0302734375
1451510281194,0.0302734375
1451510285363,0.0302734375
1451510289642,0.0419921875
1451510293376,0.033203125
1451510297711,0.0341796875
1451510302014,0.025390625
1451510309393,0.033203125
1451510315152,0.03515625
1451510321652,0.0380859375
1451510325557,0.03515625
1451510329399,0.0380859375
1451510333124,0.03125
1451510337063,0.0283203125
1451510343319,0.0283203125
1451510354375,0.037109375
1451510360998,0.0380859375
1451510364575,0.0361328125
1451510369402,0.037109375
1451510372484,0.033203125
1451510380493,0.0322265625
1451510384606,0.0361328125
1451510388194,0.037109375
1451510391715,0.03125
1451510398212,0.037109375
1451510401962,0.0341796875
1451510405923,0.0341796875
1451510409837,0.033203125
1451510417152,0.017578125
1451510421437,0.03515625
1451510425218,0.0302734375
1451510431340,0.0283203125
1451510435509,0.0361328125
1451510439444,0.0283203125
1451510444718,0.03125
1451510451595,0.0263671875
1451510455400,0.0361328125
1451510463311,0.0361328125
1451510467218,0.0390625
1451510471464,0.037109375
1451510483790,0.0390625
1451510488123,0.0263671875
1451510494036,0.02734375
1451510498238,0.029296875
1451510503321,0.0302734375
1451510507381,0.029296875
1451510511668,0.0341796875
1451510515347,0.0283203125
1451510519583,0.0322265625
1451510524310,0.03515625
1451510529425,0.0322265625
1451510532589,0.041015625
1451510536426,0.03125
1451510539788,0.03125
1451510543749,0.03515625
1451510547389,0.0302734375
1451510551158,0.03125
1451510554921,0.0341796875
1451510561831,0.0302734375
1451510565998,0.03125
1451510570053,0.03125
1451510576646,0.0302734375
1451510580697,0.0341796875
1451510584184,0.0341796875
1451510595156,0.029296875
1451510600029,0.017578125
1451510602890,0.0302734375
1451510607286,0.03515625
1451510614811,0.03515625
1451510619434,0.03125
1451510625541,0.033203125
1451510629435,0.0302734375
1451510635826,0.0361328125
1451510639629,0.0380859375
1451510643284,0.0390625
1451510647304,0.029296875
1451510651707,0.033203125
1451510655923,0.017578125
1451510659438,0.03515625
1451510663350,0.0380859375
1451510670657,0.03515625
1451510674396,0.0361328125
1451510679443,0.0341796875
1451510683640,0.0322265625
1451510687714,0.03515625
1451510691655,0.025390625
1451510695387,0.0380859375
1451510701428,0.0361328125
1451510704953,0.033203125
1451510709445,0.0361328125
1451510711097,0.0205078125
1451510712344,0.02734375
1451510715308,0.0263671875
1451510716778,0.0283203125
1451510718205,0.02734375
1451510720419,0.0244140625
1451510721657,0.0263671875
1451510722899,0.0263671875
1451510724142,0.0263671875
1451510725385,0.0263671875
1451510726626,0.025390625
1451510727866,0.0234375
1451510729446,0.0234375
1451510730366,0.0263671875
1451510731609,0.0234375
1451510732855,0.0234375
1451510735528,0.0263671875
1451510736979,0.025390625
1451510738230,0.0234375
1451510739471,0.0234375
1451510740708,0.0234375
1451510741950,0.025390625
1451510743193,0.0224609375
1451510744438,0.02734375
1451510745678,0.0341796875
1451510746919,0.0263671875
1451510748159,0.025390625
1451510749449,0.037109375
1451510750663,0.0263671875
1451510751907,0.0234375
1451510753157,0.025390625
1451510754408,0.025390625
1451510755902,0.0234375
1451510757278,0.025390625
1451510759451,0.0244140625
1451510759780,0.0263671875
1451510761023,0.0244140625
1451510762263,0.0234375
1451510763501,0.0234375
1451510765933,0.0263671875
1451510767176,0.02734375
1451510769452,0.02734375
1451510769710,0.0263671875
1451510770956,0.0234375
1451510772200,0.0234375
1451510773462,0.02734375
1451510775979,0.025390625
1451510777225,0.025390625
1451510779454,0.0234375
1451510780512,0.0263671875
1451510781756,0.0244140625
1451510782996,0.0263671875
1451510784238,0.0263671875
1451510785491,0.0244140625
1451510786740,0.0234375
1451510787983,0.02734375
1451510789233,0.0263671875
1451510790483,0.0224609375
1451510791987,0.0234375
1451510793385,0.0244140625
1451510794618,0.0234375
1451510795854,0.0244140625
1451510797096,0.0234375
1451510798950,0.0244140625
1451510799579,0.0244140625
1451510800820,0.041015625
1451510802059,0.0263671875
1451510803303,0.025390625
1451510804545,0.0263671875
1451510805795,0.0244140625
1451510807045,0.0224609375
1451510808950,0.0244140625
1451510809544,0.025390625
1451510810804,0.0234375
1451510812294,0.0234375
1451510813655,0.0234375
1451510814893,0.0263671875
1451510816135,0.0263671875
1451510817377,0.0263671875
1451510819805,0.0234375
1451510821047,0.0244140625
1451510822286,0.025390625
1451510823528,0.025390625
1451510824768,0.0263671875
1451510826008,0.025390625
1451510827265,0.0263671875
1451510828953,0.0234375
1451510829747,0.0234375
1451510831073,0.0244140625
1451510832561,0.0224609375
1451510833841,0.0244140625
1451510835888,0.0244140625
1451510837118,0.0234375
1451510838954,0.0234375
1451510840156,0.0234375
1451510841408,0.0263671875
1451510842657,0.025390625
1451510843903,0.0244140625
1451510845155,0.0263671875
1451510846407,0.025390625
1451510848958,0.0244140625
1451510849302,0.025390625
1451510850534,0.0234375
1451510851776,0.0244140625
1451510853016,0.0244140625
1451510854258,0.0341796875
1451510855501,0.0234375
1451510856739,0.025390625
1451510858957,0.02734375
1451510859265,0.0263671875
1451510860511,0.0263671875
1451510861762,0.0234375
1451510863008,0.0234375
1451510864250,0.0234375
1451510865498,0.0224609375
1451510866790,0.02734375
1451510868958,0.0234375
1451510869604,0.0244140625
1451510870845,0.0263671875
1451510872083,0.025390625
1451510873327,0.0234375
1451510874567,0.025390625
1451510875807,0.0263671875
1451510877046,0.02734375
1451510879482,0.0244140625
1451510880728,0.0244140625
1451510881971,0.025390625
1451510883219,0.0234375
1451510884465,0.0224609375
1451510885713,0.0263671875
1451510887183,0.025390625
1451510888960,0.025390625
1451510889878,0.0244140625
1451510891118,0.0263671875
1451510892365,0.0263671875
1451510893604,0.0263671875
1451510894840,0.025390625
1451510896587,0.025390625
1451510897821,0.0244140625
1451510899085,0.0234375
1451510901107,0.02734375
1451510902459,0.02734375
1451510903934,0.02734375
1451510905192,0.0263671875
1451510906428,0.0263671875
1451510907674,0.025390625
1451510908966,0.025390625
1451510910159,0.025390625
1451510911403,0.0322265625
1451510912647,0.025390625
1451510913891,0.0244140625
1451510915135,0.0244140625
1451510916376,0.0244140625
1451510917618,0.0263671875
1451510918964,0.025390625
1451510920112,0.0224609375
1451510921360,0.0224609375
1451510922723,0.0234375
1451510924187,0.025390625
1451510925677,0.017578125
1451510929011,0.0322265625
1451510933306,0.0322265625
1451510937090,0.0341796875
1451510943357,0.03125
1451510951076,0.025390625
1451510955563,0.017578125
1451510959192,0.0361328125
1451510963656,0.03125
1451510970835,0.0283203125
1451510975424,0.029296875
1451510982305,0.03125
1451510986224,0.03125
1451510990088,0.0322265625
1451510994225,0.0244140625
1451510997463,0.03125
1451511003800,0.0361328125
1451511008977,0.03515625
1451511012808,0.03125
1451511016672,0.03125
1451511024958,0.0361328125
1451511028978,0.029296875
1451511032568,0.033203125
1451511037455,0.0322265625
1451511044320,0.02734375
1451511052069,0.0302734375
1451511056866,0.0302734375
1451511060871,0.025390625
1451511070084,0.02734375
1451511076921,0.0322265625
1451511083292,0.0380859375
1451511087397,0.03125
1451511094857,0.029296875
1451511102195,0.0205078125
1451511109536,0.03125
1451511116289,0.03515625
1451511121343,0.0322265625
1451511125424,0.0341796875
1451511130211,0.0322265625
1451511134187,0.0322265625
1451511141168,0.0234375
1451511145337,0.0322265625
1451511149622,0.03125
1451511153494,0.0302734375
1451511160687,0.025390625
1451511164418,0.0283203125
1451511168996,0.025390625
1451511172731,0.0341796875
1451511179376,0.0341796875
1451511183220,0.029296875
1451511187215,0.033203125
1451511191718,0.029296875
1451511199227,0.017578125
1451511202825,0.03515625
1451511211267,0.033203125
1451511215478,0.025390625
1451511222506,0.03515625
1451511227076,0.03515625
1451511234118,0.0283203125
1451511239005,0.0283203125
1451511242911,0.0302734375
1451511253443,0.033203125
1451511259980,0.029296875
1451511263772,0.029296875
1451511267793,0.033203125
1451511274726,0.033203125
1451511279010,0.0361328125
1451511285170,0.0302734375
1451511292053,0.0341796875
1451511296217,0.0322265625
1451511300386,0.033203125
1451511304476,0.0380859375
1451511309015,0.0361328125
1451511312916,0.0283203125
1451511316786,0.0341796875
1451511320703,0.033203125
1451511324479,0.0322265625
1451511329018,0.0283203125
1451511335917,0.033203125
1451511341936,0.033203125
1451511349039,0.02734375
1451511356820,0.0302734375
1451511360687,0.0283203125
1451511365297,0.0390625
1451511372044,0.03125
1451511376281,0.0361328125
1451511380398,0.0341796875
1451511384232,0.033203125
1451511391915,0.029296875
1451511395800,0.03125
1451511402559,0.033203125
1451511407423,0.0400390625
1451511413030,0.0341796875
1451511416925,0.03125
1451511420975,0.0302734375
1451511431423,0.0341796875
1451511436124,0.0380859375
1451511440262,0.0419921875
1451511444069,0.033203125
1451511450726,0.03125
1451511455136,0.021484375
1451511459117,0.0283203125
1451511463301,0.029296875
1451511467470,0.0283203125
1451511471495,0.0283203125
1451511476326,0.033203125
1451511480238,0.0283203125
1451511484089,0.0361328125
1451511489037,0.0341796875
1451511492046,0.0185546875
1451511495593,0.0322265625
1451511499568,0.03125
1451511503724,0.03125
1451511507440,0.03125
1451511514191,0.0302734375
1451511519042,0.0380859375
1451511523014,0.0244140625
1451511526801,0.0341796875
1451511530759,0.0302734375
1451511535308,0.0400390625
1451511541957,0.0361328125
1451511549046,0.0322265625
1451511554897,0.03515625
1451511561834,0.0263671875
1451511565649,0.033203125
1451511572468,0.0283203125
1451511579117,0.033203125
1451511582765,0.029296875
1451511587234,0.033203125
1451511595169,0.0302734375
1451511599719,0.0341796875
1451511604520,0.029296875
1451511609059,0.0302734375
1451511612171,0.0302734375
1451511615822,0.0341796875
1451511620569,0.01953125
1451511625153,0.0341796875
1451511631042,0.033203125
1451511636439,0.037109375
1451511640113,0.0302734375
1451511646495,0.0390625
1451511650411,0.0380859375
1451511654344,0.0322265625
1451511659060,0.0302734375
1451511662660,0.0361328125
1451511669670,0.0400390625
1451511676827,0.0380859375
1451511681029,0.03125
1451511687766,0.0263671875
1451511692095,0.0263671875
1451511702056,0.03515625
1451511706179,0.033203125
1451511713178,0.0361328125
1451511717063,0.033203125
1451511721386,0.0361328125
1451511725200,0.0263671875
1451511729252,0.03125
1451511736459,0.0390625
1451511747217,0.0283203125
1451511751812,0.0361328125
1451511756042,0.03125
1451511759853,0.029296875
1451511767068,0.0341796875
1451511773787,0.037109375
1451511777613,0.033203125
1451511782154,0.03515625
1451511786149,0.0263671875
1451511790105,0.03515625
1451511793826,0.033203125
1451511799091,0.0302734375
1451511810000,0.0283203125
1451511813893,0.0361328125
1451511819080,0.03125
1451511822132,0.03125
1451511826615,0.029296875
1451511830983,0.033203125
1451511837905,0.03125
1451511844337,0.0341796875
1451511849084,0.037109375
1451511852289,0.029296875
1451511856769,0.033203125
1451511863613,0.0302734375
1451511872287,0.0322265625
1451511877914,0.029296875
1451511881779,0.03125
1451511886153,0.0341796875
1451511892807,0.0322265625
1451511896537,0.0322265625
1451511900705,0.0361328125
1451511907491,0.0322265625
1451511911689,0.025390625
1451511915728,0.03125
1451511919574,0.0341796875
1451511926927,0.02734375
1451511930544,0.03125
1451511934993,0.037109375
1451511942186,0.0224609375
1451511946314,0.029296875
1451511950641,0.0341796875
1451511954402,0.03515625
1451511960646,0.033203125
1451511964491,0.0390625
1451511971032,0.033203125
1451511974761,0.0322265625
1451511979113,0.0263671875
1451511982757,0.0302734375
1451511986586,0.0302734375
1451511990431,0.0341796875
1451511999106,0.0380859375
1451512170867,0.033203125
1451512178044,0.0341796875
1451512182047,0.0322265625
1451512188968,0.033203125
1451512192562,0.02734375
1451512199847,0.0322265625
1451512203758,0.03515625
1451512207777,0.0361328125
1451512211597,0.03515625
1451512212847,0.0224609375
1451512221407,0.0283203125
1451512224059,0.033203125
1451517201140,0.033203125
1451517208597,0.03125
1451517212628,0.03515625
1451517220933,0.0322265625
1451517226548,0.0341796875
1451517230934,0.0302734375
1451517237261,0.03515625
1451517242240,0.03515625
1451517246725,0.033203125
1451517251463,0.0322265625
1451517256410,0.017578125
1451517260939,0.03125
1451517267778,0.0283203125
1451517275325,0.033203125
1451517279419,0.03125
1451517284441,0.0302734375
1451517288993,0.03125
1451517296252,0.033203125
1451517305871,0.0263671875
1451517313044,0.029296875
1451517320948,0.033203125
1451517327228,0.025390625
1451517332140,0.0322265625
1451517336540,0.0224609375
1451517344009,0.0322265625
1451517350952,0.03515625
1451517354873,0.0302734375
1451517362443,0.033203125
1451517367420,0.0341796875
1451517371871,0.0322265625
1451517376326,0.0400390625
1451517380956,0.0341796875
1451517384267,0.029296875
1451517387363,0.017578125
1451517388598,0.0302734375
1451517395704,0.0283203125
1451517400957,0.02734375
1451517405146,0.0341796875
1451517406842,0.017578125
1451517409173,0.0302734375
1451517413232,0.037109375
1451517417712,0.0302734375
1451517421840,0.0322265625
1451517426252,0.03125
1451517431446,0.0283203125
1451517437645,0.017578125
1451517443638,0.033203125
1451517448012,0.033203125
1451517452179,0.0341796875
1451517456215,0.03515625
1451517460964,0.0302734375
1451517467403,0.03125
1451517479161,0.03125
1451517483455,0.0341796875
1451517487918,0.0322265625
1451517495621,0.03125
1451517500970,0.0283203125
1451517512894,0.03125
1451517516978,0.029296875
1451517523735,0.0341796875
1451517528614,0.033203125
1451517533589,0.033203125
1451517538441,0.0302734375
1451517542674,0.0302734375
1451517554840,0.017578125
1451517560977,0.0361328125
1451517564393,0.0361328125
1451517572922,0.03125
1451517579567,0.041015625
1451517583906,0.029296875
1451517588397,0.0341796875
1451517593368,0.03515625
1451517597698,0.03515625
1451517605089,0.0283203125
1451517609032,0.029296875
1451517613562,0.03515625
1451517618709,0.017578125
1451517622952,0.0302734375
1451517631007,0.03515625
1451517634765,0.037109375
1451517639084,0.033203125
1451517643577,0.0302734375
1451517647845,0.033203125
1451517652606,0.0361328125
1451517657041,0.0341796875
1451517664650,0.0283203125
1451517672001,0.041015625
1451517679680,0.0341796875
1451517684163,0.041015625
1451517688197,0.03515625
1451517695264,0.033203125
1451517699869,0.03125
1451517706230,0.033203125
1451517710997,0.0361328125
1451517715873,0.03515625
1451517721016,0.0341796875
1451517726012,0.0244140625
1451517731160,0.0322265625
1451517738485,0.03515625
1451517751022,0.0322265625
1451517754889,0.0302734375
1451517761004,0.0322265625
1451517763930,0.037109375
1451517771916,0.03125
1451517776262,0.0322265625
1451517781035,0.03515625
1451517785834,0.025390625
1451517791092,0.0341796875
1451517795479,0.0400390625
1451517801854,0.0341796875
1451517806698,0.0341796875
1451517811929,0.0341796875
1451517816665,0.033203125
1451517821229,0.0322265625
1451517828630,0.0322265625
1451517838024,0.041015625
1451517842452,0.037109375
1451517849615,0.0283203125
1451517856654,0.0185546875
1451517861017,0.037109375
1451517871034,0.0322265625
1451517874491,0.033203125
1451517882480,0.0400390625
1451517887221,0.0234375
1451517891885,0.0302734375
1451517896802,0.03515625
1451517903859,0.029296875
1451517905401,0.0322265625
1451517912586,0.0322265625
1451517916747,0.0361328125
1451517921246,0.0341796875
1451517925608,0.0380859375
1451517932281,0.0361328125
1451517939858,0.0283203125
1451517945857,0.029296875
1451517951028,0.033203125
1451517957637,0.0322265625
1451517962422,0.029296875
1451517969587,0.029296875
1451517973909,0.0341796875
1451517978464,0.033203125
1451517982235,0.0263671875
1451517987528,0.033203125
1451517995384,0.0263671875
1451517999721,0.03515625
1451518003828,0.0302734375
1451518008048,0.0283203125
1451518013269,0.0341796875
1451518018019,0.0283203125
1451518022503,0.03515625
1451518026475,0.0341796875
1451518031039,0.03515625
1451518034354,0.0380859375
1451518039251,0.021484375
1451518046404,0.0341796875
1451518051417,0.0302734375
1451518056793,0.03515625
1451518061046,0.0341796875
1451518065405,0.0341796875
1451518072262,0.03515625
1451518076710,0.033203125
1451518081835,0.0283203125
1451518086644,0.0244140625
1451518091048,0.033203125
1451518095102,0.03125
1451518099742,0.017578125
1451518104600,0.029296875
1451518116932,0.03125
1451518121051,0.0302734375
1451518123967,0.029296875
1451518129022,0.033203125
1451518135703,0.0419921875
1451518137555,0.01953125
1451518138803,0.0302734375
1451518141066,0.029296875
1451518141344,0.025390625
1451518142590,0.02734375
1451518143868,0.0283203125
1451518145364,0.025390625
1451518147951,0.0283203125
1451518149191,0.02734375
1451518151053,0.0380859375
1451518151675,0.0234375
1451518152917,0.0244140625
1451518154160,0.0244140625
1451518155426,0.037109375
1451518156640,0.0234375
1451518158634,0.02734375
1451518159884,0.0234375
1451518162709,0.02734375
1451518163961,0.0263671875
1451518165203,0.025390625
1451518166447,0.0244140625
1451518167692,0.0234375
1451518168930,0.0234375
1451518171070,0.0234375
1451518171412,0.0234375
1451518172654,0.0234375
1451518173897,0.0234375
1451518175134,0.0234375
1451518176379,0.0244140625
1451518177625,0.0234375
1451518178869,0.02734375
1451518181059,0.0244140625
1451518182892,0.0263671875
1451518184222,0.0244140625
1451518185460,0.0244140625
1451518186701,0.0234375
1451518187939,0.03125
1451518189177,0.0234375
1451518191059,0.0234375
1451518191667,0.0263671875
1451518192895,0.025390625
1451518194137,0.0263671875
1451518195385,0.025390625
1451518196632,0.0244140625
1451518199075,0.0263671875
1451518201070,0.0234375
1451518201767,0.0234375
1451518203223,0.0234375
1451518204475,0.02734375
1451518205718,0.02734375
1451518206958,0.037109375
1451518208203,0.02734375
1451518209446,0.02734375
1451518211064,0.02734375
1451518211930,0.0283203125
1451518213172,0.02734375
1451518214416,0.0263671875
1451518215672,0.0244140625
1451518216917,0.0234375
1451518218165,0.025390625
1451518221067,0.0244140625
1451518222492,0.0263671875
1451518223726,0.0263671875
1451518224972,0.0263671875
1451518226210,0.02734375
1451518227456,0.02734375
1451518228698,0.02734375
1451518229939,0.0244140625
1451518231179,0.0234375
1451518232417,0.02734375
1451518233670,0.0263671875
1451518234915,0.025390625
1451518236164,0.025390625
1451518237430,0.0234375
1451518238926,0.0244140625
1451518241066,0.0224609375
1451518241509,0.0244140625
1451518243937,0.0234375
1451518245181,0.0263671875
1451518246423,0.0263671875
1451518247668,0.02734375
1451518248904,0.0234375
1451518251073,0.0234375
1451518252596,0.0234375
1451518253854,0.025390625
1451518255100,0.0263671875
1451518256355,0.029296875
1451518257599,0.0234375
1451518259099,0.02734375
1451518261077,0.0234375
1451518261795,0.0234375
1451518263037,0.0244140625
1451518264280,0.025390625
1451518265524,0.0263671875
1451518266768,0.0263671875
1451518268014,0.0263671875
1451518269255,0.02734375
1451518271071,0.0234375
1451518271739,0.0244140625
1451518272979,0.02734375
1451518274233,0.02734375
1451518275473,0.02734375
1451518276717,0.0283203125
1451518278030,0.0234375
1451518281073,0.0263671875
1451518281404,0.0263671875
1451518283233,0.02734375
1451518284465,0.0234375
1451518285709,0.0263671875
1451518286952,0.025390625
1451518288197,0.0263671875
1451518289447,0.025390625
1451518291082,0.025390625
1451518291942,0.0244140625
1451518293198,0.0234375
1451518294674,0.0263671875
1451518296002,0.0244140625
1451518297239,0.037109375
1451518298481,0.02734375
1451518299723,0.0263671875
1451518301075,0.0263671875
1451518302213,0.0263671875
1451518303457,0.0244140625
1451518304697,0.0234375
1451518305940,0.025390625
1451518307180,0.0263671875
1451518308436,0.0244140625
1451518309684,0.0234375
1451518311077,0.0244140625
1451518312173,0.0234375
1451518313472,0.0234375
1451518314965,0.02734375
1451518316253,0.0234375
1451518317492,0.0263671875
1451518318732,0.02734375
1451518319978,0.02734375
1451518321262,0.0263671875
1451518322502,0.0234375
1451518323742,0.0283203125
1451518324987,0.0263671875
1451518326237,0.025390625
1451518327483,0.025390625
1451518328731,0.02734375
1451518331077,0.025390625
1451518331228,0.0263671875
1451518332474,0.0234375
1451518333962,0.0244140625
1451518335410,0.02734375
1451518336693,0.0263671875
1451518337893,0.0263671875
1451518339577,0.02734375
1451518341869,0.025390625
1451518343149,0.0263671875
1451518344388,0.0234375
1451518345634,0.0234375
1451518346880,0.033203125
1451518348126,0.0234375
1451518349406,0.0244140625
1451518351092,0.0244140625
1451518352230,0.0263671875
1451518353433,0.0224609375
1451518354681,0.017578125
1451518357001,0.029296875
1451518361422,0.0341796875
1451518366201,0.033203125
1451518371192,0.0361328125
1451518375926,0.0341796875
1451518383387,0.0283203125
1451518388824,0.0400390625
1451518392496,0.03515625
1451518397251,0.03515625
1451518402580,0.0244140625
1451518406989,0.029296875
1451518414020,0.03125
1451518426099,0.0283203125
1451518431652,0.0244140625
1451518436159,0.03515625
1451518441102,0.03125
1451518445978,0.02734375
1451518451094,0.0263671875
1451518455208,0.03125
1451518461552,0.017578125
1451518465033,0.037109375
1451518469368,0.029296875
1451518473945,0.0380859375
1451518481097,0.033203125
1451518485118,0.0302734375
1451518495668,0.0322265625
1451518499576,0.03125
1451518507275,0.029296875
1451518515048,0.0361328125
1451518519743,0.02734375
1451518525444,0.025390625
1451518531109,0.0302734375
1451518535237,0.0302734375
1451518541658,0.02734375
1451518551410,0.0322265625
1451518558092,0.02734375
1451518562619,0.029296875
1451518567302,0.029296875
1451518576986,0.0341796875
1451518582626,0.0185546875
1451518585471,0.03125
1451518592902,0.0283203125
1451518597831,0.03125
1451518611206,0.0283203125
1451518614697,0.03515625
1451518619016,0.0341796875
1451518624543,0.029296875
1451518629195,0.0341796875
1451518633288,0.033203125
1451518641119,0.033203125
1451518646906,0.0341796875
1451518651133,0.03125
1451518657967,0.03125
1451518662916,0.033203125
1451518670001,0.03125
1451518674492,0.03125
1451518684153,0.0283203125
1451518689146,0.029296875
1451518693656,0.029296875
1451518698241,0.03515625
1451518702596,0.041015625
1451518715152,0.0302734375
1451518722105,0.033203125
1451518727667,0.0361328125
1451518735723,0.0283203125
1451518741132,0.0322265625
1451518748163,0.029296875
1451518752913,0.03515625
1451518757004,0.03515625
1451518762518,0.0302734375
1451518767511,0.0322265625
1451518775096,0.033203125
1451518779119,0.0322265625
1451518783026,0.0400390625
1451518788234,0.0361328125
1451518793167,0.0322265625
1451518796822,0.033203125
1451518802110,0.025390625
1451518807767,0.029296875
1451518811858,0.03515625
1451518816770,0.0302734375
1451518821599,0.0283203125
1451518825994,0.03515625
1451518831143,0.033203125
1451518835984,0.02734375
1451518841510,0.025390625
1451518845749,0.02734375
1451518851146,0.029296875
1451518855804,0.041015625
1451518861147,0.029296875
1451518865516,0.029296875
1451518871149,0.0341796875
1451518874253,0.03125
1451518879250,0.0302734375
1451518884138,0.017578125
1451518887939,0.0341796875
1451518895222,0.033203125
1451518899301,0.029296875
1451518907336,0.0322265625
1451518914601,0.03515625
1451518919183,0.0302734375
1451518924166,0.029296875
1451518933184,0.02734375
1451518937788,0.0341796875
1451518945523,0.0419921875
1451518949888,0.0283203125
1451518954746,0.0283203125
1451518962332,0.0390625
1451518967186,0.0322265625
1451518974944,0.033203125
1451518979086,0.03125
1451518983595,0.0322265625
1451518991164,0.0322265625
1451518994323,0.0390625
1451518999341,0.037109375
1451519007005,0.0302734375
1451519012315,0.0341796875
1451519016733,0.03125
1451519021370,0.0361328125
1451519028690,0.0283203125
1451519038661,0.03125
1451519043572,0.029296875
1451519048084,0.0302734375
1451519052379,0.0380859375
1451519057708,0.02734375
1451519062953,0.033203125
1451519067987,0.037109375
1451519072472,0.0322265625
1451519077615,0.0341796875
1451519081972,0.0361328125
1451519086518,0.0302734375
1451519091639,0.037109375
1451519095839,0.037109375
1451519101178,0.0322265625
1451519104925,0.0302734375
1451519111668,0.03125
1451519116168,0.033203125
1451519121181,0.0302734375
1451519125790,0.017578125
1451519129826,0.033203125
1451519134153,0.0302734375
1451519139052,0.02734375
1451519143786,0.03125
1451519148547,0.03515625
1451519152770,0.03515625
1451519161185,0.0322265625
1451519165616,0.037109375
1451519172703,0.03125
1451519181188,0.0341796875
1451519185727,0.017578125
1451519191189,0.0361328125
1451519198150,0.0263671875
1451519205929,0.029296875
1451519211194,0.029296875
1451519221882,0.0322265625
1451519226537,0.0302734375
1451519231195,0.0341796875
1451519236300,0.0390625
1451519241197,0.0322265625
1451519248914,0.0283203125
1451519253423,0.0341796875
1451519256803,0.03515625
1451519261198,0.037109375
1451519265318,0.033203125
1451519271201,0.0361328125
1451519275580,0.03125
1451519280084,0.03125
1451519285181,0.03125
1451519296317,0.03125
1451519301204,0.037109375
1451519308177,0.017578125
1451519315641,0.029296875
1451519319882,0.0322265625
1451519323973,0.029296875
1451519328429,0.0283203125
1451519333386,0.0341796875
1451519338125,0.033203125
1451519342202,0.029296875
1451519351533,0.0302734375
1451519356610,0.0341796875
1451519369061,0.0341796875
1451519373566,0.03515625
1451519378863,0.029296875
1451519383650,0.025390625
1451519388842,0.0322265625
1451519395565,0.0244140625
1451519403338,0.03515625
1451519407991,0.03515625
1451519412452,0.0302734375
1451519418124,0.02734375
1451519424017,0.0263671875
1451519428738,0.0361328125
1451519435457,0.03515625
1451519439344,0.03125
1451519444396,0.0341796875
1451519452286,0.037109375
1451519457222,0.03125
1451519461733,0.0302734375
1451519468452,0.03125
1451519473194,0.0322265625
1451519477121,0.03125
1451519481672,0.029296875
1451519486118,0.0341796875
1451519491329,0.03515625
1451519496558,0.0322265625
1451519501231,0.03125
1451519505044,0.0380859375
1451519509256,0.03515625
1451519514377,0.03515625
1451519521580,0.0341796875
1451519529071,0.029296875
1451519533463,0.0322265625
1451519551450,0.017578125
1451519556075,0.0400390625
1451519561264,0.033203125
1451519565944,0.0341796875
1451519571239,0.0234375
1451519576032,0.0380859375
1451519581241,0.0302734375
1451519585855,0.0302734375
1451519591262,0.029296875
1451519594864,0.0283203125
1451519599605,0.0302734375
1451519609071,0.017578125
1451519612247,0.029296875
1451519616448,0.0302734375
1451519622529,0.0322265625
1451519629581,0.0302734375
1451519636907,0.03125
1451519641991,0.0302734375
1451519646943,0.033203125
1451519652699,0.0390625
1451519657102,0.0322265625
1451519661251,0.041015625
1451519665995,0.0302734375
1451519672268,0.0322265625
1451519679799,0.025390625
1451519684097,0.0322265625
1451519691395,0.0341796875
1451519696113,0.0302734375
1451519701256,0.033203125
1451519704943,0.0302734375
1451519709327,0.03125
1451519714032,0.03515625
1451519721375,0.029296875
1451519726354,0.0302734375
1451519731476,0.017578125
1451519736169,0.029296875
1451519741278,0.03125
1451519745075,0.0341796875
1451519749933,0.0302734375
1451519753900,0.0400390625
1451519759060,0.0341796875
1451519763525,0.029296875
1451519772379,0.03515625
1451519779075,0.03515625
1451519782830,0.02734375
1451519787289,0.037109375
1451519794918,0.025390625
1451519800173,0.025390625
1451519808186,0.0302734375
1451519815657,0.0302734375
1451519819679,0.029296875
1451519831851,0.0361328125
1451519836548,0.037109375
1451519841275,0.0400390625
1451519847880,0.0361328125
1451519853062,0.0322265625
1451519861420,0.029296875
1451519867390,0.0283203125
1451519874427,0.0419921875
1451519879678,0.037109375
1451519884609,0.029296875
1451519889216,0.029296875
1451519894178,0.033203125
1451519901785,0.0400390625
1451519909660,0.017578125
1451519916868,0.0341796875
1451519922142,0.0322265625
1451519928591,0.033203125
1451519936492,0.0361328125
1451519943637,0.0322265625
1451519947910,0.0283203125
1451519953095,0.037109375
1451519957303,0.0283203125
1451519962464,0.0400390625
1451519966283,0.0263671875
1451519972452,0.017578125
1451519982657,0.033203125
1451519987358,0.0263671875
1451519992467,0.029296875
1451520000262,0.029296875
1451520005138,0.02734375
1451520009863,0.0234375
1451520014174,0.0263671875
1451520018755,0.0302734375
1451520023579,0.0283203125
1451520028106,0.037109375
1451520030902,0.0263671875
1451520032743,0.0302734375
1451520033989,0.025390625
1451520035453,0.0244140625
1451520036917,0.0244140625
1451520038174,0.0263671875
1451520039408,0.0234375
1451520040650,0.025390625
1451520042458,0.0263671875
1451520043126,0.025390625
1451520044370,0.02734375
1451520045612,0.02734375
1451520046853,0.025390625
1451520048093,0.025390625
1451520049343,0.02734375
1451520050594,0.025390625
1451520052474,0.0263671875
1451520053091,0.0263671875
1451520054338,0.0234375
1451520055826,0.0234375
1451520057268,0.0234375
1451520058504,0.0244140625
1451520059740,0.0263671875
1451520060987,0.0244140625
1451520062461,0.033203125
1451520063471,0.0234375
1451520064709,0.0234375
1451520065954,0.0234375
1451520067198,0.0322265625
1451520068440,0.0263671875
1451520069680,0.0234375
1451520070928,0.0263671875
1451520072460,0.025390625
1451520073425,0.0224609375
1451520074787,0.0244140625
1451520076275,0.0244140625
1451520077535,0.0263671875
1451520078775,0.0234375
1451520080021,0.0224609375
1451520081264,0.0263671875
1451520082508,0.0263671875
1451520083750,0.0234375
1451520084990,0.0244140625
1451520086230,0.0234375
1451520087472,0.0244140625
1451520088725,0.02734375
1451520090735,0.0244140625
1451520093773,0.0244140625
1451520095258,0.025390625
1451520096500,0.0244140625
1451520097740,0.0234375
1451520098984,0.0419921875
1451520100229,0.0234375
1451520102465,0.0234375
1451520102755,0.0234375
1451520103994,0.0234375
1451520105233,0.0234375
1451520106477,0.0234375
1451520107718,0.025390625
1451520108970,0.0244140625
1451520110214,0.02734375
1451520112482,0.0263671875
1451520112870,0.025390625
1451520114373,0.0244140625
1451520115629,0.02734375
1451520116887,0.0244140625
1451520118123,0.025390625
1451520119367,0.025390625
1451520120607,0.0244140625
1451520122468,0.02734375
1451520123084,0.0234375
1451520124326,0.0244140625
1451520125568,0.0244140625
1451520126818,0.0244140625
1451520128062,0.0234375
1451520129314,0.0263671875
1451520130563,0.025390625
1451520132469,0.0234375
1451520134659,0.0234375
1451520135908,0.0263671875
1451520137152,0.025390625
1451520138394,0.0263671875
1451520139642,0.0244140625
1451520140884,0.0244140625
1451520142485,0.0244140625
1451520143367,0.0234375
1451520144611,0.0244140625
1451520145853,0.0234375
1451520147099,0.0234375
1451520148347,0.0234375
1451520149595,0.0234375
1451520152478,0.0263671875
1451520153902,0.0224609375
1451520155135,0.0234375
1451520156375,0.025390625
1451520157619,0.0263671875
1451520158863,0.025390625
1451520160106,0.02734375
1451520162532,0.02734375
1451520163788,0.0263671875
1451520165038,0.0244140625
1451520166280,0.0234375
1451520167524,0.0234375
1451520168785,0.0234375
1451520170287,0.025390625
1451520172491,0.0263671875
1451520172867,0.0234375
1451520174109,0.0224609375
1451520175351,0.0234375
1451520176592,0.0234375
1451520177832,0.0234375
1451520179074,0.025390625
1451520180318,0.0263671875
1451520182474,0.0244140625
1451520182809,0.0244140625
1451520184061,0.0224609375
1451520185309,0.0244140625
1451520186555,0.0263671875
1451520187803,0.0244140625
1451520189077,0.0234375
1451520190552,0.0263671875
1451520192476,0.0234375
1451520193138,0.0234375
1451520194380,0.025390625
1451520195622,0.025390625
1451520196863,0.02734375
1451520198107,0.0263671875
1451520199353,0.0263671875
1451520200595,0.0263671875
1451520202491,0.02734375
1451520203081,0.0263671875
1451520204322,0.0234375
1451520205574,0.0234375
1451520206818,0.0263671875
1451520208062,0.02734375
1451520209510,0.0263671875
1451520212839,0.0234375
1451520214777,0.0244140625
1451520217200,0.0263671875
1451520218442,0.0263671875
1451520219684,0.0263671875
1451520220928,0.025390625
1451520222480,0.0263671875
1451520223422,0.0263671875
1451520224671,0.0244140625
1451520225935,0.0234375
1451520227449,0.025390625
1451520228757,0.0263671875
1451520229994,0.0224609375
1451520231236,0.0234375
1451520232496,0.0234375
1451520233720,0.0234375
1451520234962,0.0244140625
1451520236205,0.0244140625
1451520237449,0.025390625
1451520238695,0.0244140625
1451520239935,0.0244140625
1451520241187,0.0244140625
1451520242485,0.0244140625
1451520243683,0.0302734375
1451520244933,0.0224609375
1451520390187,0.017578125
1451520395668,0.0302734375
1451520400958,0.0263671875
1451520405994,0.0322265625
1451520411826,0.0322265625
1451520419171,0.03125
1451520424426,0.0302734375
1451520428973,0.033203125
1451520435722,0.03125
1451520440476,0.03125
1451520446233,0.03125
1451520451598,0.0263671875
1451520455600,0.033203125
1451520460066,0.037109375
1451520465600,0.0302734375
1451520471275,0.0322265625
1451520476265,0.033203125
1451520483521,0.029296875
1451520487603,0.02734375
1451520493430,0.03125
1451520498891,0.0263671875
1451520503508,0.0400390625
1451520510999,0.02734375
1451520516269,0.03125
1451520523910,0.0322265625
1451520531558,0.0322265625
1451520535900,0.03515625
1451520540727,0.029296875
1451520545612,0.033203125
1451520549382,0.0302734375
1451520553745,0.021484375
1451520559204,0.0322265625
1451520563838,0.03515625
1451520569335,0.03515625
1451520573950,0.03125
1451520578691,0.037109375
1451520583653,0.0341796875
1451520588488,0.0263671875
1451520595617,0.0263671875
1451520600446,0.0322265625
1451520608167,0.025390625
1451520613704,0.0322265625
1451520618654,0.0341796875
1451520625917,0.03515625
1451520631826,0.0244140625
1451520636857,0.037109375
1451520641745,0.025390625
1451520649413,0.037109375
1451520653794,0.033203125
1451520658701,0.033203125
1451520663377,0.03125
1451520669742,0.029296875
1451520678695,0.0419921875
1451520686356,0.0302734375
1451520692243,0.017578125
1451520696015,0.0302734375
1451520700478,0.0283203125
1451520705631,0.0322265625
1451520714378,0.03125
1451520719243,0.0322265625
1451520727240,0.037109375
1451520732019,0.0283203125
1451520737022,0.0361328125
1451520741962,0.0390625
1451520746920,0.0283203125
1451520752034,0.0322265625
1451520756419,0.0361328125
1451520764332,0.029296875
1451520768836,0.02734375
1451520773439,0.029296875
1451520778118,0.0322265625
1451520786635,0.0263671875
1451520791655,0.0341796875
1451520796535,0.02734375
1451520801719,0.033203125
1451520806286,0.0361328125
1451520816585,0.0302734375
1451520823040,0.0341796875
1451520827823,0.0302734375
1451520833775,0.029296875
1451520838645,0.0302734375
1451520842955,0.0361328125
1451520850414,0.0322265625
1451520854521,0.033203125
1451520859013,0.029296875
1451520863655,0.029296875
1451520873495,0.017578125
1451520876004,0.017578125
1451520882079,0.03125
1451520886672,0.025390625
1451520891534,0.0361328125
1451520898905,0.02734375
1451520903968,0.029296875
1451520909235,0.03125
1451520914090,0.033203125
1451520919343,0.03515625
1451520923685,0.029296875
1451520928690,0.03515625
1451520936571,0.0341796875
1451520943544,0.03125
1451520948349,0.029296875
1451520953081,0.03125
1451520961441,0.0361328125
1451520972728,0.0322265625
1451520980754,0.03125
1451520985830,0.033203125
1451520991695,0.017578125
1451520995686,0.03125
1451521000652,0.0234375
1451521005669,0.0302734375
1451521014255,0.03125
1451521021733,0.0302734375
1451521028395,0.029296875
1451521035675,0.0322265625
1451521039296,0.0234375
1451521044031,0.0302734375
1451521051935,0.017578125
1451521056114,0.0263671875
1451521061217,0.0263671875
1451521069192,0.025390625
1451521074339,0.0302734375
1451521079010,0.02734375
1451521084387,0.0302734375
1451521088295,0.0302734375
1451521095734,0.0302734375
1451521104075,0.03125
1451521108546,0.029296875
1451521116225,0.03515625
1451521120658,0.03125
1451521125711,0.03515625
1451521133400,0.0283203125
1451521137300,0.0341796875
1451521144505,0.0302734375
1451521149188,0.025390625
1451521153797,0.03515625
1451521159144,0.02734375
1451521163762,0.0341796875
1451521168655,0.0302734375
1451521173888,0.0361328125
1451521178422,0.0302734375
1451521187768,0.0341796875
1451521195695,0.0283203125
1451521199075,0.0302734375
1451521204488,0.029296875
1451521209083,0.0361328125
1451521214012,0.03515625
1451521218546,0.0322265625
1451521231230,0.0263671875
1451521236671,0.0390625
1451521240905,0.0302734375
1451521245705,0.0341796875
1451521251529,0.0302734375
1451521255764,0.033203125
1451521259798,0.0341796875
1451521263555,0.0361328125
1451521268996,0.02734375
1451521275705,0.037109375
1451521279479,0.0380859375
1451521284392,0.03515625
1451521289327,0.0302734375
1451521295966,0.017578125
1451521298526,0.01953125
1451521305709,0.0322265625
1451521313634,0.0283203125
1451521318087,0.0341796875
1451521323045,0.0283203125
1451521335765,0.0263671875
1451521340646,0.037109375
1451521345919,0.0322265625
1451521351090,0.0263671875
1451521356886,0.0205078125
1451521363831,0.03515625
1451521368458,0.0341796875
1451521373961,0.02734375
1451521379464,0.0322265625
1451521383585,0.025390625
1451521391528,0.025390625
1451521396485,0.03515625
1451521401627,0.033203125
1451521406844,0.0283203125
1451521410894,0.0322265625
1451521418360,0.0234375
1451521423999,0.0263671875
1451521429125,0.033203125
1451521437600,0.0224609375
1451521441823,0.0283203125
1451521446833,0.033203125
1451521454611,0.0361328125
1451521462352,0.0263671875
1451521467045,0.029296875
1451521471589,0.03515625
1451521480625,0.037109375
1451521485979,0.0283203125
1451521490700,0.0302734375
1451521495749,0.03125
1451521502982,0.0283203125
1451521507707,0.0341796875
1451521513611,0.041015625
1451521518314,0.033203125
1451521525863,0.03125
1451521530098,0.0322265625
1451521539676,0.0341796875
1451521544596,0.0341796875
1451521549195,0.0322265625
1451521553641,0.0263671875
1451521562333,0.037109375
1451521563676,0.03515625
1451521572512,0.025390625
1451521576949,0.033203125
1451521581499,0.03125
1451521587378,0.0341796875
1451521591919,0.03125
1451521597380,0.029296875
1451521601770,0.0390625
1451521606905,0.0263671875
1451521611118,0.0322265625
1451521619191,0.0341796875
1451521622896,0.0302734375
1451521628166,0.03515625
1451521632617,0.0322265625
1451521637760,0.0341796875
1451521642335,0.0302734375
1451521646651,0.0322265625
1451521655765,0.017578125
1451521662685,0.03515625
1451521670092,0.0361328125
1451521675757,0.0322265625
1451521679602,0.033203125
1451521686779,0.033203125
1451521691558,0.03125
1451521696798,0.0400390625
1451521700837,0.0361328125
1451521705762,0.037109375
1451521710226,0.03515625
1451521718986,0.017578125
1451521722812,0.02734375
1451521735764,0.0302734375
1451521743115,0.0390625
1451521747728,0.029296875
1451521752891,0.037109375
1451521757005,0.0400390625
1451521761326,0.029296875
1451521765768,0.03125
1451521770173,0.021484375
1451521776084,0.037109375
1451521780192,0.033203125
1451521787176,0.0361328125
1451521795773,0.0322265625
1451521803060,0.0283203125
1451521807835,0.029296875
1451521812660,0.033203125
1451521817202,0.03125
1451521822431,0.0302734375
1451521826869,0.033203125
1451521831450,0.03515625
1451521838159,0.0244140625
1451521845780,0.03515625
1451521849593,0.0302734375
1451521854558,0.03125
1451521859588,0.029296875
1451521865785,0.0234375
1451521871296,0.029296875
1451521883322,0.03125
1451521889250,0.029296875
1451521894310,0.0361328125
1451521902154,0.0341796875
1451521906205,0.0302734375
1451521911028,0.03125
1451521916437,0.025390625
1451521921599,0.0322265625
1451521926610,0.03125
1451521931601,0.0302734375
1451521935791,0.021484375
1451521936336,0.029296875
1451521937582,0.0283203125
1451521938828,0.025390625
1451521940074,0.025390625
1451521941548,0.025390625
1451521943006,0.02734375
1451521945793,0.0263671875
1451521946693,0.0263671875
1451521947937,0.0283203125
1451521949178,0.0283203125
1451521950419,0.025390625
1451521951666,0.02734375
1451521952900,0.0234375
1451521954138,0.0234375
1451521955794,0.0234375
1451521956634,0.02734375
1451521958435,0.02734375
1451521960923,0.02734375
1451521962155,0.0234375
1451521963399,0.0244140625
1451521964642,0.0244140625
1451521965886,0.0234375
1451521967116,0.0263671875
1451521968360,0.0263671875
1451521969598,0.0263671875
1451521970838,0.0263671875
1451521972095,0.0244140625
1451521973341,0.02734375
1451521974587,0.0263671875
1451521975835,0.0234375
1451521977085,0.02734375
1451521978578,0.025390625
1451521979968,0.0234375
1451521981202,0.025390625
1451521982434,0.0234375
1451521983678,0.0234375
1451521985797,0.025390625
1451521986166,0.02734375
1451521987403,0.02734375
1451521989829,0.0263671875
1451521991071,0.0263671875
1451521992320,0.0234375
1451521993566,0.0234375
1451521995798,0.0263671875
1451521996108,0.0244140625
1451521997370,0.02734375
1451521998836,0.0234375
1451522000213,0.025390625
1451522001447,0.025390625
1451522002691,0.025390625
1451522003934,0.0244140625
1451522005802,0.0244140625
1451522006420,0.0234375
1451522007662,0.0244140625
1451522008900,0.0234375
1451522010142,0.0244140625
1451522011386,0.0244140625
1451522012633,0.0244140625
1451522013877,0.0234375
1451522015806,0.0234375
1451522016373,0.029296875
1451522018809,0.02734375
1451522020768,0.0234375
1451522022004,0.025390625
1451522023246,0.025390625
1451522024482,0.02734375
1451522026915,0.0234375
1451522028166,0.0234375
1451522029411,0.0234375
1451522030655,0.033203125
1451522031905,0.02734375
1451522033157,0.025390625
1451522034630,0.0244140625
1451522036004,0.0224609375
1451522037238,0.02734375
1451522038480,0.02734375
1451522039724,0.0244140625
1451522040963,0.0234375
1451522042206,0.0234375
1451522043449,0.0244140625
1451522044689,0.0244140625
1451522045975,0.0244140625
1451522047216,0.0244140625
1451522048468,0.0224609375
1451522049720,0.0263671875
1451522052154,0.0234375
1451522053412,0.0224609375
1451522055807,0.0244140625
1451522056291,0.0234375
1451522057525,0.025390625
1451522058767,0.025390625
1451522060013,0.0244140625
1451522061254,0.025390625
1451522062496,0.0263671875
1451522063736,0.02734375
1451522065808,0.025390625
1451522066222,0.0263671875
1451522067466,0.025390625
1451522068705,0.0234375
1451522069955,0.0244140625
1451522071202,0.0234375
1451522073728,0.02734375
1451522075810,0.0244140625
1451522076484,0.0234375
1451522079202,0.025390625
1451522080438,0.0234375
1451522082197,0.0234375
1451522083431,0.0283203125
1451522084679,0.0263671875
1451522085973,0.02734375
1451522087220,0.0244140625
1451522088468,0.0234375
1451522089722,0.0244140625
1451522091216,0.02734375
1451522092565,0.02734375
1451522093806,0.025390625
1451522095811,0.0263671875
1451522096289,0.0263671875
1451522097531,0.0263671875
1451522098771,0.02734375
1451522100016,0.02734375
1451522101256,0.0224609375
1451522102496,0.0244140625
1451522103736,0.025390625
1451522105812,0.0234375
1451522106238,0.0244140625
1451522107480,0.0234375
1451522108731,0.0244140625
1451522110001,0.02734375
1451522111489,0.0234375
1451522112826,0.0234375
1451522114059,0.025390625
1451522115816,0.0263671875
1451522116534,0.0234375
1451522117775,0.0234375
1451522119014,0.0263671875
1451522120257,0.02734375
1451522121499,0.0263671875
1451522122743,0.02734375
1451522123981,0.0234375
1451522125815,0.0263671875
1451522126473,0.025390625
1451522127722,0.0244140625
1451522128968,0.0224609375
1451522130408,0.0263671875
1451522131876,0.025390625
1451522133126,0.0234375
1451522134366,0.025390625
1451522136801,0.0244140625
1451522138547,0.02734375
1451522139781,0.0244140625
1451522141806,0.02734375
1451522143054,0.0234375
1451522144298,0.0234375
1451522145818,0.0234375
1451522147054,0.017578125
1451522150193,0.0283203125
1451522154675,0.029296875
1451522160116,0.0322265625
1451522165851,0.029296875
1451522172626,0.029296875
1451522178245,0.029296875
1451522187324,0.02734375
1451522192549,0.0224609375
1451522198496,0.017578125
1451522203371,0.0302734375
1451522208390,0.0322265625
1451522216516,0.0302734375
1451522225828,0.025390625
1451522233713,0.0263671875
1451522238578,0.0244140625
1451522243404,0.0263671875
1451522248805,0.029296875
1451522253850,0.0244140625
1451522260407,0.0361328125
1451522267966,0.02734375
1451522273199,0.0283203125
1451522281657,0.029296875
1451522286263,0.0322265625
1451522292186,0.0263671875
1451522297108,0.0302734375
1451522302159,0.0341796875
1451522306874,0.0302734375
1451522315841,0.0302734375
1451522319630,0.029296875
1451522325840,0.0361328125
1451522329883,0.0283203125
1451522335846,0.0224609375
1451522340171,0.0244140625
1451522347158,0.0244140625
1451522352041,0.03125
1451522360425,0.02734375
1451522364377,0.0302734375
1451522370203,0.033203125
1451522375848,0.0302734375
1451522381031,0.0322265625
1451522385897,0.03515625
1451522393088,0.0283203125
1451522398785,0.03125
1451522414506,0.033203125
1451522422773,0.0224609375
1451522427760,0.0283203125
1451522433602,0.029296875
1451522438515,0.0322265625
1451522444000,0.02734375
1451522448180,0.0302734375
1451522453902,0.029296875
1451522459452,0.029296875
1451522464575,0.0263671875
1451522469872,0.0322265625
1451522474626,0.029296875
1451522478603,0.033203125
1451522484110,0.0390625
1451522488893,0.0322265625
1451522496596,0.025390625
1451522501496,0.017578125
1451522506355,0.02734375
1451522514332,0.029296875
1451522522709,0.025390625
1451522528190,0.0361328125
1451522536843,0.0302734375
1451522543586,0.0322265625
1451522551894,0.029296875
1451522557959,0.025390625
1451522566940,0.0302734375
1451522572549,0.0322265625
1451522577995,0.0361328125
1451522582890,0.03515625
1451522587705,0.0341796875
1451522592287,0.02734375
1451522600949,0.0341796875
1451522606418,0.03125
1451522612789,0.03125
1451522617435,0.029296875
1451522622660,0.0263671875
1451522628657,0.0244140625
1451522633179,0.0322265625
1451522638044,0.0283203125
1451522643777,0.03125
1451522648750,0.033203125
1451522653508,0.03125
1451522658461,0.03125
1451522663630,0.029296875
1451522669001,0.0283203125
1451522674022,0.03125
1451522678738,0.0263671875
1451522683813,0.025390625
1451522690326,0.02734375
1451522695889,0.03125
1451522700378,0.0224609375
1451522706554,0.0302734375
1451522711341,0.03515625
1451522718460,0.0302734375
1451522726999,0.025390625
1451522732768,0.0322265625
1451522737553,0.02734375
1451522742823,0.017578125
1451522747122,0.0234375
1451522751817,0.033203125
1451522756837,0.0263671875
1451522761666,0.03125
1451522766517,0.0263671875
1451522771736,0.0361328125
1451522776164,0.03125
1451522780841,0.0322265625
1451522789317,0.02734375
1451522794201,0.0302734375
1451522799550,0.03125
1451522804013,0.0322265625
1451522810609,0.0263671875
1451522815907,0.03125
1451522820137,0.033203125
1451522825906,0.0283203125
1451522830987,0.033203125
1451522835925,0.0302734375
1451522840128,0.0322265625
1451522845911,0.03515625
1451522850439,0.033203125
1451522855910,0.0244140625
1451522864079,0.033203125
1451522869814,0.0341796875
1451522878247,0.03515625
1451522883812,0.0341796875
1451522891607,0.025390625
1451522897088,0.0302734375
1451522901599,0.0283203125
1451522906125,0.037109375
1451522910540,0.029296875
1451522915919,0.0234375
1451522920718,0.033203125
1451522925940,0.0302734375
1451522930619,0.0302734375
1451522935922,0.02734375
1451522941359,0.0390625
1451522948272,0.0283203125
1451522953168,0.0244140625
1451522957855,0.0302734375
1451522962046,0.0302734375
1451522967337,0.0283203125
1451522974094,0.0361328125
1451522979708,0.029296875
1451522984657,0.0361328125
1451522989140,0.029296875
1451522993987,0.0322265625
1451522999297,0.0322265625
1451523004847,0.029296875
1451523009052,0.029296875
1451523014848,0.03125
1451523019598,0.0263671875
1451523024855,0.02734375
1451523029482,0.0302734375
1451523038239,0.0283203125
1451523047922,0.0341796875
1451523053429,0.0263671875
1451523065087,0.029296875
1451523069335,0.0283203125
1451523074854,0.033203125
1451523079217,0.029296875
1451523084856,0.0283203125
1451523090139,0.0283203125
1451523095557,0.03125
1451523100648,0.0341796875
1451523108695,0.0341796875
1451523113310,0.0322265625
1451523117631,0.0361328125
1451523122633,0.0283203125
1451523130127,0.0263671875
1451523137771,0.0322265625
1451523142130,0.033203125
1451523149839,0.03125
1451523155074,0.0322265625
1451523160873,0.02734375
1451523169373,0.017578125
1451523173503,0.03515625
1451523178281,0.0283203125
1451523186047,0.0341796875
1451523190761,0.0322265625
1451523196208,0.0263671875
1451523201091,0.0263671875
1451523206135,0.0283203125
1451523218079,0.03125
1451523223242,0.033203125
1451523229647,0.017578125
1451523234880,0.03125
1451523238708,0.0400390625
1451523244877,0.0263671875
1451523248708,0.0322265625
1451523254879,0.0302734375
1451523258391,0.03515625
1451523263238,0.0302734375
1451523270393,0.0283203125
1451523275374,0.0322265625
1451523280604,0.029296875
1451523285739,0.017578125
1451523292848,0.029296875
1451523297887,0.0302734375
1451523303562,0.0302734375
1451523311017,0.0302734375
1451523317000,0.0302734375
1451523323747,0.0263671875
1451523329082,0.0263671875
1451523334888,0.02734375
1451523338199,0.029296875
1451523346432,0.017578125
1451523351453,0.0224609375
1451523356676,0.0302734375
1451523361648,0.033203125
1451523368849,0.033203125
1451523373708,0.03125
1451523379463,0.0302734375
1451523384898,0.0283203125
1451523392957,0.0283203125
1451523402548,0.02734375
1451523410805,0.0302734375
1451523412128,0.02734375
1451523419339,0.029296875
1451523424900,0.0263671875
1451523428732,0.0361328125
1451523433518,0.0302734375
1451523438576,0.0283203125
1451523443362,0.033203125
1451523448545,0.029296875
1451523455582,0.0302734375
1451523460495,0.0302734375
1451523465010,0.0341796875
1451523474907,0.0302734375
1451523479766,0.029296875
1451523487477,0.03125
1451523491997,0.0322265625
1451523499807,0.025390625
1451523505164,0.029296875
1451523513635,0.0283203125
1451523520432,0.037109375
1451523525806,0.029296875
1451523529897,0.0361328125
1451523539107,0.0302734375
1451523546204,0.0341796875
1451523554917,0.0283203125
1451523559775,0.02734375
1451523564948,0.0380859375
1451523570003,0.0263671875
1451523574920,0.0263671875
1451523587926,0.017578125
1451523592438,0.029296875
1451523597947,0.0283203125
1451523603412,0.025390625
1451523609401,0.025390625
1451523617444,0.033203125
1451523625881,0.0400390625
1451523631874,0.0302734375
1451523635979,0.0283203125
1451523641131,0.029296875
1451523645708,0.0341796875
1451523653707,0.0322265625
1451523662633,0.0283203125
1451523668433,0.0263671875
1451523672724,0.033203125
1451523677061,0.0341796875
1451523681803,0.0283203125
1451523686492,0.021484375
1451523691133,0.0302734375
1451523696097,0.0263671875
1451523701116,0.0341796875
1451523705943,0.03125
1451523711280,0.017578125
1451523714938,0.03125
1451523724940,0.0341796875
1451523729828,0.03125
1451523734941,0.0283203125
1451523740364,0.0263671875
1451523746463,0.0302734375
1451523751376,0.0283203125
1451523757116,0.0322265625
1451523765282,0.037109375
1451523769756,0.033203125
1451523776115,0.02734375
1451523781114,0.0322265625
1451523784946,0.037109375
1451523798352,0.0322265625
1451523802751,0.03125
1451523807169,0.033203125
1451523812593,0.029296875
1451523817528,0.0341796875
1451523822488,0.0322265625
1451523831917,0.017578125
1451523836112,0.03125
1451523838852,0.01953125
1451523840093,0.029296875
1451523841331,0.029296875
1451523842573,0.0263671875
1451523843815,0.0283203125
1451523845109,0.0244140625
1451523846360,0.0283203125
1451523847610,0.0283203125
1451523848850,0.03125
1451523850104,0.0283203125
1451523851372,0.0263671875
1451523852880,0.0263671875
1451523854955,0.02734375
1451523855473,0.0244140625
1451523856713,0.025390625
1451523857957,0.0263671875
1451523859197,0.02734375
1451523860441,0.0263671875
1451523861686,0.025390625
1451523862926,0.025390625
1451523864957,0.0263671875
1451523865456,0.0263671875
1451523866652,0.02734375
1451523867903,0.0263671875
1451523869153,0.0244140625
1451523870393,0.0234375
1451523871829,0.0234375
1451523873301,0.025390625
1451523874958,0.0234375
1451523875816,0.025390625
1451523877046,0.02734375
1451523878292,0.0263671875
1451523879534,0.025390625
1451523880772,0.025390625
1451523882013,0.025390625
1451523883253,0.0244140625
1451523884959,0.0234375
1451523885737,0.0244140625
1451523886983,0.0234375
1451523888232,0.0263671875
1451523890404,0.0263671875
1451523893502,0.0234375
1451523894961,0.0244140625
1451523895987,0.0244140625
1451523897228,0.0234375
1451523898469,0.0244140625
1451523899709,0.025390625
1451523900952,0.0263671875
1451523902208,0.0244140625
1451523903456,0.0234375
1451523904962,0.025390625
1451523905946,0.02734375
1451523907198,0.0263671875
1451523908705,0.0263671875
1451523910143,0.0263671875
1451523911377,0.025390625
1451523912621,0.02734375
1451523914966,0.0234375
1451523915101,0.0234375
1451523916342,0.0234375
1451523917584,0.0244140625
1451523918828,0.0234375
1451523920064,0.025390625
1451523921304,0.0263671875
1451523922557,0.0244140625
1451523923801,0.0234375
1451523925049,0.025390625
1451523926293,0.02734375
1451523927617,0.025390625
1451523929064,0.0263671875
1451523930394,0.0263671875
1451523931626,0.02734375
1451523932868,0.0244140625
1451523934968,0.0244140625
1451523935356,0.025390625
1451523936595,0.0234375
1451523937835,0.025390625
1451523939077,0.02734375
1451523940313,0.0244140625
1451523941568,0.0244140625
1451523942805,0.0234375
1451523944970,0.0400390625
1451523945320,0.0263671875
1451523946566,0.02734375
1451523948088,0.0244140625
1451523950062,0.0263671875
1451523951319,0.0263671875
1451523953148,0.025390625
1451523954967,0.0361328125
1451523955620,0.0263671875
1451523956862,0.0244140625
1451523958102,0.0234375
1451523959354,0.0244140625
1451523960600,0.0234375
1451523961848,0.0224609375
1451523964969,0.0244140625
1451523965831,0.025390625
1451523967069,0.0234375
1451523968313,0.0244140625
1451523969553,0.025390625
1451523970790,0.0244140625
1451523972036,0.0263671875
1451523973278,0.025390625
1451523974970,0.0234375
1451523975762,0.0244140625
1451523977007,0.0244140625
1451523978251,0.0263671875
1451524124140,0.0244140625
1451524129171,0.0283203125
1451524134886,0.0283203125
1451524141121,0.03125
1451524146868,0.029296875
1451524152369,0.0224609375
1451524156283,0.02734375
1451524161388,0.0361328125
1451524166552,0.03515625
1451524172371,0.025390625
1451524181164,0.017578125
1451524185657,0.0361328125
1451524191458,0.025390625
1451524196899,0.02734375
1451524201468,0.025390625
1451524206572,0.0263671875
1451524211671,0.0244140625
1451524218694,0.02734375
1451524226143,0.0224609375
1451524233474,0.0263671875
1451524239037,0.029296875
1451524243474,0.0302734375
1451524248774,0.0263671875
1451524253765,0.029296875
1451524259132,0.02734375
1451524263963,0.0322265625
1451524269145,0.0302734375
1451524274968,0.0283203125
1451524279853,0.03515625
1451524289005,0.02734375
1451524293989,0.02734375
1451524298948,0.0263671875
1451524303703,0.03125
1451524309117,0.0283203125
1451524313866,0.0283203125
1451524321453,0.02734375
1451524326482,0.0283203125
1451524332085,0.03125
1451524338710,0.0390625
1451524341718,0.0380859375
1451524346261,0.03125
1451524352424,0.02734375
1451524358725,0.0380859375
1451524365588,0.0400390625
1451524375038,0.02734375
1451524380798,0.0302734375
1451524385785,0.029296875
1451524391331,0.0283203125
1451524396480,0.0322265625
1451524401443,0.0244140625
1451524407098,0.0322265625
1451524412260,0.0361328125
1451524418734,0.025390625
1451524423542,0.0361328125
1451524428722,0.0322265625
1451524433508,0.0283203125
1451524438722,0.0302734375
1451524443901,0.0400390625
1451524449840,0.02734375
1451524455185,0.0244140625
1451524460578,0.03125
1451524465846,0.029296875
1451524470289,0.03125
1451524475472,0.03125
1451524481237,0.03125
1451524486303,0.017578125
1451524490406,0.0322265625
1451524495313,0.02734375
1451524500229,0.025390625
1451524504822,0.029296875
1451524510119,0.0283203125
1451524516056,0.0234375
1451524524263,0.0263671875
1451524530976,0.0283203125
1451524536565,0.03125
1451524541091,0.0263671875
1451524549039,0.041015625
1451524554183,0.025390625
1451524558740,0.0263671875
1451524563649,0.03125
1451524571768,0.029296875
1451524576673,0.029296875
1451524584744,0.0283203125
1451524590125,0.025390625
1451524594773,0.0224609375
1451524599906,0.029296875
1451524607349,0.029296875
1451524615176,0.0361328125
1451524620689,0.0322265625
1451524628756,0.025390625
1451524633145,0.0380859375
1451524640920,0.029296875
1451524646153,0.02734375
1451524650973,0.02734375
1451524656682,0.029296875
1451524660959,0.0341796875
1451524666210,0.025390625
1451524670790,0.03125
1451524677492,0.0380859375
1451524685549,0.0244140625
1451524690714,0.0234375
1451524695998,0.033203125
1451524705765,0.0234375
1451524710564,0.0322265625
1451524715449,0.03125
1451524720636,0.02734375
1451524734220,0.0244140625
1451524739586,0.0244140625
1451524746338,0.03125
1451524752458,0.0341796875
1451524757409,0.0244140625
1451524762582,0.02734375
1451524768765,0.0234375
1451524772694,0.0322265625
1451524781809,0.0244140625
1451524786829,0.01953125
1451524792050,0.0380859375
1451524797169,0.0263671875
1451524802766,0.025390625
1451524808779,0.02734375
1451524813129,0.033203125
1451524819249,0.029296875
1451524825901,0.0302734375
1451524830558,0.02734375
1451524835156,0.0244140625
1451524840690,0.0244140625
1451524846956,0.0234375
1451524851563,0.0283203125
1451524856450,0.0283203125
1451524861230,0.0302734375
1451524866477,0.03125
1451524871590,0.025390625
1451524876607,0.03125
1451524885699,0.03125
1451524893565,0.025390625
1451524901664,0.0322265625
1451524910042,0.0283203125
1451524914778,0.0244140625
1451524919493,0.02734375
1451524924442,0.02734375
1451524929552,0.02734375
1451524935525,0.029296875
1451524940498,0.0263671875
1451524945907,0.025390625
1451524950844,0.0244140625
1451524956548,0.025390625
1451524966170,0.041015625
1451524971338,0.0263671875
1451524976551,0.0263671875
1451524981584,0.03125
1451524986583,0.02734375
1451524991713,0.03125
1451524996658,0.0380859375
1451525002099,0.0341796875
1451525007072,0.037109375
1451525012517,0.0341796875
1451525018799,0.0302734375
1451525022900,0.0322265625
1451525030749,0.0322265625
1451525035650,0.025390625
1451525040895,0.0400390625
1451525046342,0.0341796875
1451525051617,0.0283203125
1451525057313,0.0302734375
1451525062444,0.0302734375
1451525068805,0.0234375
1451525073594,0.0361328125
1451525079436,0.03125
1451525085843,0.033203125
1451525090458,0.03125
1451525096233,0.0302734375
1451525101392,0.03515625
1451525107130,0.0263671875
1451525112333,0.025390625
1451525118810,0.03515625
1451525122791,0.0263671875
1451525128811,0.0302734375
1451525134700,0.0322265625
1451525140127,0.029296875
1451525148814,0.02734375
1451525153081,0.033203125
1451525159508,0.0234375
1451525163571,0.029296875
1451525168819,0.03125
1451525178821,0.0283203125
1451525183774,0.0234375
1451525188820,0.0302734375
1451525196848,0.029296875
1451525201614,0.0283203125
1451525206351,0.0361328125
1451525215596,0.033203125
1451525223591,0.03515625
1451525228824,0.0302734375
1451525233903,0.0244140625
1451525238826,0.029296875
1451525244518,0.02734375
1451525250421,0.03515625
1451525255960,0.0263671875
1451525264037,0.029296875
1451525269399,0.0283203125
1451525274223,0.0263671875
1451525279176,0.033203125
1451525286235,0.0244140625
1451525291806,0.0283203125
1451525298834,0.025390625
1451525302865,0.02734375
1451525308836,0.03125
1451525314351,0.0322265625
1451525319425,0.03125
1451525332533,0.029296875
1451525338839,0.0263671875
1451525344603,0.029296875
1451525353050,0.0283203125
1451525358841,0.03125
1451525365304,0.03125
1451525372887,0.0244140625
1451525377394,0.029296875
1451525383595,0.029296875
1451525387736,0.03125
1451525402000,0.029296875
1451525408849,0.0263671875
1451525415130,0.029296875
1451525421396,0.0244140625
1451525426287,0.0322265625
1451525431772,0.0234375
1451525444510,0.02734375
1451525449406,0.017578125
1451525454555,0.0283203125
1451525460418,0.025390625
1451525466401,0.0283203125
1451525477433,0.0283203125
1451525483126,0.0263671875
1451525488858,0.0263671875
1451525494130,0.0234375
1451525498860,0.03125
1451525502968,0.0361328125
1451525508861,0.03125
1451525513236,0.017578125
1451525518863,0.03125
1451525523725,0.0283203125
1451525529118,0.02734375
1451525534097,0.03125
1451525542536,0.0244140625
1451525546887,0.0390625
1451525551135,0.0263671875
1451525556360,0.0302734375
1451525564161,0.025390625
1451525569200,0.01953125
1451525574050,0.025390625
1451525582030,0.0244140625
1451525588873,0.0283203125
1451525593630,0.0302734375
1451525599005,0.02734375
1451525604267,0.03125
1451525609334,0.02734375
1451525615210,0.0341796875
1451525619784,0.02734375
1451525624992,0.041015625
1451525630107,0.037109375
1451525638878,0.02734375
1451525642063,0.025390625
1451525647316,0.02734375
1451525658881,0.02734375
1451525663998,0.0341796875
1451525668883,0.029296875
1451525673575,0.0302734375
1451525679123,0.0283203125
1451525684297,0.029296875
1451525690930,0.017578125
1451525695187,0.0283203125
1451525703692,0.025390625
1451525709110,0.0244140625
1451525714353,0.0283203125
1451525720168,0.029296875
1451525726863,0.0234375
1451525736399,0.03125
1451525742518,0.0244140625
1451525744960,0.025390625
1451525746204,0.0302734375
1451525747444,0.025390625
1451525750625,0.0244140625
1451525751871,0.02734375
1451525753955,0.0234375
1451525755580,0.0234375
1451525756814,0.025390625
1451525758894,0.025390625
1451525760478,0.0234375
1451525761723,0.0234375
1451525762960,0.0234375
1451525764201,0.0224609375
1451525765447,0.0263671875
1451525766689,0.0263671875
1451525768900,0.0234375
1451525769232,0.02734375
1451525770478,0.0244140625
1451525771730,0.02734375
1451525772982,0.0244140625
1451525774472,0.0244140625
1451525775940,0.0263671875
1451525777191,0.0244140625
1451525779621,0.0234375
1451525780867,0.0244140625
1451525782103,0.0234375
1451525783346,0.0234375
1451525784584,0.0234375
1451525785822,0.0234375
1451525787062,0.0244140625
1451525788899,0.0263671875
1451525789566,0.025390625
1451525790811,0.0224609375
1451525792061,0.0263671875
1451525793309,0.0234375
1451525794811,0.0263671875
1451525796207,0.0244140625
1451525797442,0.025390625
1451525798902,0.0263671875
1451525799914,0.0263671875
1451525801156,0.0263671875
1451525802398,0.025390625
1451525803645,0.025390625
1451525804883,0.0244140625
1451525806125,0.0234375
1451525807367,0.0224609375
1451525808899,0.0234375
1451525809857,0.0224609375
1451525811696,0.02734375
1451525814010,0.02734375
1451525815252,0.0263671875
1451525816496,0.025390625
1451525817739,0.025390625
1451525818971,0.02734375
1451525820215,0.0263671875
1451525821460,0.0263671875
1451525822699,0.0263671875
1451525823947,0.02734375
1451525825192,0.02734375
1451525826440,0.025390625
1451525827688,0.0234375
1451525828932,0.0234375
1451525830372,0.0263671875
1451525831845,0.025390625
1451525833095,0.025390625
1451525834339,0.025390625
1451525835585,0.0244140625
1451525836829,0.0244140625
1451525839260,0.0234375
1451525840500,0.0244140625
1451525841744,0.0234375
1451525842984,0.0263671875
1451525844230,0.02734375
1451525845473,0.02734375
1451525846725,0.0244140625
1451525848905,0.0224609375
1451525849245,0.025390625
1451525850740,0.0224609375
1451525852181,0.025390625
1451525853440,0.025390625
1451525854676,0.0224609375
1451525855918,0.0224609375
1451525857160,0.0224609375
1451525858907,0.0234375
1451525859635,0.02734375
1451525860880,0.0263671875
1451525862119,0.0244140625
1451525863357,0.0234375
1451525864600,0.025390625
1451525865845,0.0234375
1451525867090,0.0234375
1451525868908,0.0224609375
1451525869666,0.0244140625
1451525871816,0.0234375
1451525874897,0.0263671875
1451525876141,0.025390625
1451525877381,0.02734375
1451525878910,0.0380859375
1451525879864,0.0234375
1451525881110,0.0234375
1451525882352,0.0234375
1451525883600,0.0234375
1451525884847,0.0234375
1451525886320,0.0234375
1451525887761,0.0263671875
1451525888995,0.025390625
1451525890231,0.0244140625
1451525891473,0.02734375
1451525892716,0.025390625
1451525893954,0.0234375
1451525895200,0.0419921875
1451525896436,0.025390625
1451525897680,0.025390625
1451525898934,0.02734375
1451525900171,0.0263671875
1451525901421,0.0263671875
1451525902667,0.0244140625
1451525903915,0.0234375
1451525905165,0.0244140625
1451525906654,0.02734375
1451525908914,0.0224609375
1451525909306,0.025390625
1451525910548,0.0263671875
1451525911792,0.0263671875
1451525913033,0.02734375
1451525914275,0.02734375
1451525915519,0.02734375
1451525916759,0.0234375
1451525918913,0.025390625
1451525919244,0.0263671875
1451525920486,0.02734375
1451525921734,0.02734375
1451525922980,0.02734375
1451525924222,0.02734375
1451525925668,0.025390625
1451525927133,0.0234375
1451525928939,0.0263671875
1451525929633,0.025390625
1451525930865,0.0234375
1451525932487,0.0263671875
1451525934200,0.0234375
1451525935508,0.0244140625
1451525936758,0.0244140625
1451525938916,0.02734375
1451525940491,0.0234375
1451525941977,0.02734375
1451525943255,0.0244140625
1451525944489,0.025390625
1451525945737,0.0244140625
1451525946979,0.025390625
1451525948918,0.0263671875
1451525949466,0.0263671875
1451525950710,0.0263671875
1451525951960,0.0263671875
1451525953199,0.0263671875
1451525954443,0.0263671875
1451525955695,0.025390625
1451525956947,0.0283203125
1451525958941,0.017578125
1451525964546,0.025390625
1451525969467,0.02734375
1451525978922,0.0234375
1451525982897,0.0244140625
1451525988944,0.0263671875
1451525993869,0.0244140625
1451525999637,0.021484375
1451526004598,0.0322265625
1451526009457,0.029296875
1451526015830,0.03515625
1451526021290,0.033203125
1451526026641,0.025390625
1451526032830,0.0234375
1451526037105,0.033203125
1451526046400,0.033203125
1451526058486,0.0263671875
1451526063545,0.02734375
1451526067781,0.0302734375
1451526077813,0.025390625
1451526084544,0.0263671875
1451526090049,0.033203125
1451526097019,0.0224609375
1451526100616,0.0380859375
1451526104381,0.033203125
1451526110202,0.0302734375
1451526117024,0.025390625
1451526121931,0.0263671875
1451526130834,0.0283203125
1451526135891,0.0263671875
1451526143892,0.02734375
1451526150335,0.025390625
1451526160583,0.025390625
1451526167031,0.025390625
1451526170548,0.0322265625
1451526175615,0.0283203125
1451526180082,0.0380859375
1451526194350,0.02734375
1451526200367,0.03125
1451526204443,0.0263671875
1451526213353,0.0244140625
1451526222264,0.0263671875
1451526227821,0.029296875
1451526237576,0.01953125
1451526243891,0.025390625
1451526249606,0.0341796875
1451526252928,0.0322265625
1451526257931,0.02734375
1451526264400,0.0283203125
1451526270197,0.0244140625
1451526277044,0.025390625
1451526282777,0.02734375
1451526288618,0.0234375
1451526293874,0.02734375
1451526298825,0.017578125
1451526304342,0.0302734375
1451526310351,0.0234375
1451526315772,0.0283203125
1451526320680,0.025390625
1451526324291,0.03515625
1451526328764,0.0263671875
1451526335002,0.0322265625
1451526347055,0.0263671875
1451526350861,0.037109375
1451526355357,0.0283203125
1451526361918,0.03515625
1451526371418,0.0263671875
1451526380775,0.03515625
1451526387076,0.0244140625
1451526392593,0.02734375
1451526398550,0.0283203125
1451526407335,0.02734375
1451526417490,0.017578125
1451526422197,0.0283203125
1451526427554,0.03125
1451526433055,0.0244140625
1451526437325,0.029296875
1451526442822,0.033203125
1451526447471,0.0302734375
1451526460743,0.0244140625
1451526467476,0.0283203125
1451526470811,0.033203125
1451526477929,0.0302734375
1451526482826,0.02734375
1451526487299,0.0234375
1451526492862,0.0244140625
1451526498236,0.0302734375
1451526503511,0.033203125
1451526512702,0.033203125
1451526517075,0.0224609375
1451526525732,0.03515625
1451526535120,0.017578125
1451526540380,0.0341796875
1451526544591,0.03515625
1451526552080,0.0283203125
1451526557613,0.0341796875
1451526562532,0.021484375
1451526569423,0.0234375
1451526574126,0.033203125
1451526579754,0.0302734375
1451526583903,0.029296875
1451526588261,0.0302734375
1451526593844,0.0244140625
1451526600643,0.017578125
1451526608181,0.029296875
1451526613216,0.0341796875
1451526618936,0.025390625
1451526624479,0.03125
1451526631736,0.029296875
1451526638133,0.01953125
1451526642974,0.03515625
1451526651083,0.0302734375
1451526660230,0.0244140625
1451526664785,0.029296875
1451526669765,0.0263671875
1451526677849,0.025390625
1451526683083,0.0302734375
1451526687568,0.0234375
1451526693815,0.0244140625
1451526698233,0.0322265625
1451526704617,0.0263671875
1451526713514,0.0302734375
1451526717921,0.017578125
1451526727124,0.0263671875
1451526732689,0.0341796875
1451526740790,0.0283203125
1451526745678,0.02734375
1451526751336,0.0400390625
1451526759218,0.029296875
1451526764147,0.0263671875
1451526770226,0.0341796875
1451526774959,0.029296875
1451526780708,0.025390625
1451526790985,0.0283203125
1451526797110,0.03515625
1451526800869,0.03125
1451526807578,0.0322265625
1451526817113,0.033203125
1451526821481,0.025390625
1451526827723,0.0400390625
1451526832855,0.0302734375
1451526839022,0.02734375
1451526842789,0.03515625
1451526847501,0.025390625
1451526851947,0.0322265625
1451526861455,0.0283203125
1451526867134,0.0302734375
1451526872943,0.025390625
1451526878102,0.0234375
1451526887125,0.033203125
1451526891920,0.0244140625
1451526897135,0.0263671875
1451526902270,0.0263671875
1451526908106,0.025390625
1451526913589,0.0283203125
1451526923184,0.0302734375
1451526929115,0.0390625
1451526937131,0.025390625
1451526942141,0.0263671875
1451526948088,0.0234375
1451526952591,0.0322265625
1451526961341,0.017578125
1451526967133,0.0263671875
1451526982107,0.02734375
1451526987144,0.02734375
1451526990222,0.0341796875
1451526995731,0.037109375
1451527002088,0.0322265625
1451527011631,0.025390625
1451527017397,0.0419921875
1451527025268,0.02734375
1451527032657,0.033203125
1451527038631,0.029296875
1451527043652,0.03515625
1451527059026,0.03125
1451527063317,0.029296875
1451527069184,0.025390625
1451527078377,0.0322265625
1451527088331,0.0322265625
1451527093391,0.037109375
1451527098704,0.0302734375
1451527104441,0.0302734375
1451527109626,0.0341796875
1451527115925,0.0263671875
1451527120868,0.03125
1451527130191,0.02734375
1451527137160,0.0283203125
1451527143541,0.017578125
1451527148950,0.025390625
1451527153352,0.0341796875
1451527162259,0.029296875
1451527167164,0.0244140625
1451527172825,0.029296875
1451527177160,0.03515625
1451527182961,0.0234375
1451527191352,0.0224609375
1451527197172,0.0244140625
1451527203192,0.0302734375
1451527208100,0.029296875
1451527213419,0.0244140625
1451527219862,0.0341796875
1451527224439,0.0244140625
1451527230075,0.03125
1451527238937,0.025390625
1451527243274,0.0341796875
1451527252281,0.0302734375
1451527259758,0.01953125
1451527274932,0.0244140625
1451527279401,0.0341796875
1451527288032,0.0390625
1451527297336,0.03125
1451527307177,0.0322265625
1451527313020,0.0263671875
1451527331909,0.0283203125
1451527338897,0.03125
1451527343312,0.029296875
1451527350457,0.037109375
1451527354858,0.0263671875
1451527358536,0.0244140625
1451527365063,0.0361328125
1451527371010,0.0302734375
1451527377187,0.0263671875
1451527381840,0.0341796875
1451527390049,0.0244140625
1451527395812,0.037109375
1451527399715,0.025390625
1451527404811,0.029296875
1451527413086,0.025390625
1451527418307,0.0283203125
1451527429809,0.0341796875
1451527435043,0.025390625
1451527440894,0.0322265625
1451527447195,0.0283203125
1451527451628,0.02734375
1451527457197,0.0322265625
1451527461692,0.03515625
1451527467198,0.029296875
1451527471282,0.037109375
1451527480042,0.025390625
1451527486035,0.0302734375
1451527494192,0.0263671875
1451527503600,0.0263671875
1451527507996,0.025390625
1451527513735,0.02734375
1451527519906,0.0302734375
1451527527969,0.02734375
1451527532316,0.01953125
1451527538827,0.029296875
1451527545076,0.0283203125
1451527550597,0.0283203125
1451527553847,0.0302734375
1451527562764,0.0263671875
1451527568325,0.025390625
1451527572338,0.029296875
1451527582173,0.0263671875
1451527587958,0.029296875
1451527593082,0.03125
1451527599190,0.0234375
1451527604484,0.0341796875
1451527610013,0.0390625
1451527617218,0.0322265625
1451527621201,0.03125
1451527625602,0.021484375
1451527630854,0.0244140625
1451527637242,0.0244140625
1451527647221,0.0234375
1451527653980,0.029296875
1451527659546,0.025390625
1451527664581,0.0283203125
1451527670140,0.037109375
1451527675702,0.0234375
1451527682466,0.017578125
1451527687230,0.0263671875
1451527690042,0.017578125
1451527691277,0.03125
1451527693713,0.0283203125
1451527694962,0.02734375
1451527697228,0.0234375
1451527697498,0.025390625
1451527698746,0.025390625
1451527699996,0.0234375
1451527701489,0.0244140625
1451527702829,0.0244140625
1451527704063,0.025390625
1451527705309,0.0244140625
1451527707229,0.0244140625
1451527707790,0.0234375
1451527709030,0.0234375
1451527710274,0.02734375
1451527711514,0.025390625
1451527712754,0.025390625
1451527713994,0.0263671875
1451527715245,0.0244140625
1451527717231,0.025390625
1451527717741,0.025390625
1451527718991,0.0234375
1451527720255,0.0263671875
1451527721753,0.0234375
1451527723118,0.0244140625
1451527724352,0.02734375
1451527725594,0.0263671875
1451527727232,0.0224609375
1451527728074,0.0244140625
1451527729317,0.0224609375
1451527730559,0.0244140625
1451527731805,0.0263671875
1451527733045,0.0234375
1451527734287,0.025390625
1451527735526,0.0234375
1451527737234,0.0224609375
1451527738020,0.02734375
1451527739262,0.0234375
1451527740698,0.0263671875
1451527742176,0.0322265625
1451527743985,0.0244140625
1451527745935,0.0234375
1451527747509,0.0234375
1451527748752,0.0234375
1451527749990,0.0234375
1451527751232,0.025390625
1451527752478,0.0234375
1451527753724,0.025390625
1451527754973,0.0263671875
1451527757237,0.0234375
1451527757835,0.02734375
1451527759087,0.02734375
1451527760329,0.0234375
1451527761569,0.0234375
1451527762807,0.0234375
1451527764048,0.0234375
1451527765294,0.0400390625
1451527767238,0.0234375
1451527767774,0.0234375
1451527769014,0.0234375
1451527770255,0.0234375
1451527771499,0.0244140625
1451527772747,0.0234375
1451527773993,0.0263671875
1451527775242,0.025390625
1451527777238,0.0244140625
1451527778064,0.0234375
1451527779322,0.0234375
1451527780560,0.0263671875
1451527781806,0.0244140625
1451527783051,0.0244140625
1451527784289,0.0234375
1451527785531,0.0244140625
1451527787242,0.0244140625
1451527788015,0.0234375
1451527789258,0.0244140625
1451527790508,0.0244140625
1451527791766,0.0263671875
1451527793012,0.0244140625
1451527794270,0.0244140625
1451527795517,0.0263671875
1451527797241,0.03515625
1451527798453,0.02734375
1451527799689,0.0244140625
1451527800927,0.0234375
1451527802161,0.025390625
1451527808192,0.0234375
1451527809424,0.0234375
1451527811157,0.0263671875
1451527813601,0.025390625
1451527814849,0.0244140625
1451527816116,0.0234375
1451527817692,0.0263671875
1451527818988,0.0224609375
1451527820220,0.0234375
1451527821464,0.0244140625
1451527822707,0.0234375
1451527823949,0.0234375
1451527825193,0.0244140625
1451527827245,0.0244140625
1451527827677,0.0244140625
1451527828921,0.0244140625
1451527830163,0.0234375
1451527831410,0.0234375
1451527832656,0.0234375
1451527833898,0.0234375
1451527835144,0.0234375
1451527837246,0.0263671875
1451527837923,0.02734375
1451527839265,0.0263671875
1451527840489,0.0263671875
1451527841731,0.0263671875
1451527842973,0.025390625
1451527845406,0.0263671875
1451527847248,0.0263671875
1451527847892,0.02734375
1451527849134,0.0263671875
1451527850374,0.0244140625
1451527851617,0.0244140625
1451527852865,0.0234375
1451527854113,0.0234375
1451527855355,0.0224609375
1451527857250,0.0234375
1451527858234,0.0263671875
1451527859492,0.0224609375
1451527860734,0.02734375
1451527861990,0.0263671875
1451527863725,0.0234375
1451527864959,0.029296875
1451527867253,0.0263671875
1451527867485,0.0263671875
1451527868725,0.0263671875
1451527870504,0.025390625
1451527871800,0.0234375
1451527873302,0.02734375
1451527874552,0.0234375
1451527875798,0.025390625
1451527877252,0.025390625
1451527878286,0.025390625
1451527879531,0.0263671875
1451527880771,0.0263671875
1451527882013,0.025390625
1451527883253,0.02734375
1451527884489,0.0234375
1451527885732,0.0244140625
1451527887254,0.025390625
1451527888226,0.0244140625
1451527889468,0.0234375
1451527890715,0.0224609375
1451527892144,0.025390625
1451527893615,0.0234375
1451527894871,0.0224609375
1451527896117,0.0263671875
1451527897360,0.0263671875
1451527898594,0.017578125
1451527907425,0.0341796875
1451527912920,0.025390625
1451527919797,0.0263671875
1451527931773,0.0244140625
1451527938515,0.02734375
1451527949773,0.02734375
1451527954470,0.0322265625
1451527963647,0.029296875
1451527969142,0.0361328125
1451527975077,0.025390625
1451527981772,0.029296875
1451527987811,0.02734375
1451527993449,0.0205078125
1451528007269,0.0263671875
1451528012652,0.021484375
1451528017737,0.033203125
1451528024096,0.0234375
1451528033501,0.0244140625
1451528039928,0.025390625
1451528045637,0.017578125
1451528050986,0.0234375
1451528057277,0.021484375
1451528060701,0.0263671875
1451528065924,0.03125
1451528072587,0.02734375
1451528078228,0.025390625
1451528083531,0.02734375
1451528084807,0.0302734375
1451528094262,0.0263671875
1451528100805,0.0234375
1451528105333,0.03515625
1451528111791,0.017578125
1451528116087,0.0302734375
1451528122606,0.0234375
1451528128323,0.0234375
1451528133506,0.0244140625
1451528139129,0.025390625
1451528144940,0.0263671875
1451528150294,0.0224609375
1451528154647,0.0263671875
1451528165420,0.017578125
1451528169209,0.033203125
1451528175166,0.0263671875
1451528180603,0.021484375
1451528184959,0.029296875
1451528193133,0.0244140625
1451528198813,0.0224609375
1451528208352,0.025390625
1451528214352,0.0244140625
1451528220691,0.0263671875
1451528227462,0.017578125
1451528232417,0.041015625
1451528237731,0.02734375
1451528242782,0.02734375
1451528252880,0.03125
1451528258474,0.0234375
1451528265913,0.0244140625
1451528275831,0.0234375
1451528280856,0.0302734375
1451528287467,0.017578125
1451528291587,0.0224609375
1451528301904,0.029296875
1451528308364,0.033203125
1451528314163,0.0244140625
1451528320455,0.02734375
1451528325540,0.0224609375
1451528331811,0.0302734375
1451528337312,0.0263671875
1451528345169,0.03515625
1451528350322,0.0341796875
1451528355600,0.0302734375
1451528363844,0.025390625
1451528369169,0.0224609375
1451528378258,0.029296875
1451528386009,0.0263671875
1451528391940,0.0224609375
1451528397323,0.0341796875
1451528402843,0.021484375
1451528408440,0.0361328125
1451528413919,0.02734375
1451528419296,0.0263671875
1451528427557,0.02734375
1451528432972,0.0234375
1451528439297,0.0263671875
1451528444872,0.0283203125
1451528459708,0.025390625
1451528466179,0.0263671875
1451528472720,0.017578125
1451528477330,0.0263671875
1451528485823,0.0244140625
1451528490894,0.025390625
1451528496203,0.0263671875
1451528501200,0.0263671875
1451528507333,0.0302734375
1451528512007,0.0283203125
1451528518808,0.0244140625
1451528523789,0.0244140625
1451528531246,0.0244140625
1451528535845,0.0283203125
1451528539884,0.0224609375
1451528547339,0.0302734375
1451528552343,0.025390625
1451528557932,0.0234375
1451528564011,0.025390625
1451528570440,0.0263671875
1451528575709,0.021484375
1451528582872,0.025390625
1451528591683,0.025390625
1451528597416,0.0419921875
1451528603367,0.0283203125
1451528608478,0.0302734375
1451528613562,0.0302734375
1451528619987,0.025390625
1451528625154,0.025390625
1451528634491,0.025390625
1451528640512,0.033203125
1451528647367,0.0205078125
1451528651464,0.029296875
1451528657353,0.0224609375
1451528662073,0.02734375
1451528667486,0.0244140625
1451528673159,0.033203125
1451528677368,0.0322265625
1451528683047,0.0244140625
1451528688119,0.0234375
1451528693836,0.025390625
1451528698835,0.025390625
1451528703639,0.0224609375
1451528710142,0.017578125
1451528715285,0.0419921875
1451528721113,0.02734375
1451528727361,0.0234375
1451528735828,0.0244140625
1451528741505,0.03125
1451528747366,0.03125
1451528750934,0.0234375
1451528757365,0.02734375
1451528763378,0.029296875
1451528767935,0.02734375
1451528781695,0.0361328125
1451528787370,0.029296875
1451528795023,0.029296875
1451528800632,0.0263671875
1451528809233,0.0234375
1451528815194,0.025390625
1451528820641,0.0283203125
1451528825933,0.01953125
1451528831033,0.0302734375
1451528837377,0.025390625
1451528843718,0.02734375
1451528849063,0.02734375
1451528853553,0.029296875
1451528867380,0.0244140625
1451528871886,0.025390625
1451528877521,0.0302734375
1451528883936,0.0224609375
1451528893457,0.029296875
1451528898893,0.0341796875
1451528904720,0.0263671875
1451528910398,0.0341796875
1451528920149,0.0380859375
1451528925538,0.0283203125
1451528931371,0.025390625
1451528942326,0.025390625
1451528947898,0.0234375
1451528952166,0.033203125
1451528960949,0.0302734375
1451528965622,0.0341796875
1451528974523,0.033203125
1451528980073,0.029296875
1451528985023,0.02734375
1451528989701,0.029296875
1451528995380,0.0244140625
1451529003721,0.0234375
1451529010928,0.017578125
1451529018546,0.0263671875
1451529024473,0.025390625
1451529031139,0.02734375
1451529038938,0.0302734375
1451529044817,0.0302734375
1451529051382,0.02734375
1451529057405,0.0302734375
1451529062234,0.0244140625
1451529068503,0.0263671875
1451529073182,0.029296875
1451529087950,0.0224609375
1451529097415,0.0322265625
1451529102032,0.0244140625
1451529107478,0.0263671875
1451529112884,0.0224609375
1451529117838,0.03125
1451529123593,0.0234375
1451529130570,0.0244140625
1451529142804,0.025390625
1451529147641,0.0263671875
1451529152849,0.0224609375
1451529157656,0.029296875
1451529162629,0.0244140625
1451529168993,0.037109375
1451529174036,0.0322265625
1451529179155,0.0244140625
1451529184384,0.0283203125
1451529193325,0.025390625
1451529199114,0.017578125
1451529203717,0.02734375
1451529209491,0.02734375
1451529217041,0.037109375
1451529222693,0.0283203125
1451529231973,0.02734375
1451529238982,0.021484375
1451529243318,0.0263671875
1451529248983,0.0302734375
1451529253646,0.02734375
1451529259623,0.0234375
1451529264946,0.0263671875
1451529270324,0.0244140625
1451529276375,0.0263671875
1451529281862,0.0263671875
1451529289007,0.029296875
1451529293334,0.03125
1451529298989,0.0302734375
1451529306292,0.0263671875
1451529310916,0.0322265625
1451529317127,0.017578125
1451529322494,0.03125
1451529328993,0.0263671875
1451529332706,0.033203125
1451529341835,0.0244140625
1451529353755,0.025390625
1451529359386,0.03125
1451529365548,0.0341796875
1451529370755,0.021484375
1451529380591,0.017578125
1451529387675,0.02734375
1451529392328,0.0322265625
1451529397493,0.0322265625
1451529402384,0.0341796875
1451529409021,0.025390625
1451529414073,0.0244140625
1451529419830,0.0263671875
1451529424427,0.0419921875
1451529430840,0.029296875
1451529436135,0.033203125
1451529441367,0.02734375
1451529446184,0.029296875
1451529452304,0.025390625
1451529459010,0.0263671875
1451529464079,0.0283203125
1451529473414,0.0263671875
1451529479149,0.0263671875
1451529485005,0.03515625
1451529489665,0.0244140625
1451529500600,0.0302734375
1451529507343,0.0302734375
1451529512694,0.02734375
1451529519019,0.03125
1451529523629,0.02734375
1451529529034,0.025390625
1451529537205,0.0234375
1451529544621,0.025390625
1451529549697,0.029296875
1451529556096,0.0263671875
1451529561174,0.02734375
1451529569414,0.0234375
1451529576225,0.0224609375
1451529581526,0.0263671875
1451529589041,0.025390625
1451529593704,0.025390625
1451529599673,0.0361328125
1451529604695,0.0322265625
1451529611064,0.0224609375
1451529616919,0.029296875
1451529622182,0.0322265625
1451529627759,0.0302734375
1451529632334,0.0263671875
1451529637394,0.0283203125
1451529639263,0.02734375
1451529640720,0.0302734375
1451529641973,0.0322265625
1451529643213,0.0283203125
1451529644455,0.0283203125
1451529645695,0.025390625
1451529646942,0.0244140625
1451529649048,0.0244140625
1451529649428,0.0263671875
1451529650670,0.0263671875
1451529653106,0.0234375
1451529654354,0.0234375
1451529655597,0.02734375
1451529656851,0.0244140625
1451529659039,0.02734375
1451529659670,0.0234375
1451529661114,0.02734375
1451529662346,0.0234375
1451529663595,0.0224609375
1451529664834,0.0244140625
1451529666078,0.0263671875
1451529667319,0.02734375
1451529669039,0.025390625
1451529669801,0.02734375
1451529671041,0.02734375
1451529672279,0.02734375
1451529673522,0.0224609375
1451529675342,0.02734375
1451529676638,0.025390625
1451529679038,0.025390625
1451529679374,0.0234375
1451529681135,0.0341796875
1451529682374,0.0244140625
1451529683609,0.0234375
1451529684851,0.0224609375
1451529686096,0.0283203125
1451529687337,0.0263671875
1451529689040,0.0244140625
1451529689824,0.0234375
1451529691070,0.0234375
1451529692316,0.02734375
1451529693563,0.0244140625
1451529694927,0.0263671875
1451529696403,0.0263671875
1451529697655,0.0224609375
1451529699043,0.0234375
1451529700139,0.0234375
1451529701380,0.0234375
1451529702624,0.0224609375
1451529703862,0.0234375
1451529705108,0.0263671875
1451529706348,0.02734375
1451529709059,0.0244140625
1451529710021,0.025390625
1451529711273,0.025390625
1451529712517,0.025390625
1451529713763,0.02734375
1451529715194,0.02734375
1451529716670,0.0244140625
1451529717926,0.0234375
1451529719210,0.0263671875
1451529720442,0.0234375
1451529721685,0.0234375
1451529722929,0.0224609375
1451529724167,0.0234375
1451529725407,0.0244140625
1451529726654,0.0234375
1451529727892,0.0234375
1451529729134,0.0263671875
1451529730382,0.0244140625
1451529731626,0.0234375
1451529732870,0.0234375
1451529735633,0.025390625
1451529736883,0.0244140625
1451529739057,0.025390625
1451529739385,0.0224609375
1451529741109,0.0263671875
1451529742343,0.0244140625
1451529743584,0.0224609375
1451529744834,0.0224609375
1451529746082,0.0341796875
1451529747328,0.0263671875
1451529749048,0.0244140625
1451529749827,0.0234375
1451529751327,0.0263671875
1451529752657,0.025390625
1451529753895,0.0234375
1451529755129,0.0234375
1451529756372,0.0244140625
1451529757614,0.0244140625
1451529759054,0.0244140625
1451529760102,0.0234375
1451529761340,0.025390625
1451529762583,0.0263671875
1451529763821,0.02734375
1451529765073,0.0263671875
1451529766323,0.0244140625
1451529767565,0.0234375
1451529769059,0.0234375
1451529770088,0.0244140625
1451529771580,0.025390625
1451529772924,0.0234375
1451529774160,0.0263671875
1451529775402,0.0263671875
1451529776647,0.0263671875
1451529777889,0.0263671875
1451529780319,0.0234375
1451529781563,0.0244140625
1451529782805,0.0234375
1451529784044,0.0263671875
1451529785284,0.0263671875
1451529787724,0.0244140625
1451529789052,0.0244140625
1451529790279,0.0234375
1451529791769,0.0263671875
1451529793041,0.0224609375
1451529794985,0.0234375
1451529796228,0.0263671875
1451529797467,0.0263671875
1451529799056,0.02734375
1451529800638,0.02734375
1451529801894,0.02734375
1451529803138,0.0419921875
1451529804385,0.02734375
1451529805639,0.025390625
1451529807125,0.0234375
1451529809055,0.02734375
1451529809675,0.0234375
1451529810918,0.0244140625
1451529812160,0.025390625
1451529813398,0.02734375
1451529814638,0.0224609375
1451529815880,0.0234375
1451529817119,0.025390625
1451529819059,0.02734375
1451529819601,0.025390625
1451529820854,0.02734375
1451529822105,0.0341796875
1451529823351,0.0263671875
1451529824602,0.0244140625
1451529825864,0.0224609375
1451529827360,0.025390625
1451529829068,0.025390625
1451529829974,0.0263671875
1451529831219,0.0263671875
1451529832463,0.025390625
1451529833705,0.0263671875
1451529836138,0.025390625
1451529837375,0.0263671875
1451529839062,0.0263671875
1451529839864,0.0263671875
1451529841102,0.0234375
1451529842349,0.0234375
1451529843594,0.0234375
1451529844841,0.0263671875
1451529846137,0.017578125
1451529851118,0.021484375
1451529857306,0.017578125
1451529866766,0.0283203125
1451529872105,0.0234375
1451529881334,0.029296875
1451529896204,0.03125
1451529901685,0.0244140625
1451529907240,0.0263671875
1451529913619,0.0380859375
1451529923605,0.02734375
1451529929073,0.0263671875
1451529936212,0.0224609375
1451529941311,0.0322265625
1451529947112,0.0234375
1451529952364,0.0244140625
1451529959075,0.021484375
1451529964045,0.0361328125
1451529970165,0.029296875
1451529974804,0.02734375
1451529980849,0.029296875
1451529990076,0.025390625
1451529997309,0.0244140625
1451530007254,0.0263671875
1451530012977,0.0244140625
1451530019084,0.021484375
1451530023547,0.0263671875
1451530032096,0.0234375
1451530046268,0.025390625
1451530055656,0.037109375
1451530063765,0.0244140625
1451530070215,0.02734375
1451530074982,0.033203125
1451530081315,0.025390625
1451530087068,0.021484375
1451530091895,0.0234375
1451530100928,0.0224609375
1451530106727,0.025390625
1451530112638,0.0361328125
1451530117981,0.0361328125
1451530123331,0.0322265625
1451530129557,0.025390625
1451530139100,0.025390625
1451530144695,0.0244140625
1451530149949,0.025390625
1451530157915,0.017578125
1451530162691,0.0244140625
1451530169102,0.0361328125
1451530173385,0.02734375
1451530180082,0.025390625
1451530186495,0.02734375
1451530192152,0.0263671875
1451530197805,0.03125
1451530204137,0.0224609375
1451530210046,0.03125
1451530216249,0.0244140625
1451530224325,0.017578125
1451530229113,0.029296875
1451530233865,0.0263671875
1451530239112,0.033203125
1451530247570,0.025390625
1451530254117,0.025390625
1451530259545,0.0244140625
1451530265270,0.0244140625
1451530274432,0.025390625
1451530280624,0.0244140625
1451530286077,0.02734375
1451530291648,0.0234375
1451530297113,0.0244140625
1451530309123,0.0244140625
1451530314025,0.0244140625
1451530319304,0.0263671875
1451530326611,0.02734375
1451530336118,0.0263671875
1451530343156,0.0302734375
1451530349126,0.0224609375
1451530354259,0.029296875
1451530363893,0.0283203125
1451530369157,0.0234375
1451530377960,0.0244140625
1451530391699,0.0234375
1451530397790,0.0322265625
1451530405056,0.021484375
1451530409167,0.02734375
1451530415906,0.0234375
1451530425720,0.025390625
1451530432513,0.0263671875
1451530436401,0.03125
1451530442628,0.0263671875
1451530449141,0.025390625
1451530456496,0.0244140625
1451530461241,0.03125
1451530469144,0.025390625
1451530476515,0.0244140625
1451530481024,0.029296875
1451530486424,0.0322265625
1451530492153,0.0205078125
1451530496116,0.03515625
1451530502383,0.0234375
1451530512708,0.0302734375
1451530526457,0.025390625
1451530532545,0.0283203125
1451530537456,0.0302734375
1451530542787,0.02734375
1451530549154,0.0302734375
1451530556219,0.0341796875
1451530561354,0.0244140625
1451530566626,0.0283203125
1451530572687,0.021484375
1451530576332,0.0322265625
1451530583771,0.0390625
1451530589160,0.033203125
1451530595793,0.029296875
1451530601595,0.0244140625
1451530606675,0.0234375
1451530612932,0.021484375
1451530619164,0.0244140625
1451530624385,0.0302734375
1451530629163,0.03125
1451530634868,0.0302734375
1451530645272,0.017578125
1451530650310,0.0302734375
1451530656976,0.03125
1451530662475,0.02734375
1451530671236,0.02734375
1451530677408,0.021484375
1451530689175,0.0400390625
1451530693751,0.0302734375
1451530699178,0.02734375
1451530709175,0.033203125
1451530720345,0.0283203125
1451530725750,0.0322265625
1451530731657,0.029296875
1451530739178,0.0263671875
1451530746581,0.025390625
1451530752581,0.0341796875
1451530759180,0.025390625
1451530764113,0.03125
1451530769186,0.0341796875
1451530772853,0.0302734375
1451530778025,0.0205078125
1451530784454,0.025390625
1451530792445,0.02734375
1451530797546,0.0263671875
1451530802708,0.033203125
1451530809188,0.0263671875
1451530813781,0.0263671875
1451530823414,0.033203125
1451530829537,0.0283203125
1451530835570,0.021484375
1451530843733,0.0302734375
1451530849706,0.0283203125
1451530854813,0.029296875
1451530859823,0.03125
1451530866582,0.0390625
1451530871833,0.0234375
1451530877742,0.0302734375
1451530883867,0.037109375
1451530889198,0.0283203125
1451530893904,0.0283203125
1451530899267,0.041015625
1451530904880,0.0283203125
1451530909345,0.0263671875
1451530913755,0.0234375
1451530919954,0.0263671875
1451530925779,0.029296875
1451530931584,0.029296875
1451530936346,0.025390625
1451530942311,0.017578125
1451530949204,0.0244140625
1451530953557,0.025390625
1451530960322,0.02734375
1451530964855,0.033203125
1451530970949,0.0263671875
1451530976988,0.0322265625
1451530984912,0.0302734375
1451530991115,0.0322265625
1451530997573,0.025390625
1451531010039,0.0224609375
1451531015620,0.0302734375
1451531021465,0.0244140625
1451531027206,0.025390625
1451531033154,0.0263671875
1451531038005,0.03515625
1451531043398,0.0205078125
1451531049579,0.0234375
1451531057120,0.03125
1451531062853,0.021484375
1451531069240,0.029296875
1451531079224,0.0244140625
1451531090725,0.0263671875
1451531096364,0.025390625
1451531102419,0.025390625
1451531109226,0.0263671875
1451531114231,0.0283203125
1451531119871,0.0224609375
1451531126772,0.02734375
1451531131759,0.0234375
1451531136390,0.02734375
1451531145867,0.0283203125
1451531150830,0.0263671875
1451531155723,0.0341796875
1451531163574,0.0205078125
1451531173443,0.0244140625
1451531179482,0.0341796875
1451531186083,0.0263671875
1451531191262,0.0322265625
1451531202431,0.0283203125
1451531209241,0.037109375
1451531214101,0.03125
1451531219260,0.025390625
1451531227977,0.029296875
1451531233786,0.025390625
1451531243876,0.025390625
1451531249488,0.017578125
1451531254177,0.02734375
1451531260390,0.0244140625
1451531266965,0.0244140625
1451531272268,0.0224609375
1451531277092,0.021484375
1451531281017,0.0302734375
1451531289250,0.025390625
1451531294713,0.0322265625
1451531300156,0.0322265625
1451531307343,0.0283203125
1451531312077,0.029296875
1451531319255,0.033203125
1451531327948,0.029296875
1451531332281,0.0263671875
1451531339276,0.033203125
1451531347439,0.033203125
1451531353114,0.0419921875
1451531357458,0.0302734375
1451531362531,0.02734375
1451531369438,0.029296875
1451531379261,0.0234375
1451531384544,0.0390625
1451531390349,0.02734375
1451531396146,0.0234375
1451531405797,0.0380859375
1451531414255,0.025390625
1451531422062,0.0283203125
1451531429281,0.0234375
1451531433503,0.0224609375
1451531439536,0.0224609375
1451531449270,0.02734375
1451531454688,0.025390625
1451531461047,0.025390625
1451531471269,0.025390625
1451531476340,0.025390625
1451531481998,0.0263671875
1451531489602,0.017578125
1451531494800,0.025390625
1451531499957,0.0341796875
1451531505790,0.0244140625
1451531511063,0.0283203125
1451531517700,0.0283203125
1451531523099,0.0244140625
1451531529309,0.0341796875
1451531535134,0.0224609375
1451531543998,0.025390625
1451531550498,0.0244140625
1451531555617,0.029296875
1451531560894,0.0322265625
1451531566723,0.0263671875
1451531572728,0.0234375
1451531580019,0.025390625
1451531586846,0.025390625
1451531590402,0.0224609375
1451531591645,0.0302734375
1451531594078,0.029296875
1451531595315,0.02734375
1451531596567,0.0263671875
1451531599290,0.0234375
1451531600256,0.0244140625
1451531601506,0.0283203125
1451531602984,0.0234375
1451531604446,0.025390625
1451531606218,0.0234375
1451531607463,0.02734375
1451531609303,0.025390625
1451531610404,0.0234375
1451531611753,0.025390625
1451531612998,0.0244140625
1451531614244,0.0234375
1451531616678,0.0234375
1451531617970,0.02734375
1451531619467,0.0263671875
1451531620733,0.0263671875
1451531621977,0.02734375
1451531623219,0.025390625
1451531624461,0.0244140625
1451531625704,0.0224609375
1451531626948,0.0263671875
1451531629296,0.025390625
1451531629432,0.0234375
1451531630676,0.0224609375
1451531631916,0.0244140625
1451531633159,0.0224609375
1451531634411,0.0302734375
1451531635655,0.0234375
1451531636899,0.02734375
1451531639306,0.0244140625
1451531639882,0.0263671875
1451531641134,0.025390625
1451531642376,0.0263671875
1451531643620,0.025390625
1451531644866,0.0224609375
1451531646109,0.025390625
1451531647351,0.0263671875
1451531649297,0.0263671875
1451531649831,0.0234375
1451531651071,0.0234375
1451531652319,0.0234375
1451531653567,0.025390625
1451531654812,0.025390625
1451531656066,0.025390625
1451531657332,0.0244140625
1451531659298,0.0263671875
1451531660160,0.0224609375
1451531661397,0.0224609375
1451531662637,0.025390625
1451531663883,0.0263671875
1451531665113,0.025390625
1451531666854,0.0234375
1451531668086,0.0263671875
1451531669318,0.02734375
1451531671382,0.0234375
1451531672624,0.0234375
1451531674052,0.0234375
1451531675511,0.025390625
1451531676761,0.0244140625
1451531678007,0.0244140625
1451531679301,0.02734375
1451531680493,0.0263671875
1451531681736,0.025390625
1451531682980,0.0244140625
1451531684224,0.0234375
1451531685462,0.0234375
1451531686707,0.0244140625
1451531687951,0.0244140625
1451531689303,0.0234375
1451531690435,0.0234375
1451531692873,0.025390625
1451531694227,0.0234375
1451531695712,0.025390625
1451531696976,0.0244140625
1451531699312,0.0263671875
1451531699462,0.025390625
1451531700708,0.0244140625
1451531701947,0.0234375
1451531703195,0.0224609375
1451531704437,0.0224609375
1451531705679,0.0224609375
1451531706920,0.0224609375
1451531708171,0.0263671875
1451531709470,0.025390625
1451531710716,0.0263671875
1451531711966,0.0234375
1451531713214,0.0224609375
1451531714721,0.0224609375
1451531716133,0.025390625
1451531717367,0.0263671875
1451531719305,0.0244140625
1451531719847,0.0263671875
1451531721090,0.025390625
1451531722332,0.025390625
1451531723574,0.0263671875
1451531724816,0.0263671875
1451531726770,0.025390625
1451531728018,0.02734375
1451531729319,0.025390625
1451531730517,0.0234375
1451531732877,0.025390625
1451531734115,0.0244140625
1451531735357,0.033203125
1451531736602,0.0244140625
1451531737844,0.0244140625
1451531739308,0.0234375
1451531740318,0.0263671875
1451531741560,0.025390625
1451531742799,0.0234375
1451531744043,0.0234375
1451531745289,0.0244140625
1451531746539,0.0244140625
1451531747786,0.0380859375
1451531749310,0.025390625
1451531750474,0.025390625
1451531751952,0.0263671875
1451531753206,0.0234375
1451531754450,0.0234375
1451531755694,0.0234375
1451531756935,0.0234375
1451531758173,0.0234375
1451531759416,0.0234375
1451531760647,0.02734375
1451531763084,0.0234375
1451531764330,0.0234375
1451531765574,0.0234375
1451531766822,0.0244140625
1451531768074,0.0263671875
1451531769321,0.0234375
1451531770819,0.0234375
1451531772267,0.0244140625
1451531773503,0.0263671875
1451531774745,0.0263671875
1451531775991,0.0263671875
1451531777232,0.0263671875
1451531779314,0.025390625
1451531779710,0.0234375
1451531780946,0.0234375
1451531782186,0.025390625
1451531783426,0.0263671875
1451531784669,0.025390625
1451531786639,0.0263671875
1451531787917,0.0244140625
1451531789415,0.0380859375
1451531791398,0.0224609375
1451531792638,0.025390625
1451531793880,0.025390625
1451531795124,0.0263671875
1451531796370,0.0244140625
1451531797613,0.0244140625
1451531799317,0.017578125
1451531802486,0.025390625
1451531810058,0.0224609375
1451531822484,0.0234375
1451531829321,0.02734375
1451531833280,0.021484375
1451531843346,0.0234375
1451531849472,0.029296875
1451531855475,0.0224609375
1451531864808,0.0263671875
1451531871426,0.0302734375
1451531879671,0.0263671875
1451531885932,0.025390625
1451531893407,0.0234375
1451531900074,0.0283203125
1451531907233,0.03125
1451531912753,0.0244140625
1451531919332,0.0224609375
1451531923646,0.029296875
1451531933343,0.0185546875
1451531939339,0.025390625
1451531944886,0.0263671875
1451531950539,0.03125
1451531959336,0.0283203125
1451531969566,0.017578125
1451531976169,0.0244140625
1451531981100,0.0283203125
1451531991975,0.02734375
1451531997267,0.0234375
1451532002961,0.0283203125
1451532009344,0.0234375
1451532013954,0.03515625
1451532019677,0.033203125
1451532025262,0.0263671875
1451532034225,0.025390625
1451532041157,0.0234375
1451532046599,0.03515625
1451532051522,0.02734375
1451532057537,0.021484375
1451532063508,0.025390625
1451532067696,0.02734375
1451532075063,0.0244140625
1451532082336,0.0322265625
1451532096326,0.029296875
1451532102656,0.0205078125
1451532107760,0.0244140625
1451532115797,0.0302734375
1451532126087,0.0283203125
1451532131744,0.0224609375
1451532136988,0.02734375
1451532143551,0.0263671875
1451532149912,0.017578125
1451532156101,0.0205078125
1451532161074,0.02734375
1451532167065,0.029296875
1451532175272,0.0224609375
1451532181077,0.03515625
1451532191079,0.02734375
1451532197581,0.0244140625
1451532203176,0.0341796875
1451532209895,0.0234375
1451532215864,0.0263671875
1451532222269,0.0302734375
1451532227517,0.0263671875
1451532233661,0.0234375
1451532241084,0.03125
1451532247802,0.0263671875
1451532252917,0.029296875
1451532258628,0.02734375
1451532269154,0.0390625
1451532275661,0.017578125
1451532282348,0.029296875
1451532286024,0.0283203125
1451532293543,0.0322265625
1451532301092,0.025390625
1451532306283,0.02734375
1451532311344,0.0322265625
1451532318990,0.0322265625
1451532324766,0.0283203125
1451532331097,0.037109375
1451532336093,0.02734375
1451532343150,0.0263671875
1451532353906,0.0224609375
1451532359837,0.0283203125
1451532369419,0.021484375
1451532374725,0.03125
1451532381102,0.0244140625
1451532386537,0.0263671875
1451532392878,0.033203125
1451532398101,0.03125
1451532407438,0.03125
1451532412715,0.0322265625
1451532418977,0.0244140625
1451532424310,0.01953125
1451532429721,0.033203125
1451532435050,0.0234375
1451532441111,0.02734375
1451532445720,0.0205078125
1451532456379,0.02734375
1451532461114,0.02734375
1451532465721,0.033203125
1451532466973,0.0263671875
1451532476574,0.021484375
1451532486604,0.021484375
1451532491574,0.0283203125
1451532497037,0.025390625
1451532504128,0.0234375
1451532512241,0.0224609375
1451532519280,0.03125
1451532525229,0.0302734375
1451532534747,0.02734375
1451532542307,0.0244140625
1451532548253,0.0234375
1451532553563,0.0234375
1451532562715,0.02734375
1451532571128,0.0283203125
1451532577647,0.017578125
1451532582380,0.0244140625
1451532588729,0.0234375
1451532594765,0.0322265625
1451532602469,0.0283203125
1451532608383,0.0302734375
1451532613326,0.02734375
1451532625058,0.029296875
1451532632055,0.01953125
1451532637748,0.0341796875
1451532642543,0.0244140625
1451532647835,0.0283203125
1451532653946,0.0283203125
1451532661161,0.0302734375
1451532665788,0.025390625
1451532672393,0.0263671875
1451532676366,0.0322265625
1451532682176,0.0244140625
1451532688981,0.02734375
1451532697879,0.0263671875
1451532705044,0.02734375
1451532711147,0.0322265625
1451532716907,0.0234375
1451532721508,0.0302734375
1451532731148,0.029296875
1451532736482,0.0283203125
1451532742393,0.0244140625
1451532748696,0.0234375
1451532753673,0.017578125
1451532766281,0.0302734375
1451532771809,0.0302734375
1451532779140,0.03125
1451532785745,0.033203125
1451532792108,0.025390625
1451532797137,0.0302734375
1451532811325,0.0380859375
1451532817940,0.0283203125
1451532824023,0.01953125
1451532833745,0.025390625
1451532845287,0.03125
1451532851528,0.0283203125
1451532857486,0.025390625
1451532863997,0.0283203125
1451532869398,0.03125
1451532875723,0.0263671875
1451532881583,0.0283203125
1451532888189,0.02734375
1451532894347,0.0234375
1451532899868,0.0234375
1451532905859,0.025390625
1451532911268,0.025390625
1451532923422,0.0263671875
1451532929651,0.025390625
1451532935043,0.0322265625
1451532941224,0.0244140625
1451532951178,0.025390625
1451532955160,0.02734375
1451532961198,0.0234375
1451532966626,0.0234375
1451532974001,0.0244140625
1451532981182,0.0205078125
1451532986803,0.025390625
1451532992638,0.025390625
1451532998033,0.03125
1451533005366,0.0302734375
1451533012489,0.0244140625
1451533021204,0.0234375
1451533039299,0.0283203125
1451533044117,0.02734375
1451533051513,0.0234375
1451533057703,0.0244140625
1451533064112,0.03515625
1451533069198,0.02734375
1451533076464,0.0244140625
1451533085670,0.025390625
1451533091196,0.03125
1451533095941,0.0419921875
1451533101540,0.0263671875
1451533111211,0.0234375
1451533116684,0.0244140625
1451533122091,0.029296875
1451533127408,0.0244140625
1451533133499,0.0322265625
1451533139821,0.0341796875
1451533150007,0.0263671875
1451533155172,0.0263671875
1451533161204,0.0302734375
1451533169750,0.0283203125
1451533179269,0.017578125
1451533185436,0.029296875
1451533191209,0.0341796875
1451533199838,0.0263671875
1451533204429,0.0263671875
1451533211210,0.025390625
1451533216300,0.0234375
1451533222395,0.037109375
1451533231225,0.0234375
1451533237888,0.0283203125
1451533242434,0.02734375
1451533249241,0.0224609375
1451533259275,0.02734375
1451533265614,0.0205078125
1451533271219,0.0234375
1451533277558,0.0263671875
1451533283807,0.025390625
1451533288813,0.0263671875
1451533293052,0.0263671875
1451533301869,0.017578125
1451533309042,0.0322265625
1451533315421,0.025390625
1451533321236,0.0263671875
1451533326253,0.02734375
1451533332336,0.0283203125
1451533338311,0.0283203125
1451533343881,0.0244140625
1451533349882,0.0283203125
1451533359744,0.0234375
1451533366111,0.0390625
1451533371231,0.0322265625
1451533376212,0.0283203125
1451533382235,0.025390625
1451533388092,0.03125
1451533393468,0.025390625
1451533399153,0.0341796875
1451533404832,0.0244140625
1451533411445,0.025390625
1451533417152,0.017578125
1451533422619,0.0244140625
1451533427672,0.0341796875
1451533433582,0.0283203125
1451533438849,0.021484375
1451533451241,0.0263671875
1451533457258,0.025390625
1451533462361,0.025390625
1451533468333,0.0322265625
1451533474032,0.0234375
1451533479827,0.021484375
1451533484980,0.0283203125
1451533491247,0.02734375
1451533496826,0.0263671875
1451533502927,0.029296875
1451533507961,0.029296875
1451533517791,0.0263671875
1451533529224,0.0263671875
1451533535219,0.025390625
1451533541808,0.017578125
1451533547143,0.0234375
1451533552512,0.025390625
1451533558779,0.0244140625
1451533565706,0.0244140625
1451533567490,0.0205078125
1451533568732,0.0283203125
1451533569968,0.03125
1451533571257,0.0283203125
1451533572459,0.0322265625
1451533573708,0.03125
1451533574953,0.0234375
1451533576199,0.0244140625
1451533577449,0.02734375
1451533578700,0.0263671875
1451533581260,0.0234375
1451533581708,0.025390625
1451533582942,0.025390625
1451533584185,0.0244140625
1451533585429,0.0263671875
1451533586669,0.02734375
1451533587915,0.025390625
1451533589155,0.025390625
1451533591265,0.025390625
1451533591641,0.0244140625
1451533592882,0.0234375
1451533594124,0.0234375
1451533595368,0.0234375
1451533596634,0.02734375
1451533599049,0.0244140625
1451533601261,0.0263671875
1451533602215,0.0234375
1451533603457,0.025390625
1451533604697,0.02734375
1451533605938,0.037109375
1451533607188,0.025390625
1451533608424,0.025390625
1451533609670,0.025390625
1451533611262,0.0234375
1451533612159,0.0244140625
1451533613407,0.0263671875
1451533614651,0.0234375
1451533616091,0.02734375
1451533617545,0.025390625
1451533618802,0.0263671875
1451533620046,0.0244140625
1451533621290,0.0224609375
1451533622532,0.0244140625
1451533623776,0.0263671875
1451533625021,0.0244140625
1451533626261,0.0234375
1451533627499,0.025390625
1451533628741,0.025390625
1451533629991,0.0234375
1451533631265,0.0224609375
1451533632489,0.0263671875
1451533633736,0.0234375
1451533634982,0.0234375
1451533636484,0.0244140625
1451533637938,0.0263671875
1451533639173,0.02734375
1451533641267,0.0224609375
1451533641643,0.0244140625
1451533642888,0.0234375
1451533644125,0.0244140625
1451533645367,0.0244140625
1451533646612,0.0244140625
1451533647850,0.0234375
1451533649092,0.0244140625
1451533651272,0.025390625
1451533651625,0.0244140625
1451533652873,0.0244140625
1451533654119,0.0263671875
1451533655445,0.025390625
1451533656929,0.0234375
1451533658817,0.02734375
1451533660062,0.025390625
1451533662060,0.0263671875
1451533663304,0.0244140625
1451533664548,0.0244140625
1451533665799,0.0224609375
1451533667049,0.02734375
1451533668293,0.02734375
1451533669537,0.02734375
1451533671271,0.0244140625
1451533672305,0.025390625
1451533673618,0.0244140625
1451533674852,0.025390625
1451533676094,0.025390625
1451533677338,0.025390625
1451533678580,0.025390625
1451533679823,0.025390625
1451533681275,0.0263671875
1451533682307,0.025390625
1451533683553,0.0244140625
1451533684795,0.0244140625
1451533686041,0.0234375
1451533687289,0.0234375
1451533688536,0.0224609375
1451533689784,0.0263671875
1451533691278,0.025390625
1451533692580,0.0234375
1451533693875,0.02734375
1451533695109,0.0234375
1451533696349,0.0234375
1451533698779,0.0234375
1451533700011,0.02734375
1451533701274,0.0263671875
1451533702500,0.0283203125
1451533703740,0.025390625
1451533704986,0.0400390625
1451533706228,0.0234375
1451533707478,0.0234375
1451533708721,0.0234375
1451533709963,0.0234375
1451533711431,0.0263671875
1451533712891,0.025390625
1451533714148,0.025390625
1451533715386,0.0234375
1451533716628,0.0244140625
1451533718560,0.0234375
1451533719796,0.02734375
1451533721278,0.0263671875
1451533722923,0.025390625
1451533724175,0.0244140625
1451533725419,0.0234375
1451533726763,0.0234375
1451533728224,0.025390625
1451533729478,0.0244140625
1451533731278,0.025390625
1451533731966,0.025390625
1451533733204,0.025390625
1451533734440,0.0341796875
1451533735683,0.0234375
1451533736927,0.0244140625
1451533738167,0.0244140625
1451533739411,0.0244140625
1451533741281,0.025390625
1451533741900,0.025390625
1451533743150,0.025390625
1451533744396,0.025390625
1451533745638,0.0234375
1451533747079,0.0244140625
1451533748547,0.025390625
1451533749793,0.0234375
1451533751283,0.0244140625
1451533752271,0.02734375
1451533753513,0.0244140625
1451533754751,0.0234375
1451533755992,0.025390625
1451533757230,0.02734375
1451533759664,0.025390625
1451533761282,0.025390625
1451533762165,0.0244140625
1451533763407,0.0234375
1451533764659,0.0224609375
1451533765918,0.0263671875
1451533767405,0.0263671875
1451533768775,0.02734375
1451533770014,0.0224609375
1451533771288,0.0234375
1451533772496,0.025390625
1451533773736,0.017578125
1451533775022,0.017578125
1451533781285,0.025390625
1451533787604,0.0234375
1451533797758,0.0263671875
1451533806807,0.0302734375
1451533811906,0.025390625
1451533818455,0.0263671875
1451533824178,0.037109375
1451533831293,0.0234375
1451533837464,0.0224609375
1451533843352,0.03125
1451533849978,0.0283203125
1451533856545,0.0244140625
1451533862943,0.0234375
1451533869264,0.0244140625
1451533875397,0.0244140625
1451533885035,0.02734375
1451533891299,0.029296875
1451533892052,0.0380859375
1451533904209,0.0234375
1451533914035,0.0244140625
1451533918882,0.0234375
1451533926145,0.0263671875
1451533932516,0.0234375
1451533938794,0.021484375
1451533944531,0.0234375
1451533951308,0.025390625
1451533956487,0.0244140625
1451533964178,0.017578125
1451533968527,0.025390625
1451533973678,0.025390625
1451533980047,0.0224609375
1451533991314,0.0205078125
1451533996403,0.0224609375
1451534006068,0.0302734375
1451534009867,0.037109375
1451534016218,0.0205078125
1451534021869,0.0244140625
1451534028055,0.0244140625
1451534034564,0.0341796875
1451534043090,0.0302734375
1451534048392,0.0244140625
1451534054261,0.0322265625
1451534061322,0.0234375
1451534071328,0.0263671875
1451534076958,0.02734375
1451534084508,0.0390625
1451534089334,0.0283203125
1451534097010,0.01953125
1451534107691,0.0234375
1451534116698,0.0244140625
1451534125974,0.0224609375
1451534134141,0.0263671875
1451534149067,0.02734375
1451534155804,0.025390625
1451534161335,0.0244140625
1451534167156,0.0234375
1451534172969,0.0244140625
1451534179156,0.0302734375
1451534185753,0.0419921875
1451534191663,0.033203125
1451534197866,0.02734375
1451534204409,0.025390625
1451534211389,0.0234375
1451534216231,0.0390625
1451534226091,0.025390625
1451534232634,0.02734375
1451534240219,0.0283203125
1451534245854,0.0234375
1451534255083,0.025390625
1451534262346,0.017578125
1451534266755,0.01953125
1451534272349,0.0205078125
1451534282189,0.0234375
1451534291726,0.025390625
1451534301351,0.0361328125
1451534306692,0.029296875
1451534311837,0.0283203125
1451534317638,0.0224609375
1451534324073,0.0263671875
1451534331356,0.021484375
1451534336431,0.0244140625
1451534342087,0.0263671875
1451534348502,0.021484375
1451534357408,0.0263671875
1451534363093,0.025390625
1451534368293,0.0283203125
1451534381363,0.025390625
1451534387189,0.0224609375
1451534396215,0.0244140625
1451534402194,0.0263671875
1451534409065,0.0390625
1451534414088,0.0302734375
1451534421367,0.025390625
1451534431369,0.0263671875
1451534436015,0.025390625
1451534443409,0.03125
1451534449455,0.02734375
1451534455978,0.021484375
1451534461517,0.03125
1451534471374,0.0234375
1451534478419,0.0234375
1451534483830,0.0283203125
1451534491377,0.01953125
1451534495522,0.0234375
1451534501379,0.033203125
1451534507394,0.021484375
1451534513057,0.0263671875
1451534522804,0.0400390625
1451534528771,0.0244140625
1451534535706,0.025390625
1451534541383,0.025390625
1451534547228,0.029296875
1451534552830,0.0263671875
1451534559978,0.0244140625
1451534565526,0.0234375
1451534572143,0.0322265625
1451534578324,0.0244140625
1451534584811,0.0234375
1451534591412,0.029296875
1451534600308,0.021484375
1451534605486,0.0283203125
1451534611463,0.02734375
1451534618154,0.025390625
1451534627540,0.017578125
1451534633112,0.025390625
1451534641933,0.0244140625
1451534646990,0.021484375
1451534653747,0.029296875
1451534663465,0.0244140625
1451534671400,0.025390625
1451534675670,0.0244140625
1451534682133,0.0244140625
1451534688170,0.0234375
1451534693901,0.025390625
1451534701404,0.02734375
1451534706727,0.0283203125
1451534713620,0.021484375
1451534721793,0.025390625
1451534728870,0.0263671875
1451534735327,0.025390625
1451534741472,0.0263671875
1451534757052,0.0263671875
1451534765594,0.0244140625
1451534771434,0.0234375
1451534776447,0.025390625
1451534781886,0.0263671875
1451534788993,0.02734375
1451534794886,0.03125
1451534799359,0.0224609375
1451534806044,0.017578125
1451534811419,0.0244140625
1451534817109,0.0234375
1451534822400,0.0302734375
1451534828693,0.025390625
1451534834144,0.029296875
1451534841423,0.0322265625
1451534847444,0.02734375
1451534853925,0.0263671875
1451534860279,0.0283203125
1451534867369,0.01953125
1451534871425,0.02734375
1451534877516,0.03515625
1451534883421,0.0234375
1451534889926,0.0224609375
1451534895393,0.0244140625
1451534901432,0.021484375
1451534906159,0.0244140625
1451534913797,0.0234375
1451534921450,0.0263671875
1451534926233,0.0322265625
1451534931634,0.017578125
1451534943796,0.0244140625
1451534952383,0.0302734375
1451534957312,0.0244140625
1451534963987,0.0283203125
1451534969769,0.0283203125
1451534976132,0.0263671875
1451534988192,0.025390625
1451534993543,0.0341796875
1451534999902,0.025390625
1451535006329,0.0234375
1451535016146,0.0302734375
1451535022037,0.03125
1451535027112,0.021484375
1451535033765,0.0263671875
1451535039144,0.025390625
1451535045226,0.0234375
1451535051978,0.025390625
1451535057626,0.0263671875
1451535063775,0.0283203125
1451535068514,0.0302734375
1451535074209,0.02734375
1451535080256,0.02734375
1451535086129,0.041015625
1451535092377,0.0224609375
1451535093882,0.017578125
1451535103423,0.0234375
1451535109238,0.0224609375
1451535117707,0.0224609375
1451535124148,0.02734375
1451535129909,0.0234375
1451535136146,0.0244140625
1451535145475,0.0244140625
1451535151462,0.0263671875
1451535156695,0.0283203125
1451535162608,0.0234375
1451535169919,0.0234375
1451535176828,0.0263671875
1451535182687,0.0234375
1451535193580,0.029296875
1451535197679,0.0322265625
1451535209201,0.021484375
1451535218926,0.0244140625
1451535224617,0.037109375
1451535231884,0.0302734375
1451535237375,0.0224609375
1451535243480,0.01953125
1451535249942,0.025390625
1451535256059,0.033203125
1451535263026,0.0263671875
1451535268199,0.02734375
1451535274054,0.03125
1451535279179,0.0244140625
1451535289042,0.025390625
1451535294409,0.0302734375
1451535301230,0.0263671875
1451535305953,0.033203125
1451535313032,0.0234375
1451535318767,0.0185546875
1451535324637,0.0302734375
1451535330316,0.0205078125
1451535335796,0.0244140625
1451535345210,0.0283203125
1451535351737,0.017578125
1451535356360,0.0244140625
1451535361583,0.0283203125
1451535367476,0.025390625
1451535374653,0.033203125
1451535380260,0.0234375
1451535386291,0.0244140625
1451535393161,0.0283203125
1451535398738,0.0322265625
1451535414453,0.0302734375
1451535420055,0.03125
1451535426546,0.025390625
1451535433047,0.033203125
1451535438961,0.0263671875
1451535444619,0.025390625
1451535450128,0.02734375
1451535456285,0.0234375
1451535463052,0.025390625
1451535467502,0.029296875
1451535473607,0.0205078125
1451535479016,0.0244140625
1451535485027,0.029296875
1451535490098,0.0234375
1451535495306,0.0244140625
1451535504352,0.0263671875
1451535511487,0.029296875
1451535517164,0.0302734375
1451535527041,0.0234375
1451535533060,0.0263671875
1451535537523,0.0205078125
1451535538823,0.0322265625
1451535540301,0.02734375
1451535541617,0.03125
1451535543063,0.033203125
1451535544096,0.0283203125
1451535545342,0.02734375
1451535546582,0.0283203125
1451535547824,0.0234375
1451535549066,0.0244140625
1451535550309,0.0244140625
1451535551551,0.0244140625
1451535553063,0.0244140625
1451535554040,0.0263671875
1451535555285,0.0244140625
1451535556534,0.0263671875
1451535557780,0.025390625
1451535559204,0.0234375
1451535560678,0.0244140625
1451535561932,0.0234375
1451535563220,0.0263671875
1451535564462,0.0234375
1451535565703,0.0234375
1451535566941,0.0234375
1451535568181,0.0234375
1451535569429,0.0244140625
1451535570671,0.02734375
1451535571912,0.0263671875
1451535573164,0.0244140625
1451535574414,0.0224609375
1451535575662,0.0263671875
1451535576906,0.0234375
1451535578201,0.02734375
1451535579701,0.0263671875
1451535580983,0.025390625
1451535583069,0.025390625
1451535583461,0.0234375
1451535584701,0.0234375
1451535585940,0.0234375
1451535587186,0.0224609375
1451535588422,0.0234375
1451535590110,0.0234375
1451535591364,0.0263671875
1451535593071,0.0244140625
1451535594660,0.0263671875
1451535596117,0.025390625
1451535597373,0.0263671875
1451535598620,0.025390625
1451535599862,0.0244140625
1451535601100,0.0234375
1451535603070,0.0234375
1451535603582,0.0234375
1451535604828,0.0224609375
1451535606065,0.0234375
1451535607303,0.0244140625
1451535608543,0.0234375
1451535609780,0.03125
1451535611033,0.0263671875
1451535613072,0.0244140625
1451535613524,0.02734375
1451535614958,0.0263671875
1451535616441,0.0234375
1451535617702,0.02734375
1451535618943,0.0244140625
1451535620185,0.0234375
1451535621427,0.0234375
1451535623073,0.025390625
1451535623909,0.0244140625
1451535625152,0.0244140625
1451535626394,0.0244140625
1451535627636,0.0234375
1451535628882,0.0234375
1451535630128,0.0234375
1451535631372,0.0234375
1451535633075,0.0244140625
1451535633911,0.025390625
1451535635405,0.037109375
1451535636693,0.02734375
1451535637924,0.0234375
1451535639167,0.0234375
1451535640408,0.03515625
1451535641652,0.0244140625
1451535643080,0.025390625
1451535644134,0.025390625
1451535645378,0.0244140625
1451535646621,0.025390625
1451535647869,0.0263671875
1451535649131,0.025390625
1451535650911,0.0234375
1451535653075,0.0244140625
1451535654384,0.0244140625
1451535655620,0.025390625
1451535656860,0.025390625
1451535658092,0.0234375
1451535659332,0.0234375
1451535660577,0.0244140625
1451535661819,0.0244140625
1451535663079,0.025390625
1451535664305,0.0263671875
1451535665555,0.0263671875
1451535666802,0.0244140625
1451535668050,0.0234375
1451535669300,0.0263671875
1451535670760,0.025390625
1451535673116,0.0244140625
1451535673475,0.0263671875
1451535674719,0.025390625
1451535675963,0.025390625
1451535677205,0.025390625
1451535678449,0.025390625
1451535679692,0.025390625
1451535680934,0.0263671875
1451535683080,0.025390625
1451535683408,0.0234375
1451535684660,0.025390625
1451535685911,0.0263671875
1451535687159,0.0244140625
1451535689601,0.0244140625
1451535691081,0.0263671875
1451535693082,0.0234375
1451535693840,0.0234375
1451535695024,0.02734375
1451535696268,0.0263671875
1451535697508,0.02734375
1451535698740,0.0234375
1451535699982,0.0234375
1451535701225,0.0244140625
1451535703083,0.0244140625
1451535703711,0.0244140625
1451535704965,0.0244140625
1451535706217,0.0263671875
1451535707464,0.0244140625
1451535708712,0.0224609375
1451535710010,0.0263671875
1451535713084,0.0244140625
1451535713680,0.0234375
1451535715629,0.0234375
1451535716865,0.0263671875
1451535718109,0.0263671875
1451535719345,0.0234375
1451535720590,0.0244140625
1451535721836,0.0234375
1451535723086,0.0224609375
1451535724330,0.025390625
1451535725594,0.0263671875
1451535727096,0.025390625
1451535728415,0.025390625
1451535729649,0.0263671875
1451535730883,0.0234375
1451535733087,0.0224609375
1451535733417,0.0244140625
1451535734659,0.025390625
1451535735902,0.025390625
1451535737148,0.0283203125
1451535738394,0.0263671875
1451535739634,0.02734375
1451535740886,0.0263671875
1451535743089,0.0244140625
1451535743587,0.017578125
1451535758091,0.025390625
1451535765148,0.033203125
1451535771411,0.017578125
1451535776554,0.025390625
1451535783093,0.0244140625
1451535788655,0.0205078125
1451535798353,0.0244140625
1451535804260,0.0263671875
1451535809768,0.0244140625
1451535816150,0.0322265625
1451535821592,0.03125
1451535828317,0.0283203125
1451535837618,0.021484375
1451535843101,0.025390625
1451535849050,0.0244140625
1451535856635,0.0234375
1451535863124,0.0263671875
1451535868157,0.0302734375
1451535873768,0.0205078125
1451535879037,0.0244140625
1451535890412,0.0244140625
1451535897045,0.03125
1451535903270,0.0244140625
1451535909487,0.0205078125
1451535919841,0.0244140625
1451535925921,0.0263671875
1451535933113,0.0244140625
1451535939193,0.0244140625
1451535946878,0.0224609375
1451535957722,0.0263671875
1451535964371,0.025390625
1451535971624,0.0234375
1451535978943,0.0283203125
1451535988609,0.0283203125
1451535995028,0.02734375
1451536000168,0.0244140625
1451536006033,0.0234375
1451536013738,0.017578125
1451536019941,0.0205078125
1451536025850,0.0224609375
1451536031351,0.0283203125
1451536038556,0.0234375
1451536046333,0.0234375
1451536051804,0.0244140625
1451536057825,0.02734375
1451536074293,0.0263671875
1451536081068,0.0322265625
1451536087230,0.0244140625
1451536093134,0.0244140625
1451536100629,0.0361328125
1451536110049,0.0283203125
1451536117747,0.033203125
1451536126373,0.02734375
1451536131668,0.0244140625
1451536138571,0.017578125
1451536144576,0.029296875
1451536154053,0.03515625
1451536163870,0.029296875
1451536170403,0.0224609375
1451536176080,0.029296875
1451536181953,0.01953125
1451536186844,0.0283203125
1451536193791,0.017578125
1451536200390,0.0244140625
1451536205558,0.0283203125
1451536211465,0.025390625
1451536221121,0.02734375
1451536227026,0.0224609375
1451536233333,0.0283203125
1451536239579,0.0234375
1451536244450,0.025390625
1451536250553,0.0263671875
1451536258154,0.0234375
1451536264605,0.0224609375
1451536273156,0.0302734375
1451536278831,0.03125
1451536284202,0.0263671875
1451536291037,0.0263671875
1451536297954,0.0302734375
1451536303855,0.02734375
1451536310176,0.0263671875
1451536316389,0.0234375
1451536325766,0.02734375
1451536330855,0.021484375
1451536336085,0.029296875
1451536343409,0.03125
1451536349405,0.025390625
1451536358765,0.025390625
1451536366212,0.0302734375
1451536375537,0.021484375
1451536383172,0.0244140625
1451536384395,0.0205078125
1451536394302,0.0244140625
1451536403187,0.0224609375
1451536409588,0.03125
1451536414969,0.025390625
1451536420754,0.0244140625
1451536430679,0.0234375
1451536436358,0.025390625
1451536441955,0.0341796875
1451536448608,0.0244140625
1451536454985,0.025390625
1451536460740,0.025390625
1451536467517,0.029296875
1451536478030,0.0244140625
1451536486924,0.0244140625
1451536500061,0.021484375
1451536506256,0.02734375
1451536513189,0.0224609375
1451536518156,0.0263671875
1451536525625,0.0380859375
1451536534201,0.025390625
1451536541169,0.0224609375
1451536551197,0.0224609375
1451536556738,0.0234375
1451536563195,0.0244140625
1451536568868,0.0244140625
1451536575181,0.0244140625
1451536581320,0.0283203125
1451536590911,0.025390625
1451536599902,0.025390625
1451536606081,0.029296875
1451536613208,0.0244140625
1451536617925,0.02734375
1451536623950,0.0244140625
1451536630183,0.0263671875
1451536637030,0.029296875
1451536643213,0.025390625
1451536653206,0.0244140625
1451536659095,0.0224609375
1451536669111,0.025390625
1451536674915,0.0224609375
1451536681322,0.0244140625
1451536687291,0.0234375
1451536696616,0.0234375
1451536704296,0.0244140625
1451536713415,0.0283203125
1451536720582,0.037109375
1451536726237,0.025390625
1451536733222,0.0234375
1451536740597,0.025390625
1451536746564,0.0224609375
1451536757793,0.033203125
1451536768509,0.0234375
1451536775562,0.0302734375
1451536780919,0.0263671875
1451536786117,0.0263671875
1451536793229,0.025390625
1451536798799,0.0244140625
1451536804756,0.0263671875
1451536814850,0.0224609375
1451536820425,0.0263671875
1451536826515,0.025390625
1451536833230,0.0341796875
1451536839231,0.025390625
1451536844818,0.029296875
1451536849911,0.03125
1451536856072,0.0302734375
1451536863235,0.0224609375
1451536873234,0.0283203125
1451536880431,0.025390625
1451536885584,0.0234375
1451536893237,0.0263671875
1451536897968,0.0244140625
1451536903263,0.0244140625
1451536915860,0.0234375
1451536921731,0.021484375
1451536927508,0.0244140625
1451536935323,0.0244140625
1451536940034,0.025390625
1451536947427,0.0244140625
1451536954550,0.0244140625
1451536960753,0.029296875
1451536966100,0.0205078125
1451536974565,0.025390625
1451536981891,0.017578125
1451536987437,0.0224609375
1451536993576,0.0302734375
1451536999461,0.0283203125
1451537005946,0.0263671875
1451537011916,0.0234375
1451537022028,0.0283203125
1451537026679,0.0263671875
1451537033258,0.0244140625
1451537043607,0.02734375
1451537050472,0.029296875
1451537057017,0.037109375
1451537067070,0.0263671875
1451537073263,0.0234375
1451537078468,0.0234375
1451537083969,0.0283203125
1451537090402,0.0263671875
1451537096139,0.025390625
1451537103266,0.025390625
1451537108723,0.0283203125
1451537114692,0.0390625
1451537121061,0.02734375
1451537126355,0.0302734375
1451537140355,0.0244140625
1451537145460,0.0244140625
1451537151691,0.0283203125
1451537161086,0.0263671875
1451537168383,0.0361328125
1451537173576,0.0283203125
1451537179742,0.025390625
1451537185796,0.025390625
1451537191783,0.0234375
1451537199820,0.0244140625
1451537204991,0.0302734375
1451537211612,0.0224609375
1451537216453,0.0283203125
1451537226278,0.0234375
1451537231743,0.0302734375
1451537241714,0.0263671875
1451537248602,0.0283203125
1451537254408,0.0244140625
1451537264992,0.0263671875
1451537270536,0.0234375
1451537277423,0.0205078125
1451537283998,0.0283203125
1451537289397,0.0302734375
1451537295328,0.02734375
1451537301467,0.021484375
1451537311412,0.0361328125
1451537316499,0.0283203125
1451537323294,0.021484375
1451537329231,0.0322265625
1451537334610,0.0234375
1451537344411,0.0205078125
1451537354032,0.0224609375
1451537359969,0.0234375
1451537369987,0.025390625
1451537375306,0.0302734375
1451537385467,0.0322265625
1451537391140,0.02734375
1451537401414,0.017578125
1451537405962,0.0234375
1451537414269,0.025390625
1451537420522,0.0263671875
1451537426025,0.0341796875
1451537431828,0.0244140625
1451537439379,0.0234375
1451537446908,0.0390625
1451537453561,0.02734375
1451537460152,0.025390625
1451537465447,0.0244140625
1451537475214,0.02734375
1451537481763,0.0185546875
1451537486920,0.0244140625
1451537493317,0.0361328125
1451537501750,0.0302734375
1451537507507,0.0234375
1451537513320,0.025390625
1451537523725,0.017578125
1451537527034,0.0224609375
1451537529470,0.0302734375
1451537530709,0.029296875
1451537531943,0.03125
1451537533323,0.02734375
1451537534417,0.029296875
1451537535669,0.029296875
1451537536917,0.029296875
1451537538170,0.033203125
1451537539414,0.0322265625
1451537540680,0.029296875
1451537542184,0.0322265625
1451537543600,0.0341796875
1451537544835,0.03125
1451537546073,0.029296875
1451537547315,0.0302734375
1451537548555,0.0302734375
1451537549797,0.029296875
1451537551039,0.0341796875
1451537553328,0.0302734375
1451537553572,0.03515625
1451537554808,0.03515625
1451537556054,0.03125
1451537557302,0.029296875
1451537558542,0.03125
1451537559789,0.03515625
1451537561079,0.03125
1451537563325,0.029296875
1451537563851,0.0361328125
1451537565084,0.0390625
1451537566324,0.03515625
1451537567566,0.033203125
1451537568814,0.0302734375
1451537570054,0.0302734375
1451537571289,0.03125
1451537573327,0.0302734375
1451537573759,0.03125
1451537575011,0.0302734375
1451537576269,0.0322265625
1451537577515,0.03515625
1451537578764,0.033203125
1451537580012,0.0302734375
1451537585734,0.029296875
1451537586973,0.0302734375
1451537588217,0.029296875
1451537589455,0.029296875
1451537590699,0.02734375
1451537591939,0.029296875
1451537593330,0.0302734375
1451537594436,0.029296875
1451537595684,0.0283203125
1451537596930,0.0234375
1451537598294,0.0263671875
1451537599771,0.0234375
1451537601021,0.0234375
1451537603331,0.0263671875
1451537603552,0.02734375
1451537604789,0.02734375
1451537606034,0.0263671875
1451537607278,0.0263671875
1451537608518,0.0263671875
1451537609758,0.0263671875
1451537610996,0.02734375
1451537613332,0.0263671875
1451537613484,0.02734375
1451537614739,0.025390625
1451537615981,0.0234375
1451537617225,0.0234375
1451537618703,0.0263671875
1451537620154,0.0234375
1451537621402,0.02734375
1451537623334,0.02734375
1451537623882,0.0244140625
1451537625124,0.0244140625
1451537626365,0.025390625
1451537627612,0.025390625
1451537628857,0.0263671875
1451537630095,0.0263671875
1451537631337,0.0263671875
1451537633336,0.0234375
1451537633826,0.025390625
1451537635070,0.02734375
1451537637540,0.0234375
1451537639018,0.0234375
1451537640332,0.0263671875
1451537643341,0.025390625
1451537645261,0.02734375
1451537647160,0.0263671875
1451537648406,0.0244140625
1451537649652,0.0234375
1451537650900,0.0244140625
1451537653339,0.02734375
1451537654581,0.025390625
1451537655985,0.0234375
1451537657453,0.0263671875
1451537659891,0.0263671875
1451537661137,0.0263671875
1451537663340,0.0263671875
1451537663672,0.0244140625
1451537664900,0.02734375
1451537666146,0.02734375
1451537667386,0.02734375
1451537668629,0.02734375
1451537669871,0.0224609375
1451537673363,0.0263671875
1451537673599,0.0263671875
1451537674842,0.0234375
1451537676194,0.0234375
1451537677682,0.02734375
1451537678944,0.0234375
1451537680188,0.0263671875
1451537681432,0.02734375
1451537683343,0.02734375
1451537683911,0.0244140625
1451537685152,0.025390625
1451537686391,0.0263671875
1451537687630,0.02734375
1451537688872,0.02734375
1451537690122,0.0263671875
1451537691380,0.0234375
1451537693342,0.0234375
1451537693876,0.0244140625
1451537695124,0.0263671875
1451537696619,0.0244140625
1451537698031,0.0234375
1451537699269,0.025390625
1451537700512,0.025390625
1451537704412,0.0234375
1451537705642,0.0244140625
1451537707458,0.0244140625
1451537708713,0.0244140625
1451537709959,0.0263671875
1451537711203,0.02734375
1451537713352,0.025390625
1451537714029,0.0234375
1451537715291,0.025390625
1451537716532,0.0234375
1451537717774,0.0234375
1451537719020,0.0244140625
1451537720260,0.0234375
1451537721502,0.025390625
1451537723347,0.0263671875
1451537723989,0.0263671875
1451537725233,0.02734375
1451537726477,0.02734375
1451537727719,0.025390625
1451537728969,0.02734375
1451537730216,0.0263671875
1451537731462,0.0263671875
1451537733368,0.02734375
1451537734400,0.017578125
1451537736647,0.021484375
1451537742001,0.025390625
1451537748080,0.0224609375
1451537755259,0.02734375
1451537756680,0.02734375
1451537767001,0.017578125
1451537773354,0.0234375
1451537780095,0.0244140625
1451537786110,0.02734375
1451537797448,0.0244140625
1451537804132,0.0224609375
1451537819107,0.0224609375
1451537826074,0.0263671875
1451537834045,0.0224609375
1451537839254,0.0234375
1451537853382,0.0322265625
1451537859372,0.0224609375
1451537865558,0.0224609375
1451537875777,0.0283203125
1451537883828,0.0224609375
1451537891199,0.021484375
1451537898078,0.03125
1451537905297,0.025390625
1451537913388,0.025390625
1451537918783,0.0283203125
1451537924626,0.0234375
1451537930671,0.029296875
1451537936526,0.021484375
1451537948342,0.017578125
1451537953727,0.0244140625
1451537961379,0.0341796875
1451537967556,0.0283203125
1451537973869,0.0244140625
1451537980754,0.029296875
1451537986851,0.0244140625
1451537993388,0.0234375
1451538000533,0.025390625
1451538008062,0.017578125
1451538014253,0.0244140625
1451538020474,0.0263671875
1451538026079,0.0224609375
1451538034314,0.0224609375
1451538041211,0.0244140625
1451538047536,0.0244140625
1451538053389,0.0205078125
1451538059226,0.025390625
1451538065629,0.02734375
1451538074662,0.02734375
1451538080785,0.02734375
1451538086912,0.025390625
1451538093482,0.0205078125
1451538103915,0.0205078125
1451538114188,0.0244140625
1451538120633,0.0205078125
1451538126934,0.0234375
1451538131532,0.03125
1451538139184,0.0224609375
1451538144989,0.0244140625
1451538151155,0.0263671875
1451538158024,0.0205078125
1451538163975,0.02734375
1451538170262,0.0234375
1451538176233,0.0224609375
1451538186323,0.017578125
1451538193407,0.03515625
1451538199100,0.0283203125
1451538204422,0.0263671875
1451538211304,0.021484375
1451538216811,0.0244140625
1451538223412,0.0234375
1451538229121,0.0234375
1451538235530,0.0263671875
1451538241268,0.025390625
1451538247110,0.0234375
1451538253416,0.021484375
1451538260465,0.0263671875
1451538267710,0.041015625
1451538272963,0.0234375
1451538281198,0.0234375
1451538287253,0.0244140625
1451538293904,0.0263671875
1451538300389,0.02734375
1451538306496,0.017578125
1451538312189,0.0224609375
1451538317913,0.0244140625
1451538325063,0.025390625
1451538330530,0.0244140625
1451538339659,0.037109375
1451538345068,0.03125
1451538352551,0.021484375
1451538357880,0.0322265625
1451538366707,0.017578125
1451538373132,0.0234375
1451538381873,0.041015625
1451538388232,0.0263671875
1451538393701,0.0341796875
1451538403732,0.021484375
1451538409933,0.0322265625
1451538417172,0.0234375
1451538423381,0.025390625
1451538429378,0.0244140625
1451538436307,0.0234375
1451538442442,0.0234375
1451538452571,0.0234375
1451538467684,0.0234375
1451538475085,0.0234375
1451538482700,0.0244140625
1451538488501,0.0263671875
1451538495084,0.0234375
1451538501333,0.0224609375
1451538508450,0.025390625
1451538515095,0.0234375
1451538521242,0.025390625
1451538528429,0.025390625
1451538535089,0.029296875
1451538543181,0.0283203125
1451538549322,0.02734375
1451538555093,0.0244140625
1451538561167,0.0224609375
1451538567892,0.033203125
1451538573915,0.0263671875
1451538579506,0.025390625
1451538586817,0.0263671875
1451538595116,0.025390625
1451538602752,0.0224609375
1451538609453,0.0224609375
1451538616055,0.03125
1451538626377,0.0234375
1451538632748,0.0322265625
1451538640887,0.0283203125
1451538648382,0.025390625
1451538655105,0.033203125
1451538667473,0.0263671875
1451538673560,0.0244140625
1451538682613,0.0205078125
1451538689373,0.0244140625
1451538695837,0.029296875
1451538702186,0.0263671875
1451538708216,0.029296875
1451538718798,0.0302734375
1451538723987,0.0283203125
1451538729946,0.0234375
1451538740006,0.0244140625
1451538747573,0.0263671875
1451538755770,0.0224609375
1451538765667,0.021484375
1451538775121,0.0361328125
1451538782648,0.0244140625
1451538789183,0.0224609375
1451538795124,0.03125
1451538800693,0.0244140625
1451538806337,0.0302734375
1451538813543,0.02734375
1451538820984,0.0234375
1451538827270,0.0244140625
1451538835491,0.0234375
1451538842799,0.0205078125
1451538848602,0.029296875
1451538853892,0.0263671875
1451538860455,0.025390625
1451538865466,0.02734375
1451538871683,0.021484375
1451538877908,0.025390625
1451538885135,0.0400390625
1451538890910,0.025390625
1451538897703,0.0244140625
1451538906244,0.0234375
1451538913523,0.029296875
1451538919198,0.0205078125
1451538925143,0.0263671875
1451538933452,0.0244140625
1451538940359,0.0263671875
1451538946964,0.0283203125
1451538952337,0.033203125
1451538958383,0.0244140625
1451538965147,0.0234375
1451538972370,0.02734375
1451538977828,0.025390625
1451538983825,0.029296875
1451538990522,0.0302734375
1451539003472,0.0244140625
1451539010863,0.0263671875
1451539015983,0.025390625
1451539025153,0.0234375
1451539035577,0.017578125
1451539041157,0.01953125
1451539050089,0.0234375
1451539057514,0.0224609375
1451539063819,0.029296875
1451539069812,0.029296875
1451539075163,0.0234375
1451539080836,0.03125
1451539086502,0.0283203125
1451539093331,0.0263671875
1451539099214,0.0244140625
1451539106129,0.0302734375
1451539112142,0.0244140625
1451539118241,0.0244140625
1451539125166,0.0263671875
1451539130569,0.033203125
1451539136510,0.0234375
1451539142337,0.025390625
1451539148115,0.0234375
1451539155760,0.017578125
1451539160647,0.0244140625
1451539167588,0.0234375
1451539175171,0.03125
1451539181450,0.0283203125
1451539188061,0.025390625
1451539193102,0.0224609375
1451539199112,0.0244140625
1451539210425,0.02734375
1451539218153,0.02734375
1451539228323,0.0234375
1451539233822,0.0224609375
1451539242337,0.0244140625
1451539248182,0.0263671875
1451539255183,0.0205078125
1451539261394,0.041015625
1451539267387,0.0224609375
1451539273794,0.021484375
1451539280505,0.0234375
1451539285970,0.0244140625
1451539292973,0.0263671875
1451539298545,0.0341796875
1451539303994,0.0283203125
1451539312450,0.0302734375
1451539319318,0.0234375
1451539325587,0.0244140625
1451539331582,0.02734375
1451539339537,0.025390625
1451539343920,0.033203125
1451539351287,0.0302734375
1451539357512,0.0234375
1451539366371,0.025390625
1451539373216,0.0302734375
1451539378141,0.0322265625
1451539385200,0.029296875
1451539392501,0.029296875
1451539398118,0.025390625
1451539405203,0.02734375
1451539410682,0.0244140625
1451539420215,0.0263671875
1451539426960,0.021484375
1451539433211,0.0263671875
1451539439054,0.0224609375
1451539446574,0.021484375
1451539455746,0.029296875
1451539461413,0.0244140625
1451539472343,0.033203125
1451539479206,0.0234375
1451539485213,0.0244140625
1451539492660,0.0224609375
1451539498509,0.0244140625
1451539505216,0.0390625
1451539510270,0.0244140625
1451539515519,0.025390625
1451539522026,0.0302734375
1451539529217,0.021484375
1451539532178,0.0205078125
1451539533596,0.0302734375
1451539535220,0.0341796875
1451539536324,0.033203125
1451539537572,0.0322265625
1451539538818,0.0322265625
1451539540059,0.033203125
1451539541301,0.0283203125
1451539542541,0.0283203125
1451539543783,0.0283203125
1451539545222,0.0283203125
1451539546274,0.0263671875
1451539547520,0.02734375
1451539548767,0.0283203125
1451539550013,0.0234375
1451539551262,0.025390625
1451539552508,0.0263671875
1451539553997,0.02734375
1451539555455,0.0234375
1451539556715,0.0244140625
1451539557953,0.0234375
1451539559191,0.0234375
1451539560434,0.0244140625
1451539561676,0.0234375
1451539562920,0.02734375
1451539565224,0.029296875
1451539565442,0.02734375
1451539566683,0.02734375
1451539567924,0.0244140625
1451539569173,0.0263671875
1451539570417,0.0234375
1451539571665,0.0263671875
1451539573013,0.0244140625
1451539576480,0.0234375
1451539577736,0.02734375
1451539579692,0.0263671875
1451539580935,0.0224609375
1451539582173,0.0234375
1451539583411,0.0224609375
1451539585225,0.02734375
1451539585907,0.03125
1451539587154,0.0244140625
1451539588404,0.02734375
1451539589656,0.0244140625
1451539591158,0.0263671875
1451539592500,0.0244140625
1451539593735,0.025390625
1451539595229,0.0244140625
1451539596215,0.0263671875
1451539597457,0.0263671875
1451539598704,0.025390625
1451539599940,0.0263671875
1451539601184,0.0263671875
1451539602428,0.025390625
1451539603670,0.0263671875
1451539605228,0.0244140625
1451539606162,0.0234375
1451539607410,0.0263671875
1451539608657,0.025390625
1451539609949,0.0234375
1451539611445,0.0244140625
1451539612761,0.025390625
1451539614004,0.0263671875
1451539615244,0.0244140625
1451539616484,0.0234375
1451539617722,0.0234375
1451539618964,0.033203125
1451539620210,0.0244140625
1451539621451,0.02734375
1451539622693,0.0263671875
1451539623939,0.02734375
1451539625231,0.025390625
1451539626431,0.0234375
1451539627684,0.025390625
1451539628928,0.0263671875
1451539630400,0.0234375
1451539631868,0.0244140625
1451539633120,0.0244140625
1451539636019,0.0244140625
1451539637261,0.02734375
1451539638493,0.0234375
1451539640111,0.0224609375
1451539641364,0.0263671875
1451539642614,0.025390625
1451539643862,0.0224609375
1451539645234,0.0263671875
1451539646474,0.0224609375
1451539647949,0.0263671875
1451539649199,0.041015625
1451539650443,0.0244140625
1451539651687,0.0224609375
1451539652934,0.0224609375
1451539655233,0.0224609375
1451539655456,0.0234375
1451539656696,0.0224609375
1451539657936,0.0234375
1451539659192,0.0234375
1451539660426,0.0224609375
1451539661668,0.0234375
1451539662915,0.02734375
1451539665259,0.02734375
1451539665409,0.0263671875
1451539666874,0.02734375
1451539668345,0.0244140625
1451539669592,0.0263671875
1451539670836,0.02734375
1451539672078,0.0263671875
1451539673320,0.0263671875
1451539675238,0.0263671875
1451539675813,0.0263671875
1451539677051,0.02734375
1451539678291,0.0244140625
1451539679529,0.0234375
1451539680771,0.025390625
1451539682021,0.0244140625
1451539683265,0.0234375
1451539685238,0.0234375
1451539685814,0.0283203125
1451539687288,0.0263671875
1451539688582,0.0224609375
1451539689797,0.0263671875
1451539691044,0.0263671875
1451539692287,0.0263671875
1451539693519,0.0224609375
1451539696349,0.0234375
1451539697590,0.0234375
1451539699328,0.025390625
1451539700692,0.0263671875
1451539701939,0.0244140625
1451539703409,0.02734375
1451539705245,0.02734375
1451539706089,0.0244140625
1451539707331,0.0244140625
1451539708575,0.025390625
1451539709820,0.0244140625
1451539711066,0.0224609375
1451539712306,0.0234375
1451539713548,0.025390625
1451539715245,0.0244140625
1451539716037,0.025390625
1451539717285,0.0244140625
1451539718529,0.0234375
1451539719773,0.0234375
1451539721019,0.0234375
1451539722267,0.0263671875
1451539723758,0.0234375
1451539725266,0.02734375
1451539726464,0.0263671875
1451539727712,0.0244140625
1451539728956,0.025390625
1451539730196,0.025390625
1451539731439,0.025390625
1451539732684,0.0263671875
1451539733927,0.0263671875
1451539735246,0.0263671875
1451539736404,0.0234375
1451539737652,0.0263671875
1451539738900,0.0224609375
1451539740178,0.017578125
1451539743414,0.0224609375
1451539752394,0.02734375
1451539760263,0.029296875
1451539767048,0.025390625
1451539775251,0.0244140625
1451539783318,0.025390625
1451539789881,0.02734375
1451539797506,0.033203125
1451539804089,0.03125
1451539809806,0.025390625
1451539818028,0.0263671875
1451539825664,0.0244140625
1451539835258,0.0234375
1451539841597,0.0234375
1451539847372,0.0224609375
1451539855261,0.021484375
1451539860320,0.0244140625
1451539873731,0.0263671875
1451539881793,0.0224609375
1451539887200,0.0341796875
1451539893310,0.0244140625
1451539908857,0.0234375
1451539917944,0.0302734375
1451539926827,0.0283203125
1451539931708,0.02734375
1451539939221,0.0244140625
1451539950533,0.021484375
1451539956276,0.025390625
1451539963857,0.02734375
1451539972300,0.0234375
1451539979245,0.0234375
1451539985532,0.0244140625
1451539991801,0.025390625
1451539998700,0.0234375
1451540005707,0.0224609375
1451540012470,0.0283203125
1451540020165,0.033203125
1451540027074,0.0341796875
1451540035283,0.0205078125
1451540045287,0.0234375
1451540055486,0.03125
1451540065490,0.0283203125
1451540072107,0.021484375
1451540079956,0.0244140625
1451540086603,0.03125
1451540097742,0.021484375
1451540106157,0.025390625
1451540112848,0.0224609375
1451540119862,0.02734375
1451540126663,0.0234375
1451540135298,0.029296875
1451540140156,0.03125
1451540147074,0.0322265625
1451540152938,0.0205078125
1451540161864,0.037109375
1451540168439,0.025390625
1451540179490,0.03515625
1451540185303,0.029296875
1451540190534,0.0380859375
1451540200135,0.0224609375
1451540207446,0.025390625
1451540213613,0.0341796875
1451540225309,0.03125
1451540235552,0.0244140625
1451540242699,0.017578125
1451540249100,0.025390625
1451540255482,0.021484375
1451540266455,0.0244140625
1451540273724,0.03125
1451540283286,0.0234375
1451540295331,0.0283203125
1451540307283,0.0224609375
1451540314044,0.03515625
1451540325335,0.0244140625
1451540331541,0.0322265625
1451540347137,0.0234375
1451540355334,0.0244140625
1451540365330,0.0234375
1451540370710,0.0224609375
1451540383774,0.0224609375
1451540393754,0.03125
1451540402041,0.0263671875
1451540408226,0.0263671875
1451540419897,0.017578125
1451540425334,0.0234375
1451540432858,0.0244140625
1451540439252,0.0263671875
1451540445679,0.0205078125
1451540455339,0.0205078125
1451540465345,0.0224609375
1451540470725,0.0263671875
1451540481257,0.0244140625
1451540486337,0.029296875
1451540493316,0.0341796875
1451540499725,0.0244140625
1451540506864,0.0234375
1451540513819,0.0234375
1451540522292,0.02734375
1451540532616,0.0224609375
1451540539763,0.017578125
1451540546090,0.017578125
1451540551967,0.021484375
1451540559450,0.02734375
1451540565359,0.03125
1451540572692,0.0283203125
1451540581231,0.0234375
1451540587536,0.0234375
1451540592339,0.0263671875
1451540599810,0.0234375
1451540607719,0.0234375
1451540618585,0.0322265625
1451540625366,0.02734375
1451540632221,0.0224609375
1451540637904,0.0263671875
1451540643962,0.0234375
1451540651213,0.025390625
1451540658382,0.0400390625
1451540665897,0.017578125
1451540672465,0.0224609375
1451540679169,0.03125
1451540685372,0.029296875
1451540692125,0.02734375
1451540698852,0.0224609375
1451540703911,0.0283203125
1451540711518,0.0234375
1451540721268,0.0263671875
1451540727242,0.0283203125
1451540735376,0.0263671875
1451540741491,0.0244140625
1451540748290,0.0224609375
1451540753602,0.0302734375
1451540759313,0.029296875
1451540766668,0.0283203125
1451540778960,0.0234375
1451540792046,0.0224609375
1451540798411,0.0234375
1451540815385,0.029296875
1451540821871,0.0283203125
1451540830094,0.0244140625
1451540836922,0.021484375
1451540843075,0.0322265625
1451540853137,0.02734375
1451540859936,0.025390625
1451540869155,0.0234375
1451540875394,0.033203125
1451540885860,0.0263671875
1451540892979,0.021484375
1451540903300,0.0244140625
1451540909687,0.021484375
1451540918697,0.0234375
1451540933045,0.0224609375
1451540938819,0.0224609375
1451540947687,0.03515625
1451540954255,0.0263671875
1451540960195,0.025390625
1451540968236,0.0205078125
1451540975813,0.025390625
1451540982298,0.0224609375
1451540989163,0.0234375
1451540997822,0.029296875
1451541003401,0.0224609375
1451541010870,0.0322265625
1451541015963,0.0244140625
1451541022042,0.017578125
1451541028855,0.01953125
1451541039524,0.0205078125
1451541046539,0.0205078125
1451541056251,0.0244140625
1451541067556,0.021484375
1451541075550,0.025390625
1451541081580,0.025390625
1451541088599,0.0224609375
1451541095422,0.0244140625
1451541102054,0.0244140625
1451541109895,0.0234375
1451541116975,0.0244140625
1451541123771,0.0205078125
1451541129187,0.0224609375
1451541136882,0.0224609375
1451541143951,0.029296875
1451541150054,0.021484375
1451541157335,0.037109375
1451541163302,0.0361328125
1451541171362,0.0244140625
1451541177417,0.0224609375
1451541184155,0.0234375
1451541190626,0.025390625
1451541196539,0.025390625
1451541203524,0.017578125
1451541209391,0.0341796875
1451541215844,0.0234375
1451541221979,0.0244140625
1451541228742,0.029296875
1451541236529,0.025390625
1451541242502,0.025390625
1451541248705,0.0361328125
1451541255520,0.0234375
1451541262107,0.025390625
1451541276071,0.03515625
1451541283212,0.0283203125
1451541288209,0.025390625
1451541295450,0.02734375
1451541301790,0.03125
1451541307245,0.0244140625
1451541314676,0.0390625
1451541319747,0.0302734375
1451541325878,0.0283203125
1451541333831,0.0234375
1451541339042,0.0283203125
1451541352478,0.029296875
1451541360748,0.0224609375
1451541369288,0.0224609375
1451541375257,0.0263671875
1451541385765,0.025390625
1451541392626,0.0234375
1451541403096,0.0234375
1451541410106,0.03515625
1451541415850,0.0244140625
1451541422722,0.0244140625
1451541441445,0.0244140625
1451541449018,0.017578125
1451541457493,0.0283203125
1451541462066,0.0390625
1451541472275,0.0244140625
1451541479249,0.0244140625
1451541487498,0.025390625
1451541493891,0.0244140625
1451541499680,0.021484375
1451541506295,0.017578125
1451541512106,0.025390625
1451541518585,0.025390625
1451541524003,0.029296875
1451541531150,0.0263671875
1451541537505,0.0205078125
1451541543376,0.0205078125
1451541551129,0.0234375
1451541555222,0.0185546875
1451541557518,0.03125
1451541557705,0.029296875
1451541558946,0.033203125
1451541560188,0.0322265625
1451541561429,0.02734375
1451541562671,0.0263671875
1451541563915,0.02734375
1451541565895,0.025390625
1451541567791,0.0263671875
1451541569370,0.0234375
1451541571450,0.025390625
1451541572682,0.0263671875
1451541573926,0.025390625
1451541575169,0.025390625
1451541577513,0.0263671875
1451541577655,0.0244140625
1451541578899,0.0244140625
1451541580139,0.0244140625
1451541581382,0.0263671875
1451541582630,0.025390625
1451541583874,0.0234375
1451541585120,0.025390625
1451541587521,0.0234375
1451541589191,0.025390625
1451541590425,0.0234375
1451541591665,0.0234375
1451541592903,0.0234375
1451541595336,0.02734375
1451541597512,0.02734375
1451541597845,0.02734375
1451541599080,0.02734375
1451541600365,0.0244140625
1451541601561,0.0234375
1451541602807,0.0234375
1451541604055,0.0263671875
1451541605301,0.0263671875
1451541607513,0.02734375
1451541608154,0.025390625
1451541609416,0.0263671875
1451541610656,0.0234375
1451541611896,0.0234375
1451541613140,0.025390625
1451541614380,0.0234375
1451541615621,0.0234375
1451541617525,0.0244140625
1451541618105,0.0244140625
1451541619349,0.0234375
1451541620602,0.0244140625
1451541621862,0.025390625
1451541623105,0.0234375
1451541624352,0.0234375
1451541628833,0.02734375
1451541630075,0.0234375
1451541631785,0.025390625
1451541634205,0.0263671875
1451541635445,0.02734375
1451541637516,0.0244140625
1451541637936,0.02734375
1451541639185,0.02734375
1451541640428,0.02734375
1451541641676,0.02734375
1451541642926,0.02734375
1451541644429,0.025390625
1451541645847,0.0244140625
1451541647529,0.0263671875
1451541648325,0.02734375
1451541649570,0.02734375
1451541650812,0.025390625
1451541652050,0.0234375
1451541653292,0.0263671875
1451541654534,0.02734375
1451541655777,0.02734375
1451541657519,0.0234375
1451541658267,0.0234375
1451541659517,0.0244140625
1451541660761,0.0244140625
1451541662016,0.0244140625
1451541663278,0.02734375
1451541664770,0.0234375
1451541666136,0.0263671875
1451541667520,0.0234375
1451541668616,0.0244140625
1451541669857,0.025390625
1451541671099,0.0263671875
1451541672343,0.0263671875
1451541673587,0.0263671875
1451541674827,0.02734375
1451541676065,0.0234375
1451541677532,0.025390625
1451541678544,0.025390625
1451541679797,0.025390625
1451541681042,0.0263671875
1451541682288,0.0263671875
1451541683729,0.025390625
1451541685233,0.0244140625
1451541687763,0.0234375
1451541689003,0.0263671875
1451541690920,0.0234375
1451541692162,0.0244140625
1451541693406,0.0263671875
1451541694644,0.0234375
1451541695896,0.0244140625
1451541697525,0.0283203125
1451541698387,0.0234375
1451541699707,0.02734375
1451541701175,0.0244140625
1451541702433,0.025390625
1451541703673,0.0234375
1451541704916,0.025390625
1451541706160,0.0263671875
1451541707534,0.0224609375
1451541708626,0.02734375
1451541709870,0.0244140625
1451541711109,0.0234375
1451541712356,0.025390625
1451541713595,0.0263671875
1451541714839,0.02734375
1451541716087,0.02734375
1451541717528,0.02734375
1451541718576,0.02734375
1451541720036,0.0234375
1451541721488,0.0234375
1451541722736,0.02734375
1451541723973,0.0234375
1451541725211,0.025390625
1451541727529,0.0263671875
1451541727735,0.02734375
1451541728977,0.025390625
1451541730215,0.0234375
1451541731460,0.0244140625
1451541732700,0.025390625
1451541733948,0.025390625
1451541735198,0.0263671875
1451541737538,0.025390625
1451541737693,0.0244140625
1451541738987,0.0234375
1451541740475,0.02734375
1451541741745,0.0263671875
1451541742997,0.0244140625
1451541744241,0.025390625
1451541745504,0.0263671875
1451541748316,0.0234375
1451541749556,0.0263671875
1451541750781,0.0234375
1451541752589,0.0234375
1451541753843,0.025390625
1451541755093,0.0263671875
1451541757911,0.02734375
1451541759146,0.0234375
1451541760682,0.017578125
1451541763722,0.0205078125
1451541773270,0.021484375
1451541781723,0.0244140625
1451541790464,0.025390625
1451541806262,0.0234375
1451541813064,0.0244140625
1451541821979,0.0263671875
1451541828952,0.021484375
1451541840852,0.025390625
1451541847588,0.02734375
1451541855924,0.0302734375
1451541861062,0.0224609375
1451541870328,0.029296875
1451541878945,0.02734375
1451541886422,0.021484375
1451541897550,0.0244140625
1451541904735,0.0224609375
1451541911886,0.0244140625
1451541918721,0.0185546875
1451541927554,0.0283203125
1451541933591,0.0234375
1451541941142,0.025390625
1451541947561,0.0283203125
1451541955588,0.0205078125
1451541961483,0.025390625
1451541967560,0.0244140625
1451541976162,0.02734375
1451541983302,0.0283203125
1451541988719,0.017578125
1451541995162,0.0224609375
1451542001531,0.0234375
1451542008924,0.0244140625
1451542014975,0.02734375
1451542021640,0.021484375
1451542028757,0.02734375
1451542034596,0.0244140625
1451542041539,0.025390625
1451542048230,0.029296875
1451542055487,0.0244140625
1451542066245,0.021484375
1451542078550,0.0224609375
1451542084929,0.0244140625
1451542092170,0.0224609375
1451542102332,0.0234375
1451542115078,0.025390625
1451542122275,0.0263671875
1451542128206,0.0234375
1451542133734,0.0234375
1451542141566,0.0244140625
1451542148415,0.0224609375
1451542154761,0.0400390625
1451542161126,0.0244140625
1451542169576,0.0185546875
1451542175600,0.0205078125
1451542182193,0.0244140625
1451542189911,0.0224609375
1451542197590,0.021484375
1451542203493,0.0234375
1451542211928,0.0244140625
1451542218709,0.0234375
1451542227598,0.025390625
1451542234746,0.0185546875
1451542241624,0.0234375
1451542249611,0.029296875
1451542254652,0.025390625
1451542262545,0.025390625
1451542268700,0.0234375
1451542275049,0.0224609375
1451542282444,0.0234375
1451542289183,0.025390625
1451542295670,0.0185546875
1451542310606,0.0244140625
1451542317606,0.0263671875
1451542324935,0.0234375
1451542332704,0.0224609375
1451542341179,0.0234375
1451542362826,0.025390625
1451542369595,0.0234375
1451542377616,0.0234375
1451542383713,0.037109375
1451542391118,0.02734375
1451542397983,0.0234375
1451542405882,0.02734375
1451542412807,0.0244140625
1451542420108,0.025390625
1451542426061,0.025390625
1451542434599,0.0234375
1451542442456,0.025390625
1451542448130,0.0234375
1451542455846,0.0224609375
1451542462435,0.033203125
1451542469554,0.0224609375
1451542477633,0.021484375
1451542484646,0.025390625
1451542490607,0.0263671875
1451542497940,0.033203125
1451542504805,0.0234375
1451542512050,0.0234375
1451542519931,0.0263671875
1451542526262,0.0244140625
1451542532457,0.021484375
1451542538440,0.02734375
1451542546159,0.0244140625
1451542553557,0.0234375
1451542560036,0.0283203125
1451542567638,0.0244140625
1451542575343,0.041015625
1451542580538,0.033203125
1451542587641,0.0244140625
1451542594674,0.021484375
1451542600571,0.0205078125
1451542608122,0.0234375
1451542614336,0.025390625
1451542620042,0.0244140625
1451542627645,0.0244140625
1451542634130,0.025390625
1451542642379,0.0224609375
1451542648264,0.03125
1451542655443,0.021484375
1451542661750,0.021484375
1451542670207,0.0244140625
1451542676416,0.025390625
1451542683027,0.025390625
1451542691250,0.0234375
1451542697655,0.0205078125
1451542704402,0.0244140625
1451542710605,0.025390625
1451542718862,0.017578125
1451542727658,0.025390625
1451542737929,0.03125
1451542744132,0.037109375
1451542750761,0.0244140625
1451542758600,0.0234375
1451542765445,0.02734375
1451542773336,0.017578125
1451542780597,0.0283203125
1451542788348,0.0244140625
1451542795116,0.0224609375
1451542803030,0.025390625
1451542815952,0.0224609375
1451542821475,0.021484375
1451542828972,0.0244140625
1451542835949,0.0244140625
1451542842714,0.0361328125
1451542848849,0.0263671875
1451542855864,0.0224609375
1451542863209,0.029296875
1451542875697,0.0244140625
1451542885305,0.0244140625
1451542892351,0.0224609375
1451542898853,0.017578125
1451542908364,0.021484375
1451542915273,0.0234375
1451542921436,0.0302734375
1451542928051,0.021484375
1451542935272,0.0224609375
1451542942605,0.0244140625
1451542948528,0.02734375
1451542955969,0.029296875
1451542962547,0.01953125
1451542968313,0.02734375
1451542974434,0.0322265625
1451542980678,0.0234375
1451542987691,0.021484375
1451542993356,0.0234375
1451543000652,0.0234375
1451543014163,0.017578125
1451543019584,0.0263671875
1451543026113,0.025390625
1451543033284,0.025390625
1451543039731,0.0361328125
1451543045546,0.0224609375
1451543052045,0.0234375
1451543059336,0.0224609375
1451543067721,0.0244140625
1451543073487,0.0244140625
1451543079999,0.017578125
1451543086240,0.02734375
1451543092847,0.021484375
1451543100796,0.0234375
1451543109943,0.0244140625
1451543117711,0.0224609375
1451543124960,0.021484375
1451543132055,0.0234375
1451543139550,0.0322265625
1451543149651,0.0234375
1451543164027,0.0224609375
1451543174187,0.0244140625
1451543181756,0.0244140625
1451543187737,0.0263671875
1451543195065,0.0234375
1451543204891,0.0234375
1451543211734,0.0244140625
1451543217739,0.0234375
1451543223737,0.0263671875
1451543229755,0.0244140625
1451543237726,0.033203125
1451543244439,0.0224609375
1451543251344,0.0224609375
1451543257727,0.0263671875
1451543264167,0.025390625
1451543271929,0.0380859375
1451543279878,0.0224609375
1451543287731,0.025390625
1451543297767,0.021484375
1451543304547,0.02734375
1451543314963,0.025390625
1451543321838,0.0244140625
1451543329121,0.0263671875
1451543337757,0.025390625
1451543347739,0.0205078125
1451543358132,0.021484375
1451543364713,0.025390625
1451543370894,0.025390625
1451543378295,0.017578125
1451543384532,0.0234375
1451543397983,0.025390625
1451543405401,0.0244140625
1451543412524,0.0224609375
1451543419815,0.02734375
1451543430939,0.0234375
1451543438620,0.017578125
1451543444060,0.0234375
1451543450867,0.0244140625
1451543459144,0.021484375
1451543467756,0.021484375
1451543475163,0.021484375
1451543482166,0.0234375
1451543491675,0.0224609375
1451543498258,0.017578125
1451543506155,0.02734375
1451543513292,0.0224609375
1451543520832,0.0283203125
1451543527763,0.025390625
1451543535116,0.0244140625
1451543541220,0.0341796875
1451543547776,0.0205078125
1451543563980,0.0244140625
1451543574795,0.03125
1451543582219,0.0244140625
1451543588476,0.0234375
1451543592442,0.0234375
1451543593688,0.03125
1451543594946,0.0283203125
1451543597771,0.0341796875
1451543598613,0.029296875
1451543599853,0.033203125
1451543601101,0.0322265625
1451543602340,0.0283203125
1451543603582,0.0302734375
1451543604828,0.029296875
1451543606078,0.0263671875
1451543607782,0.0244140625
1451543608571,0.0234375
1451543609845,0.0234375
1451543611325,0.025390625
1451543612669,0.0244140625
1451543613903,0.025390625
1451543615145,0.025390625
1451543616387,0.0380859375
1451543617776,0.02734375
1451543619358,0.02734375
1451543620592,0.0244140625
1451543622337,0.0234375
1451543623582,0.0234375
1451543624825,0.0234375
1451543626275,0.0263671875
1451543627775,0.0234375
1451543628988,0.0263671875
1451543630224,0.0263671875
1451543631472,0.0263671875
1451543632717,0.025390625
1451543633956,0.025390625
1451543635196,0.025390625
1451543636441,0.0244140625
1451543637787,0.0234375
1451543638925,0.0234375
1451543640173,0.0244140625
1451543641417,0.0234375
1451543642666,0.0244140625
1451543643916,0.0263671875
1451543645160,0.0234375
1451543646652,0.0234375
1451543648168,0.0234375
1451543649405,0.0419921875
1451543650647,0.0263671875
1451543651931,0.0263671875
1451543653135,0.025390625
1451543654383,0.0244140625
1451543655623,0.025390625
1451543657780,0.0263671875
1451543658108,0.025390625
1451543659350,0.025390625
1451543660594,0.0263671875
1451543661844,0.0263671875
1451543663090,0.025390625
1451543664337,0.0234375
1451543665695,0.02734375
1451543667791,0.025390625
1451543668449,0.025390625
1451543669683,0.0263671875
1451543670930,0.0244140625
1451543672174,0.0244140625
1451543673416,0.0244140625
1451543674657,0.025390625
1451543675900,0.025390625
1451543677830,0.025390625
1451543679057,0.0234375
1451543680309,0.0263671875
1451543681567,0.0263671875
1451543683998,0.0234375
1451543685234,0.02734375
1451543686478,0.0263671875
1451543687784,0.025390625
1451543688960,0.0234375
1451543690202,0.025390625
1451543691446,0.0263671875
1451543692687,0.02734375
1451543693923,0.0234375
1451543695167,0.0234375
1451543696419,0.0244140625
1451543697798,0.025390625
1451543698912,0.0234375
1451543700162,0.0244140625
1451543701410,0.0234375
1451543702917,0.0244140625
1451543704383,0.0234375
1451543705635,0.0263671875
1451543707787,0.0234375
1451543708117,0.0234375
1451543709359,0.025390625
1451543710601,0.0263671875
1451543711847,0.025390625
1451543713086,0.02734375
1451543714328,0.0224609375
1451543715566,0.0234375
1451543717787,0.0244140625
1451543718113,0.0244140625
1451543719359,0.0263671875
1451543720605,0.02734375
1451543721897,0.0263671875
1451543723385,0.0263671875
1451543724683,0.0244140625
1451543725916,0.0234375
1451543727796,0.025390625
1451543728394,0.0244140625
1451543729640,0.025390625
1451543730877,0.025390625
1451543732114,0.02734375
1451543733355,0.0234375
1451543734597,0.0234375
1451543735843,0.0263671875
1451543737789,0.02734375
1451543738339,0.0234375
1451543740330,0.0263671875
1451543741746,0.0244140625
1451543743706,0.0234375
1451543744938,0.02734375
1451543746181,0.0244140625
1451543747791,0.0234375
1451543748653,0.0263671875
1451543749891,0.0234375
1451543751131,0.025390625
1451543752381,0.0263671875
1451543753638,0.0234375
1451543754880,0.0234375
1451543756130,0.0234375
1451543757798,0.0234375
1451543758843,0.025390625
1451543760299,0.025390625
1451543761553,0.0244140625
1451543762793,0.025390625
1451543764035,0.02734375
1451543765277,0.0244140625
1451543766520,0.041015625
1451543767794,0.0234375
1451543769008,0.0244140625
1451543770248,0.025390625
1451543771486,0.02734375
1451543772738,0.02734375
1451543773988,0.0390625
1451543775231,0.02734375
1451543776481,0.02734375
1451543777795,0.02734375
1451543779234,0.0244140625
1451543780647,0.02734375
1451543781880,0.0234375
1451543783112,0.02734375
1451543784356,0.02734375
1451543785596,0.0234375
1451543787803,0.025390625
1451543788127,0.0244140625
1451543789371,0.025390625
1451543790615,0.0263671875
1451543791857,0.0263671875
1451543793097,0.0234375
1451543794348,0.025390625
1451543795594,0.0244140625
1451543797798,0.0234375
1451543798420,0.017578125
1451543800749,0.017578125
1451543806169,0.025390625
1451543813666,0.033203125
1451543820755,0.0263671875
1451543828130,0.0234375
1451543836090,0.021484375
1451543847809,0.0234375
1451543859849,0.0244140625
1451543871025,0.0283203125
1451543877812,0.025390625
1451543885311,0.0224609375
1451543893428,0.0263671875
1451543900501,0.0244140625
1451543908024,0.0244140625
1451543916042,0.02734375
1451543926575,0.021484375
1451543934408,0.0234375
1451543942965,0.0224609375
1451543949747,0.0224609375
1451543958165,0.0263671875
1451543968949,0.021484375
1451543976452,0.0224609375
1451543983511,0.017578125
1451543989602,0.02734375
1451544000300,0.0224609375
1451544012647,0.025390625
1451544024353,0.0224609375
1451544032878,0.0244140625
1451544038611,0.01953125
1451544047831,0.0244140625
1451544054134,0.0234375
1451544062515,0.025390625
1451544069596,0.0224609375
1451544077833,0.0224609375
1451544082766,0.0234375
1451544088629,0.0263671875
1451544095174,0.0224609375
1451544101955,0.017578125
1451544109552,0.0341796875
1451544117839,0.0224609375
1451544128460,0.0224609375
1451544135454,0.0224609375
1451544143297,0.02734375
1451544150552,0.0322265625
1451544158288,0.0263671875
1451544165646,0.017578125
1451544171805,0.0205078125
1451544180210,0.021484375
1451544186381,0.0234375
1451544192778,0.0234375
1451544199375,0.0224609375
1451544205498,0.02734375
1451544210979,0.0224609375
1451544218726,0.0244140625
1451544236064,0.0244140625
1451544244326,0.0244140625
1451544250168,0.0244140625
1451544261006,0.0361328125
1451544268735,0.0263671875
1451544276072,0.0263671875
1451544284719,0.0234375
1451544291888,0.025390625
1451544299294,0.0244140625
1451544307863,0.0244140625
1451544314444,0.025390625
1451544320116,0.0224609375
1451544327866,0.0244140625
1451544333378,0.0234375
1451544341034,0.0224609375
1451544347869,0.0224609375
1451544354101,0.0263671875
1451544361385,0.0263671875
1451544369354,0.021484375
1451544377247,0.0224609375
1451544385268,0.0244140625
1451544399908,0.0234375
1451544407875,0.0283203125
1451544414666,0.0263671875
1451544422552,0.0283203125
1451544437620,0.0234375
1451544445077,0.0244140625
1451544453896,0.0244140625
1451544461549,0.025390625
1451544468236,0.0244140625
1451544474677,0.0234375
1451544481610,0.0244140625
1451544489369,0.0224609375
1451544495796,0.01953125
1451544503215,0.0234375
1451544509628,0.01953125
1451544515537,0.0244140625
1451544524074,0.02734375
1451544531067,0.0205078125
1451544539378,0.033203125
1451544544687,0.0244140625
1451544551690,0.0244140625
1451544562398,0.0224609375
1451544569381,0.0234375
1451544579886,0.0224609375
1451544587842,0.017578125
1451544597621,0.025390625
1451544605374,0.0244140625
1451544612473,0.0224609375
1451544619816,0.021484375
1451544632922,0.0234375
1451544644284,0.017578125
1451544650811,0.02734375
1451544657578,0.0263671875
1451544663755,0.0322265625
1451544670870,0.0234375
1451544677693,0.0263671875
1451544684309,0.0244140625
1451544692655,0.0244140625
1451544698228,0.0224609375
1451544705721,0.017578125
1451544712748,0.0283203125
1451544720837,0.0283203125
1451544727426,0.0234375
1451544735301,0.0224609375
1451544743179,0.0224609375
1451544751020,0.025390625
1451544759405,0.0263671875
1451544771423,0.0263671875
1451544779409,0.0205078125
1451544789409,0.025390625
1451544795420,0.0244140625
1451544802687,0.0224609375
1451544809424,0.021484375
1451544817367,0.0224609375
1451544823174,0.021484375
1451544830961,0.0224609375
1451544839415,0.0244140625
1451544844519,0.0263671875
1451544851812,0.0244140625
1451544860450,0.0361328125
1451544869419,0.0244140625
1451544878022,0.0234375
1451544889724,0.025390625
1451544896745,0.0322265625
1451544903324,0.0224609375
1451544910331,0.0244140625
1451544916880,0.0263671875
1451544923559,0.0224609375
1451544931176,0.0244140625
1451544942326,0.0205078125
1451544950551,0.017578125
1451544959872,0.0234375
1451544965909,0.0302734375
1451544973184,0.021484375
1451544982608,0.0224609375
1451544989685,0.0234375
1451544996590,0.0224609375
1451545004385,0.025390625
1451545010732,0.017578125
1451545017853,0.021484375
1451545023500,0.021484375
1451545035715,0.02734375
1451545042660,0.02734375
1451545049679,0.0234375
1451545055952,0.0224609375
1451545067480,0.025390625
1451545074203,0.0244140625
1451545083150,0.0234375
1451545090149,0.025390625
1451545104089,0.0244140625
1451545111383,0.0234375
1451545119776,0.0234375
1451545135748,0.0283203125
1451545142287,0.0244140625
1451545149808,0.0224609375
1451545155691,0.0244140625
1451545162762,0.0234375
1451545169485,0.0244140625
1451545176146,0.025390625
1451545182363,0.0224609375
1451545189466,0.0224609375
1451545199461,0.0244140625
1451545205750,0.0244140625
1451545212723,0.0361328125
1451545219464,0.0234375
1451545226331,0.0224609375
1451545232534,0.0244140625
1451545239805,0.021484375
1451545246166,0.025390625
1451545262481,0.0283203125
1451545273210,0.021484375
1451545281091,0.0234375
1451545289472,0.0244140625
1451545299476,0.041015625
1451545304957,0.0244140625
1451545312466,0.0234375
1451545318319,0.0224609375
1451545327400,0.0390625
1451545340619,0.025390625
1451545350385,0.0205078125
1451545360605,0.0224609375
1451545367098,0.0224609375
1451545374923,0.0283203125
1451545381156,0.0263671875
1451545387359,0.0234375
1451545394536,0.02734375
1451545401813,0.0244140625
1451545409490,0.0205078125
1451545416131,0.0390625
1451545422210,0.0244140625
1451545431181,0.02734375
1451545439492,0.0234375
1451545449828,0.021484375
1451545456127,0.0224609375
1451545464094,0.0263671875
1451545470601,0.0224609375
1451545476462,0.025390625
1451545483291,0.0244140625
1451545490864,0.017578125
1451545498063,0.0244140625
1451545505390,0.0244140625
1451545511957,0.021484375
1451545523809,0.021484375
1451545534912,0.0185546875
1451545540895,0.0244140625
1451545549509,0.0234375
1451545554919,0.0234375
1451545562581,0.025390625
1451545576014,0.025390625
1451545581877,0.0244140625
1451545589865,0.0234375
1451545596175,0.02734375
1451545602642,0.0234375
1451545611069,0.02734375
1451545616714,0.0263671875
1451545623953,0.0234375
1451545632047,0.0205078125
1451545637939,0.02734375
1451545645387,0.0234375
1451545646755,0.0283203125
1451545648259,0.03125
1451545649557,0.0341796875
1451545650795,0.0322265625
1451545653228,0.029296875
1451545654466,0.03125
1451545655709,0.0302734375
1451545656946,0.03125
1451545658186,0.0341796875
1451545659521,0.0302734375
1451545660679,0.029296875
1451545661925,0.029296875
1451545663173,0.03515625
1451545664423,0.0341796875
1451545665670,0.033203125
1451545667186,0.033203125
1451545669522,0.0341796875
1451545670412,0.03515625
1451545671655,0.033203125
1451545672889,0.0380859375
1451545674615,0.0322265625
1451545675853,0.0361328125
1451545677097,0.0361328125
1451545678347,0.0361328125
1451545679596,0.0322265625
1451545680842,0.0302734375
1451545682200,0.03515625
1451545683672,0.0361328125
1451545684929,0.03515625
1451545686171,0.0302734375
1451545687419,0.0361328125
1451545689851,0.0322265625
1451545691087,0.03125
1451545692326,0.03515625
1451545693570,0.033203125
1451545694810,0.0341796875
1451545696048,0.03515625
1451545697289,0.03125
1451545699526,0.0302734375
1451545699829,0.033203125
1451545701069,0.03125
1451545702501,0.0302734375
1451545703981,0.029296875
1451545705243,0.033203125
1451545706486,0.0361328125
1451545707729,0.03515625
1451545709529,0.033203125
1451545710200,0.03125
1451545711442,0.0341796875
1451545712684,0.033203125
1451545713923,0.03515625
1451545715163,0.029296875
1451545716417,0.0244140625
1451545717663,0.0234375
1451545719530,0.0234375
1451545720152,0.0234375
1451545721442,0.025390625
1451545722942,0.0234375
1451545724216,0.02734375
1451545725452,0.0244140625
1451545726699,0.0263671875
1451545727943,0.02734375
1451545729531,0.0263671875
1451545730829,0.02734375
1451545732059,0.03515625
1451545733301,0.0234375
1451545735100,0.0263671875
1451545736354,0.025390625
1451545737796,0.02734375
1451545739532,0.025390625
1451545740500,0.0234375
1451545741743,0.025390625
1451545742987,0.0263671875
1451545744229,0.0283203125
1451545745471,0.02734375
1451545746715,0.02734375
1451545747958,0.0234375
1451545749534,0.0263671875
1451545750438,0.02734375
1451545751686,0.0263671875
1451545752932,0.0244140625
1451545754183,0.0263671875
1451545755433,0.02734375
1451545756676,0.02734375
1451545758141,0.0234375
1451545759597,0.033203125
1451545760848,0.0234375
1451545762082,0.025390625
1451545763328,0.0244140625
1451545764572,0.0224609375
1451545765812,0.0234375
1451545767054,0.0263671875
1451545768297,0.02734375
1451545769543,0.0263671875
1451545770789,0.0234375
1451545772021,0.02734375
1451545773267,0.02734375
1451545774514,0.0263671875
1451545775762,0.02734375
1451545777070,0.025390625
1451545779538,0.0244140625
1451545779884,0.0234375
1451545781149,0.025390625
1451545782373,0.0224609375
1451545783615,0.0244140625
1451545784855,0.0263671875
1451545786103,0.0263671875
1451545787341,0.02734375
1451545789538,0.0244140625
1451545789884,0.0244140625
1451545791680,0.0234375
1451545792935,0.02734375
1451545795201,0.0234375
1451545796487,0.02734375
1451545797730,0.025390625
1451545799539,0.02734375
1451545800211,0.025390625
1451545801457,0.0263671875
1451545802698,0.02734375
1451545803940,0.0244140625
1451545805180,0.03515625
1451545806429,0.0263671875
1451545807674,0.0263671875
1451545809541,0.02734375
1451545810169,0.0263671875
1451545811417,0.0263671875
1451545812663,0.025390625
1451545814119,0.0234375
1451545815587,0.0244140625
1451545816850,0.02734375
1451545818094,0.0234375
1451545819542,0.0244140625
1451545820574,0.0263671875
1451545821816,0.0244140625
1451545823059,0.0234375
1451545824301,0.0234375
1451545825543,0.025390625
1451545826783,0.02734375
1451545828030,0.02734375
1451545829544,0.02734375
1451545830524,0.02734375
1451545831772,0.02734375
1451545981788,0.0224609375
1451545989709,0.0234375
1451546000183,0.025390625
1451546016287,0.0224609375
1451546023954,0.0224609375
1451546033269,0.021484375
1451546043477,0.0224609375
1451546049816,0.0224609375
1451546056217,0.0322265625
1451546063630,0.0224609375
1451546070945,0.0244140625
1451546078960,0.0224609375
1451546086973,0.0224609375
1451546105534,0.021484375
1451546115791,0.021484375
1451546123339,0.0244140625
1451546135580,0.0244140625
1451546141533,0.0244140625
1451546148798,0.0234375
1451546156950,0.017578125
1451546170090,0.0234375
1451546177831,0.0244140625
1451546189480,0.0234375
1451546195681,0.02734375
1451546204068,0.0224609375
1451546211039,0.0224609375
1451546218925,0.041015625
1451546226044,0.0244140625
1451546237467,0.0205078125
1451546244740,0.033203125
1451546253302,0.0322265625
1451546260904,0.0234375
1451546271696,0.0224609375
1451546278667,0.037109375
1451546285430,0.0224609375
1451546293303,0.0234375
1451546301070,0.0234375
1451546306891,0.0205078125
1451546315731,0.0224609375
1451546323640,0.0234375
1451546331670,0.0380859375
1451546343311,0.02734375
1451546350278,0.025390625
1451546360881,0.0234375
1451546369567,0.03515625
1451546376680,0.0224609375
1451546383967,0.021484375
1451546390874,0.021484375
1451546398093,0.0361328125
1451546406586,0.0224609375
1451546414897,0.025390625
1451546426983,0.0234375
1451546433325,0.03125
1451546439303,0.0224609375
1451546446834,0.025390625
1451546453573,0.0185546875
1451546460288,0.017578125
1451546466599,0.0244140625
1451546475132,0.025390625
1451546481765,0.0244140625
1451546489478,0.0380859375
1451546496889,0.0205078125
1451546504950,0.0244140625
1451546511473,0.025390625
1451546520425,0.017578125
1451546527390,0.021484375
1451546534799,0.03125
1451546541918,0.021484375
1451546549925,0.0234375
1451546557474,0.0244140625
1451546566277,0.029296875
1451546573715,0.041015625
1451546580322,0.02734375
1451546588191,0.0244140625
1451546597842,0.0234375
1451546608125,0.0341796875
1451546615525,0.0205078125
1451546625158,0.0244140625
1451546633347,0.029296875
1451546641384,0.025390625
1451546647292,0.029296875
1451546654782,0.021484375
1451546661099,0.0263671875
1451546670169,0.025390625
1451546678548,0.0263671875
1451546689870,0.0234375
1451546697829,0.0224609375
1451546705020,0.0263671875
1451546716275,0.0244140625
1451546723745,0.0244140625
1451546730992,0.0234375
1451546740993,0.0205078125
1451546748692,0.021484375
1451546754773,0.0234375
1451546763364,0.0224609375
1451546770005,0.021484375
1451546776216,0.025390625
1451546786414,0.02734375
1451546793965,0.0244140625
1451546801522,0.021484375
1451546809197,0.0224609375
1451546817160,0.0244140625
1451546824547,0.021484375
1451546831240,0.021484375
1451546840214,0.0263671875
1451546848105,0.0390625
1451546856086,0.03515625
1451546863377,0.0234375
1451546871182,0.021484375
1451546877460,0.0234375
1451546884868,0.0205078125
1451546893381,0.0244140625
1451546900853,0.0244140625
1451546907181,0.02734375
1451546914559,0.021484375
1451546925654,0.0234375
1451546942246,0.017578125
1451546953389,0.0234375
1451546959313,0.0244140625
1451546965882,0.0234375
1451546973535,0.0263671875
1451546981542,0.0234375
1451546993394,0.0234375
1451547001237,0.0185546875
1451547014723,0.0224609375
1451547021504,0.0234375
1451547029345,0.0224609375
1451547040377,0.0205078125
1451547047460,0.0224609375
1451547055153,0.025390625
1451547065459,0.0234375
1451547073404,0.0244140625
1451547079327,0.0224609375
1451547086714,0.0224609375
1451547094110,0.021484375
1451547101452,0.0224609375
1451547108593,0.021484375
1451547120007,0.0244140625
1451547127644,0.0263671875
1451547134894,0.0263671875
1451547140439,0.0302734375
1451547147073,0.025390625
1451547154559,0.021484375
1451547161919,0.0263671875
1451547167813,0.0234375
1451547186048,0.0244140625
1451547192131,0.0234375
1451547198408,0.02734375
1451547204879,0.0224609375
1451547213422,0.0234375
1451547221563,0.0234375
1451547227799,0.0234375
1451547234875,0.0234375
1451547240900,0.0234375
1451547247298,0.017578125
1451547254578,0.025390625
1451547260591,0.0263671875
1451547267792,0.0244140625
1451547274871,0.0244140625
1451547283451,0.0224609375
1451547290146,0.0263671875
1451547297030,0.021484375
1451547305148,0.021484375
1451547316884,0.0224609375
1451547333450,0.0234375
1451547338454,0.025390625
1451547346420,0.025390625
1451547353441,0.025390625
1451547360706,0.021484375
1451547367903,0.021484375
1451547375106,0.0244140625
1451547383445,0.021484375
1451547389232,0.025390625
1451547395683,0.0234375
1451547403476,0.0244140625
1451547411417,0.03125
1451547421723,0.0244140625
1451547430908,0.0224609375
1451547437297,0.0224609375
1451547447720,0.0234375
1451547456332,0.0263671875
1451547461795,0.025390625
1451547468911,0.0244140625
1451547475846,0.029296875
1451547482832,0.0234375
1451547490915,0.0234375
1451547499024,0.025390625
1451547505335,0.021484375
1451547511892,0.025390625
1451547520917,0.0224609375
1451547529122,0.0224609375
1451547541083,0.025390625
1451547551952,0.025390625
1451547560921,0.0224609375
1451547565984,0.0322265625
1451547572147,0.0263671875
1451547579286,0.0244140625
1451547590921,0.0234375
1451547601793,0.0322265625
1451547608922,0.017578125
1451547614801,0.0234375
1451547626116,0.021484375
1451547632813,0.0244140625
1451547641029,0.021484375
1451547652298,0.0234375
1451547660930,0.0234375
1451547666242,0.017578125
1451547674538,0.021484375
1451547680945,0.0205078125
1451547687081,0.0234375
1451547694050,0.0234375
1451547700937,0.0224609375
1451547701262,0.03125
1451547702500,0.03125
1451547703750,0.0302734375
1451547704996,0.033203125
1451547706244,0.0341796875
1451547707494,0.0341796875
1451547708740,0.0341796875
1451547710935,0.03125
1451547711675,0.0341796875
1451547712923,0.03515625
1451547714167,0.0322265625
1451547715410,0.0302734375
1451547716654,0.0302734375
1451547717890,0.03125
1451547719127,0.03125
1451547720941,0.0361328125
1451547721606,0.0341796875
1451547722846,0.033203125
1451547724095,0.03125
1451547725347,0.0322265625
1451547728107,0.037109375
1451547729702,0.03515625
1451547730944,0.0341796875
1451547732189,0.033203125
1451547733432,0.0322265625
1451547734674,0.033203125
1451547735916,0.037109375
1451547737159,0.037109375
1451547738401,0.03515625
1451547739645,0.033203125
1451547740941,0.03125
1451547742136,0.0302734375
1451547743381,0.03515625
1451547744625,0.03125
1451547746052,0.03125
1451547747542,0.03125
1451547748794,0.0361328125
1451547750943,0.0361328125
1451547751271,0.03515625
1451547752513,0.0361328125
1451547753743,0.03125
1451547754985,0.03125
1451547756221,0.03125
1451547757464,0.0322265625
1451547758700,0.03125
1451547760944,0.03125
1451547761234,0.03125
1451547762475,0.03125
1451547763723,0.03125
1451547764969,0.0390625
1451547766447,0.0361328125
1451547767921,0.0302734375
1451547769155,0.03515625
1451547770944,0.033203125
1451547771641,0.03515625
1451547772882,0.0361328125
1451547774124,0.037109375
1451547775367,0.037109375
1451547776613,0.0361328125
1451547777853,0.03515625
1451547779097,0.0400390625
1451547780945,0.0322265625
1451547781602,0.0302734375
1451547782844,0.03515625
1451547784088,0.03125
1451547786794,0.0302734375
1451547788034,0.03125
1451547789774,0.029296875
1451547791262,0.03125
1451547792501,0.0302734375
1451547793737,0.03125
1451547794975,0.03515625
1451547796227,0.033203125
1451547797474,0.041015625
1451547798720,0.0322265625
1451547800948,0.025390625
1451547801260,0.0234375
1451547802728,0.0263671875
1451547804193,0.0234375
1451547805427,0.0263671875
1451547806673,0.025390625
1451547807917,0.0263671875
1451547809159,0.0263671875
1451547810949,0.0263671875
1451547811646,0.0263671875
1451547812888,0.025390625
1451547814128,0.0224609375
1451547815366,0.0234375
1451547816615,0.0234375
1451547817863,0.0234375
1451547819109,0.0224609375
1451547820955,0.0234375
1451547821607,0.0263671875
1451547823081,0.0244140625
1451547824505,0.0263671875
1451547825738,0.025390625
1451547826972,0.025390625
1451547828221,0.0263671875
1451547829460,0.0263671875
1451547830953,0.025390625
1451547831943,0.025390625
1451547833185,0.025390625
1451547834431,0.0263671875
1451547835671,0.0244140625
1451547836911,0.0234375
1451547838161,0.0244140625
1451547839410,0.0263671875
1451547840952,0.02734375
1451547842092,0.02734375
1451547843560,0.0234375
1451547844819,0.0234375
1451547846683,0.0234375
1451547848865,0.0263671875
1451547850956,0.0234375
1451547851352,0.0244140625
1451547852596,0.0263671875
1451547853844,0.0263671875
1451547855092,0.0244140625
1451547856336,0.0234375
1451547857710,0.02734375
1451547859183,0.0283203125
1451547860955,0.0244140625
1451547861667,0.02734375
1451547862905,0.0234375
1451547864145,0.025390625
1451547865387,0.0263671875
1451547866632,0.0263671875
1451547867876,0.0263671875
1451547869116,0.02734375
1451547870956,0.0244140625
1451547871604,0.0234375
1451547872845,0.0234375
1451547874091,0.0234375
1451547875335,0.0234375
1451547876581,0.0244140625
1451547878037,0.0224609375
1451547879504,0.0224609375
1451547880961,0.025390625
1451547881998,0.025390625
1451547883241,0.0263671875
1451547884486,0.025390625
1451547886919,0.0234375
1451547888161,0.025390625
1451547889403,0.0263671875
1451547890959,0.0263671875
1451547891900,0.0244140625
1451547893150,0.0244140625
1451547894396,0.0234375
1451547895646,0.0224609375
1451547896902,0.0263671875
1451547898400,0.0234375
1451547899764,0.0263671875
1451547901001,0.0234375
1451547902243,0.029296875
1451547903517,0.017578125
1451547912941,0.0234375
1451547920964,0.0234375
1451547933195,0.0224609375
1451547942399,0.0234375
1451547956541,0.0302734375
1451547964272,0.03125
1451547972227,0.025390625
1451547980972,0.0244140625
1451547992098,0.0224609375
1451548000973,0.025390625
1451548007836,0.0224609375
1451548016078,0.0244140625
1451548023699,0.025390625
1451548032356,0.0224609375
1451548041235,0.03125
1451548050981,0.033203125
1451548063436,0.021484375
1451548070981,0.021484375
1451548078475,0.021484375
1451548088104,0.025390625
1451548093741,0.0244140625
1451548102931,0.0322265625
1451548110987,0.0205078125
1451548116686,0.0244140625
1451548124095,0.0244140625
1451548131536,0.0263671875
1451548140992,0.0244140625
1451548148411,0.0244140625
1451548154318,0.0224609375
1451548162635,0.021484375
1451548171544,0.0380859375
1451548178795,0.02734375
1451548186102,0.0224609375
1451548192731,0.0234375
1451548200999,0.0205078125
1451548206748,0.0224609375
1451548215103,0.025390625
1451548221904,0.0263671875
1451548231005,0.0224609375
1451548236948,0.0234375
1451548247788,0.0205078125
1451548256087,0.03515625
1451548262598,0.0234375
1451548273931,0.0224609375
1451548282304,0.0234375
1451548292926,0.025390625
1451548301013,0.025390625
1451548307720,0.0224609375
1451548314099,0.0205078125
1451548321558,0.0205078125
1451548327711,0.0224609375
1451548335818,0.0234375
1451548342105,0.0244140625
1451548349122,0.0224609375
1451548355541,0.0302734375
1451548362491,0.0234375
1451548369373,0.0234375
1451548376474,0.025390625
1451548385454,0.0244140625
1451548397685,0.0224609375
1451548423241,0.021484375
1451548431028,0.0234375
1451548436969,0.0234375
1451548444612,0.0224609375
1451548453680,0.017578125
1451548463673,0.0244140625
1451548471036,0.02734375
1451548477791,0.0224609375
1451548485800,0.02734375
1451548494270,0.0380859375
1451548501039,0.0224609375
1451548508814,0.025390625
1451548515525,0.0244140625
1451548522588,0.0234375
1451548529911,0.0234375
1451548536946,0.021484375
1451548545363,0.0234375
1451548552848,0.0283203125
1451548561045,0.021484375
1451548569513,0.0244140625
1451548578268,0.0224609375
1451548584535,0.02734375
1451548595224,0.025390625
1451548603579,0.0205078125
1451548611053,0.029296875
1451548617946,0.021484375
1451548625551,0.0234375
1451548634490,0.017578125
1451548641077,0.0244140625
1451548659329,0.021484375
1451548668079,0.0224609375
1451548675964,0.0244140625
1451548681981,0.0205078125
1451548689216,0.0205078125
1451548708701,0.0234375
1451548715664,0.0244140625
1451548723593,0.0234375
1451548732296,0.0341796875
1451548741506,0.021484375
1451548748477,0.0224609375
1451548754612,0.0234375
1451548761333,0.025390625
1451548768956,0.0205078125
1451548775309,0.0263671875
1451548781666,0.025390625
1451548791633,0.0234375
1451548798074,0.0361328125
1451548805689,0.0244140625
1451548814220,0.029296875
1451548822152,0.0302734375
1451548831081,0.02734375
1451548838226,0.0234375
1451548844849,0.0205078125
1451548852764,0.0224609375
1451548861085,0.0224609375
1451548871087,0.0234375
1451548878268,0.0234375
1451548892852,0.0234375
1451548899543,0.0234375
1451548911204,0.0224609375
1451548919394,0.0234375
1451548927481,0.0244140625
1451548939653,0.0234375
1451548947346,0.0244140625
1451548953711,0.0244140625
1451548961102,0.025390625
1451548976172,0.0263671875
1451548987490,0.021484375
1451548995917,0.0234375
1451549003474,0.0185546875
1451549009712,0.0224609375
1451549017256,0.025390625
1451549024695,0.025390625
1451549032400,0.0234375
1451549041114,0.0263671875
1451549049963,0.037109375
1451549058988,0.021484375
1451549066152,0.0244140625
1451549077939,0.0400390625
1451549086618,0.0302734375
1451549097090,0.0224609375
1451549103337,0.0244140625
1451549111118,0.0244140625
1451549119689,0.0234375
1451549127354,0.037109375
1451549133727,0.0322265625
1451549139738,0.0234375
1451549149739,0.0205078125
1451549156960,0.021484375
1451549168146,0.025390625
1451549175929,0.0224609375
1451549183266,0.0224609375
1451549189875,0.0244140625
1451549198626,0.0244140625
1451549206542,0.0361328125
1451549213695,0.0234375
1451549221922,0.0234375
1451549229609,0.0244140625
1451549237331,0.025390625
1451549243279,0.01953125
1451549253190,0.0224609375
1451549264110,0.0224609375
1451549271149,0.0224609375
1451549279043,0.0234375
1451549286447,0.021484375
1451549298695,0.021484375
1451549305814,0.0244140625
1451549313493,0.0234375
1451549321144,0.0205078125
1451549327664,0.0205078125
1451549336323,0.0234375
1451549342589,0.0234375
1451549353939,0.0244140625
1451549362184,0.021484375
1451549369267,0.0244140625
1451549376213,0.025390625
1451549383644,0.025390625
1451549391163,0.0224609375
1451549399434,0.025390625
1451549405847,0.0234375
1451549413354,0.0234375
1451549421167,0.0244140625
1451549436747,0.0244140625
1451549444496,0.0341796875
1451549452070,0.0224609375
1451549459579,0.0263671875
1451549465974,0.0234375
1451549472429,0.0205078125
1451549479084,0.017578125
1451549491167,0.0234375
1451549497670,0.0224609375
1451549505522,0.0263671875
1451549513575,0.0234375
1451549521250,0.021484375
1451549528991,0.021484375
1451549536258,0.02734375
1451549542307,0.0283203125
1451549548776,0.0224609375
1451549556347,0.0283203125
1451549563116,0.0361328125
1451549571181,0.0244140625
1451549577776,0.021484375
1451549584257,0.021484375
1451549592016,0.025390625
1451549601185,0.02734375
1451549611877,0.021484375
1451549619628,0.0263671875
1451549626217,0.025390625
1451549632914,0.0205078125
1451549639849,0.0224609375
1451549648552,0.0341796875
1451549663818,0.0224609375
1451549669965,0.025390625
1451549677751,0.0205078125
1451549684161,0.0205078125
1451549692129,0.0205078125
1451549699185,0.0224609375
1451549706233,0.0263671875
1451549712688,0.029296875
1451549724338,0.0234375
1451549731198,0.03125
1451549737026,0.02734375
1451549744782,0.0224609375
1451549752990,0.021484375
1451549761201,0.0244140625
1451549768402,0.0244140625
1451549769872,0.0341796875
1451549771204,0.033203125
1451549773545,0.0341796875
1451549774783,0.03125
1451549776021,0.033203125
1451549777259,0.0283203125
1451549779005,0.029296875
1451549781770,0.029296875
1451549783016,0.03515625
1451549784478,0.0322265625
1451549785947,0.03515625
1451549787189,0.03125
1451549788427,0.03125
1451549789669,0.029296875
1451549791207,0.0361328125
1451549792154,0.0341796875
1451549793397,0.0322265625
1451549795833,0.0361328125
1451549797072,0.0361328125
1451549798320,0.033203125
1451549799567,0.03125
1451549801207,0.0302734375
1451549802065,0.0361328125
1451549803307,0.03125
1451549804801,0.0341796875
1451549806248,0.03515625
1451549807480,0.03515625
1451549808714,0.033203125
1451549809958,0.03515625
1451549811210,0.0341796875
1451549812446,0.0322265625
1451549813693,0.0302734375
1451549814929,0.03125
1451549816175,0.0341796875
1451549818615,0.03515625
1451549819875,0.0302734375
1451549821213,0.0341796875
1451549822372,0.029296875
1451549823673,0.0341796875
1451549826388,0.03125
1451549827622,0.0361328125
1451549828863,0.0361328125
1451549830105,0.03515625
1451549831389,0.033203125
1451549832635,0.0302734375
1451549833876,0.029296875
1451549835116,0.029296875
1451549836354,0.03125
1451549837596,0.03125
1451549839893,0.03515625
1451549842737,0.033203125
1451549843983,0.029296875
1451549845227,0.0283203125
1451549846473,0.0341796875
1451549847714,0.0341796875
1451549848953,0.03125
1451549851214,0.03125
1451549851478,0.0322265625
1451549852718,0.0322265625
1451549853958,0.03125
1451549855203,0.0322265625
1451549856445,0.03125
1451549857693,0.029296875
1451549858937,0.0234375
1451549861216,0.0234375
1451549861698,0.02734375
1451549863156,0.0263671875
1451549864416,0.0244140625
1451549865650,0.0244140625
1451549866895,0.0234375
1451549868137,0.0244140625
1451549869379,0.025390625
1451549871217,0.0263671875
1451549871863,0.0263671875
1451549873107,0.0263671875
1451549874350,0.0263671875
1451549875601,0.0244140625
1451549876848,0.0234375
1451549878093,0.0234375
1451549879341,0.0263671875
1451549881218,0.0244140625
1451549882101,0.0234375
1451549883407,0.0224609375
1451549884645,0.0224609375
1451549885885,0.0234375
1451549887127,0.0244140625
1451549888368,0.0244140625
1451549889612,0.0244140625
1451549891218,0.0234375
1451549892098,0.0244140625
1451549893340,0.025390625
1451549894584,0.0263671875
1451549895827,0.02734375
1451549897079,0.0263671875
1451549900057,0.02734375
1451549901821,0.0263671875
1451549903600,0.0400390625
1451549904836,0.0283203125
1451549906076,0.02734375
1451549907318,0.0244140625
1451549908559,0.0234375
1451549909801,0.0234375
1451549911221,0.0244140625
1451549912297,0.0263671875
1451549913537,0.0234375
1451549914783,0.0234375
1451549916034,0.0244140625
1451549917278,0.02734375
1451549918720,0.025390625
1451549921222,0.0234375
1451549921486,0.0244140625
1451549922726,0.0234375
1451549923967,0.025390625
1451549925211,0.0244140625
1451549926453,0.025390625
1451549927695,0.025390625
1451549931224,0.0244140625
1451549931366,0.0234375
1451549932606,0.0263671875
1451549933850,0.02734375
1451549935098,0.025390625
1451549936344,0.0234375
1451549937593,0.0244140625
1451549939077,0.025390625
1451549941225,0.0263671875
1451549941804,0.0234375
1451549943043,0.0234375
1451549944288,0.0234375
1451549945533,0.0244140625
1451549946772,0.0244140625
1451549948016,0.025390625
1451549949256,0.0263671875
1451549951227,0.0263671875
1451549951745,0.0263671875
1451549952985,0.025390625
1451549954237,0.0263671875
1451549955479,0.02734375
1451549956727,0.0263671875
1451549958136,0.0263671875
1451549960044,0.02734375
1451549962296,0.02734375
1451549963536,0.02734375
1451549964777,0.0244140625
1451549966015,0.0234375
1451549967255,0.025390625
1451549968795,0.017578125
1451549973530,0.0244140625
1451549984832,0.0234375
1451549992933,0.025390625
1451550001232,0.02734375
1451550009595,0.025390625
1451550016442,0.0341796875
1451550023725,0.017578125
1451550031444,0.021484375
1451550039516,0.025390625
1451550046767,0.0224609375
1451550057334,0.0244140625
1451550065912,0.0205078125
1451550078361,0.021484375
1451550085146,0.0224609375
1451550093138,0.0234375
1451550104965,0.0224609375
1451550113731,0.02734375
1451550121247,0.0224609375
1451550132577,0.0234375
1451550142199,0.017578125
1451550157487,0.021484375
1451550166368,0.0244140625
1451550177794,0.0234375
1451550184897,0.021484375
1451550194058,0.0244140625
1451550202003,0.017578125
1451550208162,0.0263671875
1451550215248,0.0244140625
1451550222710,0.02734375
1451550229607,0.021484375
1451550239629,0.0244140625
1451550248324,0.0234375
1451550255125,0.021484375
1451550266071,0.021484375
1451550273060,0.021484375
1451550279683,0.0244140625
1451550288770,0.0234375
1451550295445,0.0244140625
1451550303002,0.025390625
1451550311273,0.0234375
1451550331276,0.0224609375
1451550337453,0.0234375
1451550344898,0.0244140625
1451550351721,0.0224609375
1451550358048,0.0234375
1451550365489,0.025390625
1451550373262,0.0234375
1451550381284,0.0224609375
1451550387951,0.0361328125
1451550397320,0.0234375
1451550409238,0.021484375
1451550421632,0.0263671875
1451550429533,0.0234375
1451550437390,0.0341796875
1451550444181,0.017578125
1451550451292,0.0205078125
1451550457739,0.0234375
1451550464330,0.0244140625
1451550472425,0.0419921875
1451550480396,0.0244140625
1451550489660,0.02734375
1451550498917,0.0234375
1451550506510,0.0205078125
1451550515277,0.0224609375
1451550522426,0.0224609375
1451550528117,0.0224609375
1451550534553,0.03125
1451550542429,0.02734375
1451550550356,0.021484375
1451550568839,0.0224609375
1451550577093,0.0224609375
1451550584297,0.0234375
1451550599162,0.021484375
1451550607221,0.0205078125
1451550615842,0.0224609375
1451550622635,0.0205078125
1451550630182,0.0302734375
1451550636763,0.0234375
1451550646643,0.0224609375
1451550654400,0.021484375
1451550662899,0.0234375
1451550670512,0.02734375
1451550683968,0.029296875
1451550692477,0.0234375
1451550703481,0.0244140625
1451550714994,0.0419921875
1451550722878,0.0234375
1451550731057,0.01953125
1451550740402,0.029296875
1451550748393,0.025390625
1451550756176,0.0224609375
1451550764246,0.021484375
1451550773045,0.0263671875
1451550784753,0.0224609375
1451550796026,0.0224609375
1451550807592,0.0224609375
1451550814355,0.0234375
1451550824156,0.0244140625
1451550832468,0.0224609375
1451550849444,0.025390625
1451550857647,0.0244140625
1451550866473,0.0224609375
1451550874046,0.0224609375
1451550882473,0.021484375
1451550893521,0.0224609375
1451550901104,0.021484375
1451550907927,0.0224609375
1451550915644,0.0244140625
1451550924177,0.0205078125
1451550932808,0.021484375
1451550940896,0.0244140625
1451550949403,0.0205078125
1451550958322,0.01953125
1451550965091,0.021484375
1451550972504,0.021484375
1451550978671,0.029296875
1451550987590,0.0263671875
1451551002490,0.0263671875
1451551010198,0.025390625
1451551018589,0.0244140625
1451551032493,0.0234375
1451551039310,0.0224609375
1451551047997,0.017578125
1451551054340,0.0234375
1451551063205,0.0244140625
1451551069828,0.02734375
1451551080464,0.029296875
1451551082512,0.0302734375
1451551095484,0.0234375
1451551102859,0.025390625
1451551109858,0.0205078125
1451551117844,0.0224609375
1451551124264,0.025390625
1451551133144,0.0244140625
1451551145644,0.0341796875
1451551157297,0.021484375
1451551163884,0.025390625
1451551172521,0.021484375
1451551180057,0.021484375
1451551186882,0.0244140625
1451551193524,0.0244140625
1451551202664,0.0224609375
1451551210505,0.021484375
1451551218808,0.0234375
1451551227204,0.041015625
1451551233477,0.021484375
1451551249207,0.025390625
1451551258556,0.0224609375
1451551264784,0.0224609375
1451551273316,0.021484375
1451551285376,0.0322265625
1451551292557,0.0244140625
1451551299736,0.0234375
1451551306315,0.0234375
1451551314758,0.021484375
1451551323600,0.0234375
1451551334589,0.0224609375
1451551343234,0.025390625
1451551350870,0.0234375
1451551359453,0.0341796875
1451551366984,0.025390625
1451551373955,0.025390625
1451551380794,0.0263671875
1451551388621,0.021484375
1451551396562,0.0205078125
1451551404453,0.0400390625
1451551410690,0.0234375
1451551417277,0.0244140625
1451551426069,0.025390625
1451551434724,0.02734375
1451551443083,0.0224609375
1451551455663,0.0224609375
1451551462548,0.0263671875
1451551470101,0.021484375
1451551486061,0.0263671875
1451551492554,0.0234375
1451551499061,0.0234375
1451551505758,0.02734375
1451551512555,0.0234375
1451551520522,0.0244140625
1451551530138,0.017578125
1451551537431,0.025390625
1451551544428,0.0244140625
1451551554141,0.0302734375
1451551568932,0.0234375
1451551576859,0.0224609375
1451551584784,0.0244140625
1451551593331,0.021484375
1451551599538,0.0234375
1451551606323,0.0234375
1451551614038,0.0234375
1451551622573,0.0224609375
1451551630754,0.0224609375
1451551639192,0.0224609375
1451551654828,0.0234375
1451551662575,0.0244140625
1451551669200,0.0234375
1451551677773,0.0400390625
1451551683564,0.025390625
1451551690677,0.025390625
1451551697570,0.0234375
1451551705531,0.0234375
1451551715795,0.029296875
1451551724268,0.0244140625
1451551732585,0.0224609375
1451551742953,0.0234375
1451551744267,0.0263671875
1451551756715,0.025390625
1451551764642,0.02734375
1451551773213,0.0234375
1451551784277,0.0234375
1451551790672,0.0234375
1451551797557,0.0234375
1451551805098,0.0205078125
1451551812594,0.025390625
1451551813095,0.025390625
1451551814339,0.0341796875
1451551815584,0.0341796875
1451551816820,0.0322265625
1451551818060,0.033203125
1451551819308,0.0380859375
1451551820550,0.0361328125
1451551822595,0.03515625
1451551823045,0.0322265625
1451551824291,0.0341796875
1451551825737,0.0341796875
1451551827203,0.0361328125
1451551828451,0.033203125
1451551830480,0.0302734375
1451551832598,0.037109375
1451551833718,0.03125
1451551834964,0.0361328125
1451551836205,0.0341796875
1451551837457,0.0380859375
1451551838705,0.0322265625
1451551839945,0.03125
1451551841306,0.0380859375
1451551842780,0.037109375
1451551844026,0.03125
1451551845272,0.0380859375
1451551846518,0.0341796875
1451551847760,0.033203125
1451551850195,0.0380859375
1451551851439,0.0380859375
1451551852683,0.0361328125
1451551853927,0.0341796875
1451551855165,0.03515625
1451551857598,0.03125
1451551858844,0.03125
1451551860086,0.0322265625
1451551861402,0.03125
1451551862899,0.0361328125
1451551864169,0.0341796875
1451551865417,0.0361328125
1451551866659,0.0361328125
1451551867904,0.0361328125
1451551869145,0.0361328125
1451551870392,0.0361328125
1451551872602,0.037109375
1451551872920,0.0361328125
1451551874162,0.0361328125
1451551875412,0.03515625
1451551876668,0.03125
1451551877915,0.03125
1451551879163,0.029296875
1451551880409,0.03515625
1451551882604,0.037109375
1451551883347,0.0341796875
1451551884586,0.0341796875
1451551885826,0.03515625
1451551887074,0.0361328125
1451551888308,0.03125
1451551889566,0.03125
1451551891471,0.0322265625
1451551894364,0.0322265625
1451551895609,0.0322265625
1451551896855,0.029296875
1451551898222,0.033203125
1451551899690,0.0361328125
1451551900942,0.0302734375
1451551902606,0.041015625
1451551903428,0.033203125
1451551904670,0.033203125
1451551905913,0.033203125
1451551907151,0.03125
1451551908385,0.03125
1451551909627,0.033203125
1451551910867,0.025390625
1451551912626,0.0244140625
1451551913356,0.0234375
1451551914606,0.0244140625
1451551915850,0.0234375
1451551917093,0.0234375
1451551918537,0.02734375
1451551920017,0.0244140625
1451551921263,0.02734375
1451551922609,0.02734375
1451551923753,0.0263671875
1451551924996,0.033203125
1451551926234,0.0234375
1451551927476,0.025390625
1451551928722,0.0263671875
1451551929960,0.02734375
1451551931199,0.0234375
1451551932611,0.0234375
1451551933691,0.0234375
1451551934937,0.0234375
1451551936184,0.0234375
1451551937481,0.0234375
1451551938958,0.0234375
1451551940230,0.02734375
1451551941480,0.025390625
1451551942766,0.0263671875
1451551944010,0.0263671875
1451551945251,0.02734375
1451551946495,0.02734375
1451551947737,0.0244140625
1451551948977,0.0234375
1451551950215,0.0263671875
1451551952616,0.0234375
1451551954160,0.0244140625
1451551955590,0.0244140625
1451551956826,0.02734375
1451551958071,0.02734375
1451551959309,0.0234375
1451551960553,0.0244140625
1451551962613,0.025390625
1451551963025,0.0234375
1451551964269,0.0244140625
1451551965512,0.0263671875
1451551966752,0.02734375
1451551967996,0.0234375
1451551969244,0.0244140625
1451551970488,0.0234375
1451551972614,0.0234375
1451551972981,0.0244140625
1451551974449,0.0244140625
1451551975909,0.02734375
1451551977159,0.0263671875
1451551978401,0.02734375
1451551979644,0.025390625
1451551980890,0.0244140625
1451551982616,0.0234375
1451551983370,0.025390625
1451551984612,0.02734375
1451551985854,0.02734375
1451551987101,0.0263671875
1451551988351,0.02734375
1451551989599,0.02734375
1451551990844,0.02734375
1451551992617,0.0263671875
1451551993388,0.025390625
1451551994872,0.025390625
1451551996156,0.025390625
1451551997372,0.02734375
1451551998618,0.0263671875
1451551999863,0.0244140625
1451552001104,0.0234375
1451552002619,0.0263671875
1451552003585,0.02734375
1451552004824,0.0234375
1451552006065,0.0263671875
1451552007312,0.02734375
1451552008554,0.0234375
1451552009804,0.025390625
1451552012651,0.0244140625
1451552014403,0.017578125
1451552017821,0.0224609375
1451552026356,0.0234375
1451552035920,0.0244140625
1451552048066,0.0234375
1451552057037,0.025390625
1451552063698,0.0234375
1451552073151,0.029296875
1451552082631,0.0234375
1451552089906,0.0322265625
1451552097273,0.0244140625
1451552104792,0.0224609375
1451552115730,0.0263671875
1451552123689,0.0244140625
1451552135184,0.017578125
1451552142637,0.0234375
1451552149063,0.025390625
1451552157560,0.021484375
1451552166117,0.0234375
1451552173472,0.0224609375
1451552180558,0.0244140625
1451552190299,0.021484375
1451552203432,0.02734375
1451552220339,0.0224609375
1451552232649,0.0244140625
1451552240850,0.0234375
1451552247953,0.0244140625
1451552257218,0.0244140625
1451552264961,0.025390625
1451552274053,0.0224609375
1451552282728,0.0283203125
1451552290591,0.0244140625
1451552298184,0.017578125
1451552305883,0.0234375
1451552314757,0.017578125
1451552326523,0.021484375
1451552335416,0.0419921875
1451552343473,0.029296875
1451552350550,0.0234375
1451552359749,0.021484375
1451552369103,0.0224609375
1451552378054,0.0244140625
1451552385447,0.0234375
1451552394748,0.021484375
1451552403824,0.0234375
1451552413477,0.0234375
1451552432676,0.0234375
1451552440687,0.02734375
1451552453651,0.0205078125
1451552460702,0.0263671875
1451552468273,0.0244140625
1451552478299,0.0205078125
1451552487991,0.0263671875
1451552500810,0.0244140625
1451552507475,0.0341796875
1451552519547,0.0224609375
1451552526988,0.0234375
1451552536349,0.0224609375
1451552543632,0.0244140625
1451552552689,0.0224609375
1451552559538,0.0234375
1451552568388,0.0234375
1451552575535,0.0244140625
1451552592807,0.0224609375
1451552601373,0.0224609375
1451552615317,0.017578125
1451552626704,0.0244140625
1451552633273,0.0234375
1451552642703,0.0224609375
1451552649922,0.029296875
1451552662704,0.021484375
1451552672709,0.0283203125
1451552680012,0.0244140625
1451552687637,0.021484375
1451552696156,0.0234375
1451552702998,0.0244140625
1451552711341,0.0234375
1451552719162,0.0224609375
1451552727345,0.0224609375
1451552735428,0.0185546875
1451552743159,0.0341796875
1451552750984,0.0224609375
1451552760714,0.021484375
1451552769481,0.0263671875
1451552777864,0.0224609375
1451552786970,0.021484375
1451552797633,0.025390625
1451552804520,0.0224609375
1451552812725,0.0244140625
1451552819296,0.0224609375
1451552839715,0.0224609375
1451552852749,0.025390625
1451552859806,0.025390625
1451552867179,0.0205078125
1451552873775,0.0244140625
1451552882734,0.0263671875
1451552889445,0.0234375
1451552899125,0.0234375
1451552906055,0.0234375
1451552914299,0.0302734375
1451552922754,0.03515625
1451552934723,0.0205078125
1451552943857,0.0205078125
1451552955765,0.0224609375
1451552965340,0.0234375
1451552973075,0.021484375
1451552979700,0.0234375
1451552988529,0.025390625
1451552996516,0.0234375
1451553004272,0.0224609375
1451553012765,0.0244140625
1451553018740,0.0205078125
1451553026573,0.03125
1451553033082,0.0322265625
1451553041309,0.0234375
1451553048402,0.0234375
1451553056507,0.025390625
1451553065216,0.01953125
1451553072770,0.0234375
1451553079259,0.021484375
1451553086166,0.0224609375
1451553092901,0.0244140625
1451553104044,0.037109375
1451553110857,0.0244140625
1451553119014,0.0244140625
1451553125850,0.0234375
1451553135207,0.0205078125
1451553143882,0.0234375
1451553152787,0.0234375
1451553158722,0.0361328125
1451553165729,0.021484375
1451553174075,0.02734375
1451553180789,0.0263671875
1451553196838,0.0283203125
1451553208223,0.021484375
1451553221245,0.0185546875
1451553230225,0.0224609375
1451553237435,0.0263671875
1451553243939,0.0283203125
1451553256989,0.0205078125
1451553268784,0.0234375
1451553276848,0.0400390625
1451553286571,0.0224609375
1451553295826,0.02734375
1451553307098,0.025390625
1451553324322,0.0234375
1451553331531,0.0224609375
1451553340581,0.0224609375
1451553362796,0.02734375
1451553369916,0.021484375
1451553382797,0.0205078125
1451553391260,0.0244140625
1451553397221,0.025390625
1451553404152,0.0263671875
1451553411609,0.0234375
1451553419722,0.0244140625
1451553426561,0.0234375
1451553434386,0.0322265625
1451553440822,0.0244140625
1451553453128,0.0322265625
1451553461222,0.0341796875
1451553472910,0.02734375
1451553481549,0.0244140625
1451553488965,0.0224609375
1451553500822,0.0244140625
1451553509522,0.0234375
1451553517906,0.0263671875
1451553526480,0.0263671875
1451553538226,0.0234375
1451553552370,0.0244140625
1451553567400,0.0224609375
1451553578708,0.021484375
1451553586217,0.0244140625
1451553592474,0.0263671875
1451553600731,0.0263671875
1451553609872,0.0224609375
1451553617251,0.0263671875
1451553626007,0.0263671875
1451553633966,0.021484375
1451553643835,0.01953125
1451553651046,0.025390625
1451553663178,0.041015625
1451553669475,0.0205078125
1451553677448,0.0205078125
1451553685073,0.025390625
1451553693875,0.0263671875
1451553702888,0.017578125
1451553710111,0.025390625
1451553722399,0.0234375
1451553730134,0.01953125
1451553739703,0.0224609375
1451553746470,0.021484375
1451553755872,0.021484375
1451553768373,0.0224609375
1451553774578,0.021484375
1451553781148,0.0244140625
1451553790273,0.029296875
1451553798262,0.0234375
1451553805347,0.0283203125
1451553812410,0.0244140625
1451553824212,0.021484375
1451553832407,0.021484375
1451553844663,0.0224609375
1451553850592,0.0234375
1451553858371,0.0224609375
1451553872419,0.025390625
1451553872717,0.021484375
1451553873961,0.033203125
1451553875203,0.03125
1451553876517,0.0322265625
1451553878012,0.0380859375
1451553879414,0.0302734375
1451553880648,0.03515625
1451553882414,0.03125
1451553883704,0.0302734375
1451553885485,0.0361328125
1451553886729,0.0361328125
1451553887979,0.0341796875
1451553889221,0.03125
1451553890467,0.033203125
1451553892414,0.0341796875
1451553893208,0.033203125
1451553894582,0.0341796875
1451553895812,0.03125
1451553897060,0.033203125
1451553898298,0.0322265625
1451553899541,0.0322265625
1451553900779,0.03125
1451553902421,0.03125
1451553903263,0.0322265625
1451553904503,0.03125
1451553905742,0.033203125
1451553906988,0.03125
1451553908240,0.0322265625
1451553909488,0.03515625
1451553910730,0.03125
1451553912419,0.03125
1451553913495,0.0341796875
1451553914851,0.0361328125
1451553916087,0.0341796875
1451553917329,0.0322265625
1451553919768,0.0322265625
1451553921010,0.0322265625
1451553922418,0.0322265625
1451553923488,0.03125
1451553924736,0.0322265625
1451553925974,0.0322265625
1451553927215,0.033203125
1451553928461,0.03125
1451553929699,0.03125
1451553930947,0.0322265625
1451553932425,0.0361328125
1451553933774,0.03125
1451553935030,0.0361328125
1451553936272,0.0322265625
1451553937510,0.03125
1451553938752,0.033203125
1451553939997,0.0341796875
1451553941241,0.0322265625
1451553943131,0.0322265625
1451553945353,0.033203125
1451553946604,0.03125
1451553947860,0.0361328125
1451553949344,0.0302734375
1451553950676,0.03515625
1451553952422,0.0302734375
1451553953152,0.03125
1451553954393,0.0302734375
1451553955635,0.0390625
1451553956881,0.0341796875
1451553958125,0.0361328125
1451553959366,0.037109375
1451553960608,0.037109375
1451553962426,0.037109375
1451553963104,0.0322265625
1451553964366,0.0302734375
1451553965602,0.0361328125
1451553966849,0.0341796875
1451553968105,0.0302734375
1451553969599,0.0341796875
1451553972425,0.03515625
1451553973419,0.03515625
1451553974662,0.03515625
1451553975904,0.033203125
1451553977146,0.0302734375
1451553978386,0.029296875
1451553979636,0.029296875
1451553980873,0.0283203125
1451553982425,0.029296875
1451553983356,0.033203125
1451553984605,0.0322265625
1451553985853,0.0283203125
1451553987100,0.025390625
1451553988412,0.0244140625
1451553989898,0.0263671875
1451553991156,0.0234375
1451553992431,0.025390625
1451553993647,0.025390625
1451553994889,0.0263671875
1451553996133,0.025390625
1451553997377,0.025390625
1451553998617,0.02734375
1451553999859,0.0263671875
1451554001100,0.025390625
1451554002866,0.0244140625
1451554004236,0.02734375
1451554006266,0.0283203125
1451554007581,0.0234375
1451554008819,0.0234375
1451554010061,0.025390625
1451554011305,0.025390625
1451554012596,0.0244140625
1451554013836,0.0244140625
1451554015076,0.025390625
1451554016314,0.02734375
1451554017556,0.0263671875
1451554018800,0.0263671875
1451554020040,0.0234375
1451554021291,0.0244140625
1451554022534,0.0234375
1451554023777,0.0234375
1451554025137,0.02734375
1451554026635,0.02734375
1451554027883,0.02734375
1451554029136,0.0234375
1451554030376,0.025390625
1451554032436,0.0322265625
1451554032848,0.0234375
1451554034092,0.0244140625
1451554035341,0.0244140625
1451554036581,0.025390625
1451554037821,0.0263671875
1451554039071,0.0263671875
1451554040317,0.0263671875
1451554042433,0.0234375
1451554042812,0.0234375
1451554044058,0.0224609375
1451554045548,0.0234375
1451554046996,0.0244140625
1451554048240,0.0263671875
1451554049481,0.0244140625
1451554050723,0.025390625
1451554052469,0.025390625
1451554053211,0.0263671875
1451554054456,0.025390625
1451554055692,0.0234375
1451554056932,0.0244140625
1451554058174,0.0244140625
1451554059418,0.025390625
1451554060666,0.025390625
1451554062438,0.0244140625
1451554063159,0.0224609375
1451554065561,0.0263671875
1451554067527,0.0263671875
1451554068757,0.0234375
1451554070000,0.025390625
1451554071246,0.0263671875
1451554072488,0.025390625
1451554073726,0.02734375
1451554074976,0.0185546875
1451554083856,0.0224609375
1451554092579,0.037109375
1451554099722,0.021484375
1451554109370,0.021484375
1451554121182,0.021484375
1451554128778,0.017578125
1451554136197,0.0283203125
1451554144097,0.0224609375
1451554151046,0.0234375
1451554160771,0.0224609375
1451554169702,0.03515625
1451554179218,0.0224609375
1451554186493,0.017578125
1451554195464,0.021484375
1451554208686,0.0244140625
1451554227809,0.0224609375
1451554238784,0.0234375
1451554249052,0.017578125
1451554258036,0.0263671875
1451554267023,0.021484375
1451554276612,0.0205078125
1451554283027,0.0224609375
1451554292888,0.0234375
1451554301166,0.0234375
1451554307828,0.0263671875
1451554318854,0.0234375
1451554332484,0.0283203125
1451554339091,0.0263671875
1451554346440,0.0224609375
1451554358456,0.0205078125
1451554365819,0.017578125
1451554372478,0.0234375
1451554389144,0.0224609375
1451554402482,0.0224609375
1451554410986,0.0244140625
1451554418421,0.0244140625
1451554427207,0.017578125
1451554434773,0.0224609375
1451554442486,0.0234375
1451554449635,0.0244140625
1451554458411,0.0244140625
1451554466922,0.02734375
1451554473475,0.0205078125
1451554487501,0.0185546875
1451554495220,0.0205078125
1451554508140,0.0205078125
1451554520393,0.0234375
1451554532731,0.0234375
1451554542499,0.0224609375
1451554550194,0.033203125
1451554559489,0.0234375
1451554572503,0.021484375
1451554577374,0.0263671875
1451554592508,0.025390625
1451554599647,0.0234375
1451554620226,0.0263671875
1451554635360,0.021484375
1451554643266,0.0244140625
1451554652513,0.021484375
1451554658824,0.025390625
1451554665849,0.0244140625
1451554672517,0.021484375
1451554682517,0.0244140625
1451554689698,0.0244140625
1451554697500,0.0224609375
1451554710917,0.0322265625
1451554718649,0.025390625
1451554726244,0.0244140625
1451554734017,0.0283203125
1451554742526,0.0244140625
1451554757684,0.021484375
1451554764927,0.0205078125
1451554777719,0.021484375
1451554786266,0.0234375
1451554794718,0.0234375
1451554803333,0.025390625
1451554811212,0.0234375
1451554819355,0.0234375
1451554827775,0.0244140625
1451554834831,0.0322265625
1451554842559,0.0224609375
1451554850442,0.025390625
1451554858263,0.029296875
1451554865030,0.0244140625
1451554872933,0.0234375
1451554880434,0.0205078125
1451554887209,0.0234375
1451554895477,0.0224609375
1451554902570,0.021484375
1451554910247,0.017578125
1451554918170,0.021484375
1451554927155,0.021484375
1451554934180,0.0234375
1451554943649,0.025390625
1451554953323,0.0244140625
1451554961012,0.025390625
1451554967583,0.0224609375
1451554979237,0.025390625
1451554987074,0.01953125
1451554994841,0.025390625
1451555003046,0.0224609375
1451555010695,0.0244140625
1451555019427,0.0263671875
1451555026446,0.0244140625
1451555036981,0.0224609375
1451555043928,0.021484375
1451555053788,0.0283203125
1451555064259,0.0244140625
1451555072570,0.021484375
1451555080594,0.0205078125
1451555092779,0.017578125
1451555239677,0.0244140625
1451555247824,0.0263671875
1451555258908,0.0234375
1451555265695,0.0234375
1451555273760,0.025390625
1451555280505,0.0244140625
1451555288326,0.0244140625
1451555307045,0.0244140625
1451555315698,0.0234375
1451555326302,0.0263671875
1451555338195,0.01953125
1451555345044,0.0234375
1451555353635,0.0224609375
1451555360544,0.0263671875
1451555368980,0.0244140625
1451555376015,0.0234375
1451555384826,0.0244140625
1451555392003,0.0322265625
1451555399958,0.0244140625
1451555410208,0.021484375
1451555418773,0.0234375
1451555433623,0.0244140625
1451555440974,0.021484375
1451555448704,0.0234375
1451555458549,0.0244140625
1451555467098,0.0244140625
1451555479076,0.017578125
1451555485121,0.03125
1451555493246,0.021484375
1451555505434,0.021484375
1451555513247,0.0302734375
1451555520226,0.02734375
1451555528333,0.0244140625
1451555535220,0.025390625
1451555543754,0.029296875
1451555550994,0.021484375
1451555559186,0.021484375
1451555567745,0.0234375
1451555576748,0.0234375
1451555584664,0.0205078125
1451555604386,0.025390625
1451555616760,0.0244140625
1451555629810,0.0244140625
1451555647265,0.0234375
1451555654892,0.021484375
1451555663495,0.021484375
1451555679757,0.0244140625
1451555693271,0.021484375
1451555700194,0.0244140625
1451555709604,0.0224609375
1451555716367,0.01953125
1451555723658,0.0224609375
1451555733559,0.0224609375
1451555746841,0.021484375
1451555753572,0.0244140625
1451555765094,0.0234375
1451555778072,0.025390625
1451555786567,0.0234375
1451555793286,0.0185546875
1451555799815,0.0244140625
1451555807140,0.025390625
1451555814798,0.0244140625
1451555821832,0.0234375
1451555830303,0.0224609375
1451555842005,0.017578125
1451555848448,0.0224609375
1451555855165,0.021484375
1451555861676,0.021484375
1451555869627,0.0234375
1451555879285,0.025390625
1451555888298,0.0224609375
1451555897825,0.0263671875
1451555974616,0.0234375
1451555976811,0.0185546875
1451555978061,0.03515625
1451555979313,0.0302734375
1451555980749,0.03125
1451555981808,0.0361328125
1451555983058,0.0361328125
1451555984520,0.03125
1451555985888,0.037109375
1451555987124,0.0341796875
1451555988369,0.0341796875
1451555989609,0.03515625
1451555990853,0.0361328125
1451555992095,0.03515625
1451555993341,0.0341796875
1451555994581,0.03515625
1451555995822,0.0361328125
1451555997062,0.03515625
1451555998312,0.033203125
1451555999558,0.03125
1451556000804,0.0341796875
1451556002057,0.0361328125
1451556003313,0.03125
1451556004815,0.037109375
1451556006157,0.03125
1451556007387,0.03125
1451556008630,0.033203125
1451556010754,0.03125
1451556011128,0.033203125
1451556012354,0.0322265625
1451556013592,0.03125
1451556014833,0.03125
1451556016077,0.0302734375
1451556017321,0.0322265625
1451556018557,0.03125
1451556020753,0.0322265625
1451556021091,0.03125
1451556060773,0.0361328125
1451556062014,0.03515625
1451556063258,0.033203125
1451556064502,0.033203125
1451556066010,0.0322265625
1451556066996,0.0302734375
1451556068248,0.0341796875
1451556069496,0.029296875
1451556070885,0.03515625
1451556072319,0.033203125
1451556073553,0.033203125
1451556074795,0.0322265625
1451556076041,0.0302734375
1451556077286,0.0302734375
1451556078530,0.029296875
1451556079776,0.0283203125
1451556081014,0.029296875
1451556082256,0.0302734375
1451556083490,0.03125
1451556084741,0.0341796875
1451556086015,0.033203125
1451556087228,0.03125
1451556088479,0.0302734375
1451556089728,0.02734375
1451556091214,0.0322265625
1451556092680,0.0263671875
1451556093926,0.0263671875
1451556096015,0.025390625
1451556096405,0.025390625
1451556097648,0.0244140625
1451556100081,0.0244140625
1451556101323,0.0244140625
1451556102565,0.025390625
1451556103806,0.025390625
1451556106014,0.0234375
1451556106344,0.0234375
1451556107594,0.0361328125
1451556108842,0.0263671875
1451556110102,0.0244140625
1451556111579,0.025390625
1451556112949,0.0234375
1451556114187,0.0244140625
1451556116015,0.025390625
1451556116666,0.0244140625
1451556117902,0.0263671875
1451556120206,0.0234375
1451556121590,0.0234375
1451556122834,0.02734375
1451556124083,0.02734375
1451556126017,0.025390625
1451556126839,0.0234375
1451556128253,0.0263671875
1451556129485,0.0234375
1451556130728,0.0234375
1451556131972,0.0244140625
1451556133212,0.0244140625
1451556134454,0.0244140625
1451556136019,0.025390625
1451556136942,0.0244140625
1451556138185,0.0244140625
1451556139428,0.0263671875
1451556140695,0.0244140625
1451556141923,0.0234375
1451556143171,0.0244140625
1451556144420,0.0263671875
1451556146020,0.0322265625
1451556147166,0.0244140625
1451556148572,0.0234375
1451556149802,0.0234375
1451556151060,0.0234375
1451556152287,0.0244140625
1451556153528,0.0234375
1451556154767,0.025390625
1451556156023,0.0263671875
1451556157249,0.0263671875
1451556159678,0.0244140625
1451556160933,0.0224609375
1451556162180,0.025390625
1451556163428,0.02734375
1451556164672,0.0263671875
1451556166025,0.0244140625
1451556167461,0.02734375
1451556168737,0.0234375
1451556169973,0.0263671875
1451556171219,0.025390625
1451556172460,0.02734375
1451556173700,0.025390625
1451556176029,0.0234375
1451556176182,0.0244140625
1451556177426,0.025390625
1451556186858,0.01953125
1451556196027,0.0224609375
1451556204424,0.0283203125
1451556211395,0.0283203125
1451556219726,0.0234375
1451556227884,0.021484375
1451556234295,0.0205078125
1451556241880,0.025390625
1451556252313,0.0244140625
1451556260910,0.0224609375
1451556269674,0.0263671875
1451556276969,0.0234375
1451556286038,0.029296875
1451556296040,0.0224609375
1451556307635,0.0302734375
1451556316163,0.0224609375
1451556323946,0.021484375
1451556330839,0.0244140625
1451556339412,0.0205078125
1451556352142,0.0244140625
1451556360525,0.017578125
1451556368642,0.02734375
1451556379644,0.0234375
1451556388593,0.021484375
1451556400483,0.0263671875
1451556413377,0.0234375
1451556436114,0.0244140625
1451556443627,0.0263671875
1451556452577,0.0234375
1451556459743,0.0224609375
1451556467239,0.0244140625
1451556474782,0.0205078125
1451556483979,0.0224609375
1451556492714,0.0224609375
1451556499568,0.0224609375
1451556507504,0.0244140625
1451556516318,0.0234375
1451556523673,0.021484375
1451556533206,0.03515625
1451556542814,0.017578125
1451556558390,0.0244140625
1451556566549,0.021484375
1451556576873,0.0302734375
1451556584974,0.0234375
1451556599602,0.0224609375
1451556607597,0.0224609375
1451556616652,0.021484375
1451556625336,0.0244140625
1451556633689,0.0234375
1451556642919,0.021484375
1451556651782,0.021484375
1451556660111,0.0234375
1451556668326,0.0302734375
1451556677807,0.0205078125
1451556685011,0.0234375
1451556693100,0.0224609375
1451556703571,0.0205078125
1451556710504,0.0224609375
1451556717455,0.0234375
1451556729979,0.025390625
1451556738468,0.0234375
1451556750612,0.0205078125
1451556769533,0.0234375
1451556782915,0.017578125
1451556789790,0.0244140625
1451556797695,0.0341796875
1451556808761,0.021484375
1451556816476,0.0244140625
1451556822941,0.0244140625
1451556831889,0.0205078125
1451556839283,0.0234375
1451556847296,0.017578125
1451556854982,0.0224609375
1451556862931,0.021484375
1451556875967,0.0224609375
1451556885458,0.0244140625
1451556892213,0.0244140625
1451556901016,0.0234375
1451556914986,0.02734375
1451556927216,0.025390625
1451556939030,0.0205078125
1451556947237,0.0224609375
1451556957811,0.0205078125
1451556969138,0.0224609375
1451556977572,0.0244140625
1451556986663,0.0224609375
1451556995214,0.0224609375
1451557002013,0.021484375
1451557010586,0.025390625
1451557019393,0.0244140625
1451557029925,0.025390625
1451557038430,0.0244140625
1451557049424,0.01953125
1451557060792,0.02734375
1451557070933,0.0224609375
1451557079831,0.021484375
1451557088496,0.017578125
1451557100173,0.0234375
1451557109203,0.0244140625
1451557122409,0.0244140625
1451557132120,0.021484375
1451557143696,0.0234375
1451557150623,0.0224609375
1451557158810,0.0234375
1451557166229,0.0283203125
1451557175040,0.0224609375
1451557185020,0.0283203125
1451557193215,0.025390625
1451557201140,0.0224609375
1451557218869,0.021484375
1451557226790,0.0234375
1451557235049,0.0224609375
1451557242124,0.021484375
1451557250179,0.0244140625
1451557261775,0.041015625
1451557269828,0.0224609375
1451557277143,0.0244140625
1451557289811,0.0224609375
1451557297256,0.02734375
1451557305038,0.0224609375
1451557311498,0.0244140625
1451557320334,0.03125
1451557328283,0.021484375
1451557336886,0.0234375
1451557343733,0.025390625
1451557350148,0.0224609375
1451557363026,0.0205078125
1451557370635,0.0224609375
1451557389444,0.025390625
1451557397467,0.0263671875
1451557409009,0.0224609375
1451557421840,0.0234375
1451557431844,0.021484375
1451557441872,0.021484375
1451557456830,0.0283203125
1451557470060,0.025390625
1451557477049,0.0234375
1451557485060,0.02734375
1451557491367,0.0234375
1451557500756,0.0263671875
1451557507983,0.025390625
1451557518479,0.021484375
1451557526306,0.025390625
1451557537560,0.0224609375
1451557548611,0.0263671875
1451557556964,0.025390625
1451557563687,0.0234375
1451557570524,0.0234375
1451557577783,0.029296875
1451557590949,0.0224609375
1451557597150,0.0244140625
1451557605393,0.0234375
1451557615097,0.0244140625
1451557628479,0.0302734375
1451557635080,0.0224609375
1451557643779,0.0224609375
1451557652140,0.0224609375
1451557665722,0.021484375
1451557672691,0.021484375
1451557680569,0.0234375
1451557688706,0.021484375
1451557696677,0.0341796875
1451557702622,0.025390625
1451557711967,0.0205078125
1451557723610,0.0224609375
1451557735769,0.0234375
1451557745106,0.02734375
1451557753299,0.03125
1451557765255,0.0234375
1451557779735,0.021484375
1451557788700,0.0322265625
1451557796966,0.0244140625
1451557805445,0.0224609375
1451557815102,0.0224609375
1451557833519,0.0234375
1451557840110,0.0244140625
1451557848127,0.0234375
1451557857378,0.0224609375
1451557865120,0.0224609375
1451557873163,0.025390625
1451557882210,0.025390625
1451557889393,0.0234375
1451557900053,0.0224609375
1451557907854,0.021484375
1451557920037,0.0234375
1451557929291,0.0361328125
1451557937212,0.0205078125
1451557945119,0.0234375
1451557952950,0.021484375
1451557959543,0.0263671875
1451557968299,0.0263671875
1451557980016,0.0234375
1451557987620,0.0244140625
1451558001209,0.025390625
1451558009223,0.025390625
1451558017178,0.0224609375
1451558032880,0.021484375
1451558043182,0.0205078125
1451558052531,0.017578125
1451558055445,0.017578125
1451558060388,0.029296875
1451558065135,0.017578125
1451558073926,0.0224609375
1451558085140,0.0224609375
1451558086010,0.02734375
1451558087250,0.0322265625
1451558088502,0.0341796875
1451558089750,0.03515625
1451558090996,0.0302734375
1451558092245,0.03125
1451558093493,0.0341796875
1451558095139,0.03125
1451558096433,0.03125
1451558097691,0.0341796875
1451558098934,0.0341796875
1451558100178,0.0341796875
1451558101424,0.0341796875
1451558102668,0.0322265625
1451558103911,0.0322265625
1451558105153,0.0322265625
1451558106391,0.03125
1451558107635,0.0341796875
1451558108877,0.033203125
1451558110843,0.0341796875
1451558113962,0.03125
1451558115224,0.033203125
1451558116468,0.0341796875
1451558117708,0.03515625
1451558118961,0.0361328125
1451558120197,0.0341796875
1451558121440,0.0341796875
1451558122677,0.03515625
1451558123921,0.0361328125
1451558125166,0.0361328125
1451558126420,0.03125
1451558127662,0.0302734375
1451558128908,0.037109375
1451558130344,0.03515625
1451558131824,0.03515625
1451558133077,0.037109375
1451558135147,0.0361328125
1451558135567,0.033203125
1451558136809,0.0322265625
1451558138051,0.0322265625
1451558139286,0.03125
1451558140526,0.03515625
1451558141768,0.0361328125
1451558143014,0.033203125
1451558145146,0.033203125
1451558145509,0.033203125
1451558146751,0.03125
1451558148001,0.0322265625
1451558149253,0.0361328125
1451558150743,0.0341796875
1451558152204,0.0322265625
1451558153442,0.0322265625
1451558155148,0.03125
1451558155920,0.0322265625
1451558157158,0.03125
1451558158401,0.0341796875
1451558159646,0.0341796875
1451558160885,0.03515625
1451558162125,0.037109375
1451558163365,0.0361328125
1451558165149,0.029296875
1451558165855,0.03515625
1451558167100,0.03515625
1451558168346,0.0341796875
1451558169722,0.0341796875
1451558172124,0.0361328125
1451558175153,0.03515625
1451558175467,0.03515625
1451558177900,0.03125
1451558179138,0.0361328125
1451558180392,0.0322265625
1451558181640,0.0322265625
1451558182888,0.0302734375
1451558185151,0.0283203125
1451558185432,0.033203125
1451558186929,0.0234375
1451558188299,0.0244140625
1451558189533,0.0234375
1451558190777,0.025390625
1451558192019,0.0263671875
1451558193264,0.0263671875
1451558195154,0.0263671875
1451558195738,0.0234375
1451558196980,0.0244140625
1451558198220,0.025390625
1451558199462,0.0263671875
1451558200713,0.025390625
1451558201965,0.0263671875
1451558203209,0.0234375
1451558205154,0.0224609375
1451558205753,0.0263671875
1451558207224,0.0244140625
1451558208544,0.0263671875
1451558209778,0.02734375
1451558211020,0.025390625
1451558212260,0.0234375
1451558213498,0.0234375
1451558215155,0.0234375
1451558215973,0.025390625
1451558217209,0.03125
1451558218451,0.0263671875
1451558219701,0.0263671875
1451558220946,0.025390625
1451558222192,0.0234375
1451558223438,0.0234375
1451558225156,0.0234375
1451558226170,0.02734375
1451558227627,0.0263671875
1451558228867,0.02734375
1451558230117,0.03515625
1451558231849,0.02734375
1451558233855,0.02734375
1451558235434,0.0234375
1451558236676,0.025390625
1451558237930,0.0263671875
1451558239172,0.0234375
1451558240418,0.0244140625
1451558241769,0.0234375
1451558243241,0.025390625
1451558245160,0.0263671875
1451558245741,0.025390625
1451558246983,0.0263671875
1451558248224,0.02734375
1451558249462,0.0234375
1451558250704,0.0244140625
1451558251948,0.0244140625
1451558253190,0.0263671875
1451558255181,0.02734375
1451558255679,0.0263671875
1451558256925,0.0244140625
1451558258175,0.02734375
1451558259421,0.0263671875
1451558260670,0.025390625
1451558262140,0.02734375
1451558263600,0.0263671875
1451558265206,0.025390625
1451558266090,0.0263671875
1451558267330,0.02734375
1451558268577,0.02734375
1451558269813,0.0234375
1451558271053,0.025390625
1451558272293,0.02734375
1451558273535,0.0244140625
1451558275165,0.0234375
1451558276016,0.02734375
1451558277264,0.0263671875
1451558278510,0.02734375
1451558279754,0.02734375
1451558281072,0.0234375
1451558283757,0.025390625
1451558285437,0.017578125
1451558295500,0.017578125
1451558308652,0.0263671875
1451558421125,0.0234375
1451558431303,0.0234375
1451558440200,0.0244140625
1451558450992,0.0283203125
1451558459344,0.021484375
1451558467974,0.029296875
1451558476501,0.0263671875
1451558486190,0.021484375
1451558495994,0.0361328125
1451558503431,0.0224609375
1451558516475,0.0224609375
1451558523748,0.0234375
1451558532461,0.0234375
1451558581014,0.0224609375
1451558588417,0.0224609375
1451558597045,0.0224609375
1451558612773,0.0234375
1451558621871,0.0205078125
1451558669434,0.0244140625
1451558682611,0.0234375
1451558690282,0.0224609375
1451558709411,0.0205078125
1451558716974,0.0224609375
1451558766558,0.017578125
1451558768974,0.0244140625
1451558776529,0.0224609375
1451558788483,0.0244140625
1451558798128,0.0361328125
1451558808132,0.025390625
1451558818991,0.021484375
1451558863790,0.025390625
1451558873469,0.0263671875
1451558883471,0.0224609375
1451558893472,0.0302734375
1451558901566,0.0234375
1451558909476,0.0263671875
1451558924465,0.017578125
1451558928169,0.0322265625
1451558936941,0.01953125
1451558945202,0.021484375
1451558954613,0.025390625
1451558963481,0.0205078125
1451558975636,0.021484375
1451558983679,0.0244140625
1451558993485,0.0234375
1451559001978,0.0224609375
1451559011420,0.0224609375
1451559020085,0.0263671875
1451559027719,0.025390625
1451559046057,0.0234375
1451559054921,0.0224609375
1451559070941,0.0234375
1451559078993,0.0234375
1451559093497,0.0244140625
1451559100111,0.017578125
1451559109188,0.0224609375
1451559123502,0.03125
1451559135814,0.0234375
1451559147801,0.0234375
1451559160255,0.021484375
1451559169116,0.021484375
1451559176012,0.025390625
1451559184379,0.021484375
1451559192344,0.0234375
1451559200182,0.0283203125
1451559209645,0.0263671875
1451559219184,0.017578125
1451559225719,0.0224609375
1451559235668,0.0224609375
1451559243517,0.0244140625
1451559251072,0.0224609375
1451559262210,0.0234375
1451559270145,0.0224609375
1451559281009,0.0224609375
1451559290768,0.0283203125
1451559299298,0.025390625
1451559306283,0.0263671875
1451559313528,0.0419921875
1451559322183,0.0224609375
1451559329602,0.025390625
1451559340032,0.017578125
1451559346570,0.0224609375
1451559359516,0.025390625
1451559370328,0.0205078125
1451559383762,0.0263671875
1451559390493,0.021484375
1451559399414,0.017578125
1451559406479,0.0234375
1451559415192,0.0234375
1451559422322,0.0283203125
1451559430003,0.025390625
1451559439136,0.0302734375
1451559446609,0.0224609375
1451559453544,0.025390625
1451559462052,0.017578125
1451559475731,0.0205078125
1451559483721,0.0263671875
1451559490540,0.0224609375
1451559499245,0.02734375
1451559506950,0.0234375
1451559514529,0.0234375
1451559559944,0.0234375
1451559565509,0.0224609375
1451559574698,0.0224609375
1451559582397,0.0263671875
1451559602912,0.0244140625
1451559610623,0.0234375
1451559659890,0.0234375
1451559667577,0.0205078125
1451559677501,0.0244140625
1451559682948,0.0224609375
1451559691173,0.0234375
1451559699894,0.0322265625
1451559707945,0.0224609375
1451559717895,0.0244140625
1451559734045,0.0224609375
1451559742777,0.025390625
1451559744339,0.0205078125
1451559758753,0.0244140625
1451559773655,0.017578125
1451559892629,0.0234375
1451559900881,0.0205078125
1451559909691,0.0244140625
1451559924075,0.0390625
1451559934076,0.0224609375
1451559942206,0.0244140625
1451559950173,0.0263671875
1451559966447,0.0234375
1451559977473,0.025390625
1451559987540,0.021484375
1451560000236,0.021484375
1451560009752,0.021484375
1451560016947,0.0234375
1451560029960,0.0244140625
1451560038824,0.0283203125
1451560045535,0.0283203125
1451560054092,0.0244140625
1451560062051,0.0224609375
1451560067956,0.021484375
1451560076577,0.025390625
1451560087977,0.021484375
1451560090867,0.017578125
1451560100163,0.0234375
1451560109022,0.0234375
1451560119888,0.025390625
1451560135922,0.0234375
1451560142971,0.0234375
1451560151456,0.0234375
1451560158413,0.0244140625
1451560172365,0.0234375
1451560179096,0.021484375
1451560188041,0.0322265625
1451560197775,0.021484375
1451560210111,0.0224609375
1451560224113,0.0244140625
1451560231932,0.0244140625
1451560244494,0.0234375
1451560257186,0.0205078125
1451560265113,0.0205078125
1451560272254,0.0234375
1451560280894,0.0205078125
1451560290645,0.0400390625
1451560297624,0.0224609375
1451560311344,0.0263671875
1451560324126,0.0234375
1451560330925,0.0244140625
1451560340168,0.0244140625
1451560350117,0.025390625
1451560356740,0.0244140625
1451560365333,0.021484375
1451560376589,0.02734375
1451560384136,0.0234375
1451560391724,0.021484375
1451560400889,0.0234375
1451560410466,0.0205078125
1451560417749,0.0224609375
1451560431995,0.029296875
1451560440778,0.0205078125
1451560448798,0.0380859375
1451560457341,0.021484375
1451560464146,0.0234375
1451560471689,0.0224609375
1451560479816,0.0234375
1451560494153,0.0341796875
1451560501133,0.0244140625
1451560508941,0.0244140625
1451560518908,0.0263671875
1451560527715,0.0244140625
1451560529944,0.021484375
1451560531444,0.0302734375
1451560532783,0.03125
1451560534154,0.03125
1451560535246,0.0361328125
1451560536490,0.0322265625
1451560537727,0.03125
1451560539017,0.03515625
1451560540215,0.0361328125
1451560541453,0.0390625
1451560542695,0.0322265625
1451560544162,0.0380859375
1451560545207,0.0341796875
1451560546450,0.0322265625
1451560547694,0.037109375
1451560548973,0.037109375
1451560550991,0.0322265625
1451560552205,0.0380859375
1451560555202,0.03515625
1451560556433,0.0380859375
1451560557676,0.0380859375
1451560558922,0.0380859375
1451560560160,0.037109375
1451560561404,0.0361328125
1451560562657,0.0361328125
1451560564157,0.03125
1451560565141,0.03125
1451560566523,0.033203125
1451560568001,0.0322265625
1451560569253,0.03125
1451560570495,0.037109375
1451560571738,0.0380859375
1451560572990,0.037109375
1451560574224,0.0361328125
1451560575458,0.037109375
1451560576706,0.037109375
1451560577940,0.0380859375
1451560579181,0.037109375
1451560580429,0.0380859375
1451560581673,0.03515625
1451560582919,0.033203125
1451560584162,0.03125
1451560585402,0.03125
1451560586872,0.0341796875
1451560588326,0.0322265625
1451560589582,0.0361328125
1451560590816,0.037109375
1451560592063,0.0380859375
1451560594162,0.0390625
1451560594535,0.033203125
1451560595778,0.0341796875
1451560597023,0.0341796875
1451560598264,0.0322265625
1451560599508,0.0322265625
1451560600756,0.03125
1451560602002,0.033203125
1451560604167,0.0322265625
1451560604514,0.0322265625
1451560605809,0.0361328125
1451560607297,0.033203125
1451560608573,0.0380859375
1451560610499,0.03125
1451560611731,0.03125
1451560614358,0.033203125
1451560615586,0.03125
1451560616840,0.03125
1451560618086,0.0302734375
1451560619333,0.037109375
1451560620581,0.03515625
1451560621831,0.033203125
1451560624168,0.03125
1451560624731,0.0341796875
1451560625968,0.0302734375
1451560627214,0.0302734375
1451560628460,0.0361328125
1451560629698,0.03125
1451560630938,0.033203125
1451560632179,0.0361328125
1451560634169,0.03515625
1451560634663,0.033203125
1451560635905,0.0302734375
1451560637157,0.0341796875
1451560638408,0.0400390625
1451560639652,0.03515625
1451560640910,0.0322265625
1451560642166,0.029296875
1451560644168,0.0302734375
1451560645033,0.0341796875
1451560646269,0.0302734375
1451560647513,0.029296875
1451560648755,0.0302734375
1451560649991,0.03125
1451560651237,0.0322265625
1451560652479,0.033203125
1451560654168,0.0322265625
1451560654964,0.0322265625
1451560656208,0.0302734375
1451560657450,0.0283203125
1451560658702,0.029296875
1451560659953,0.0341796875
1451560661195,0.033203125
1451560662637,0.0302734375
1451560664175,0.0283203125
1451560665355,0.02734375
1451560666598,0.02734375
1451560667842,0.02734375
1451560669082,0.0390625
1451560670808,0.0244140625
1451560672050,0.0263671875
1451560675231,0.02734375
1451560676477,0.025390625
1451560677723,0.02734375
1451560679059,0.0263671875
1451560680576,0.0263671875
1451560681790,0.0244140625
1451560683030,0.025390625
1451560684275,0.025390625
1451560685518,0.0263671875
1451560686763,0.0263671875
1451560687995,0.0234375
1451560689237,0.0234375
1451560690479,0.0244140625
1451560691723,0.0263671875
1451560692967,0.0263671875
1451560694209,0.02734375
1451560695464,0.0263671875
1451560696712,0.0244140625
1451560697955,0.0234375
1451560699403,0.02734375
1451560700869,0.0263671875
1451560702117,0.0234375
1451560704175,0.0234375
1451560704589,0.02734375
1451560705831,0.02734375
1451560707075,0.0244140625
1451560708318,0.0224609375
1451560709558,0.0234375
1451560710802,0.025390625
1451560712042,0.025390625
1451560714176,0.025390625
1451560714539,0.0244140625
1451560715787,0.0244140625
1451560717035,0.0234375
1451560718331,0.025390625
1451560719819,0.0263671875
1451560721080,0.0263671875
1451560722322,0.0244140625
1451560724180,0.0234375
1451560724806,0.0234375
1451560726046,0.0263671875
1451560727286,0.029296875
1451560728519,0.0234375
1451560729765,0.0244140625
1451560731655,0.017578125
1451560735212,0.0234375
1451560749626,0.025390625
1451560758251,0.02734375
1451560772907,0.021484375
1451560782361,0.0234375
1451560792512,0.017578125
1451560802379,0.025390625
1451560811663,0.0224609375
1451560824191,0.0224609375
1451560837845,0.0244140625
1451560851293,0.0224609375
1451560859346,0.025390625
1451560877066,0.0234375
1451560886380,0.0283203125
1451560894845,0.0244140625
1451560902972,0.021484375
1451560912226,0.017578125
1451560921375,0.0205078125
1451560929512,0.0244140625
1451560940444,0.0224609375
1451560950383,0.0263671875
1451560965617,0.0224609375
1451560975871,0.0224609375
1451560984924,0.0224609375
1451560995126,0.0361328125
1451560996554,0.017578125
1451561002753,0.021484375
1451561016825,0.0302734375
1451561024218,0.0234375
1451561034223,0.021484375
1451561044219,0.0234375
1451561054962,0.0224609375
1451561069004,0.0283203125
1451561079342,0.021484375
1451561089069,0.0234375
1451561099711,0.021484375
1451561107452,0.021484375
1451561124235,0.0322265625
1451561134834,0.025390625
1451561144235,0.0224609375
1451561152421,0.025390625
1451561161660,0.021484375
1451561170893,0.0205078125
1451561184237,0.021484375
1451561194239,0.0205078125
1451561204432,0.0244140625
1451561210617,0.025390625
1451561219934,0.02734375
1451561229942,0.0224609375
1451561238975,0.0234375
1451561256192,0.0244140625
1451561264249,0.0224609375
1451561276565,0.0244140625
1451561295083,0.0224609375
1451561304253,0.021484375
1451561312856,0.021484375
1451561322986,0.0224609375
1451561336333,0.017578125
1451561349886,0.0224609375
1451561361389,0.0224609375
1451561370237,0.0234375
1451561378672,0.02734375
1451561388467,0.0234375
1451561403129,0.0224609375
1451561419438,0.0244140625
1451561429149,0.0302734375
1451561436182,0.0244140625
1451561443285,0.0205078125
1451561452533,0.0263671875
1451561460634,0.0224609375
1451561469007,0.0234375
1451561476420,0.0234375
1451561486143,0.0224609375
1451561494405,0.0224609375
1451561503194,0.025390625
1451561511797,0.0234375
1451561526147,0.0244140625
1451561533323,0.025390625
1451561542312,0.0244140625
1451561550153,0.0234375
1451561558760,0.0224609375
1451561568610,0.0234375
1451561578157,0.0234375
1451561586626,0.021484375
1451561597442,0.0244140625
1451561603919,0.0234375
1451561624112,0.0263671875
1451561631695,0.021484375
1451561643683,0.0234375
1451561664940,0.0224609375
1451561672525,0.0224609375
1451561681304,0.0224609375
1451561691348,0.0205078125
1451561746622,0.0234375
1451561754733,0.0224609375
1451561763396,0.0224609375
1451561772918,0.0224609375
1451561780637,0.0224609375
1451561788394,0.0234375
1451561836281,0.021484375
1451561845840,0.0234375
1451561852943,0.0302734375
1451561860225,0.0234375
1451561869488,0.0224609375
1451561877011,0.0302734375
1451561889799,0.0234375
1451561897898,0.0263671875
1451561907545,0.0234375
1451561915305,0.0244140625
1451561925420,0.025390625
1451561934908,0.0205078125
1451561943130,0.0234375
1451561951698,0.0244140625
1451561959233,0.0234375
1451561966262,0.0234375
1451561975987,0.0205078125
1451561984913,0.021484375
1451561996062,0.0224609375
1451562003294,0.0234375
1451562012793,0.0234375
1451562019520,0.0224609375
1451562031303,0.0244140625
1451562042943,0.0234375
1451562050634,0.0234375
1451562058924,0.0244140625
1451562069867,0.0283203125
1451562078354,0.0244140625
1451562085650,0.0234375
1451562094929,0.021484375
1451562106326,0.021484375
1451562113694,0.029296875
1451562121337,0.0234375
1451562129554,0.01953125
1451562138465,0.0244140625
1451562147497,0.029296875
1451562164957,0.0234375
1451562177223,0.0224609375
1451562184940,0.0244140625
1451562194960,0.025390625
1451562201958,0.0244140625
1451562210270,0.021484375
1451562219541,0.025390625
1451562229985,0.0205078125
1451562237896,0.0341796875
1451562252294,0.0234375
1451562260199,0.0224609375
1451562268406,0.0234375
1451562277224,0.0205078125
1451562284971,0.0224609375
1451562292064,0.0234375
1451562299225,0.021484375
1451562306432,0.0224609375
1451562316033,0.0205078125
1451562326253,0.0234375
1451562335008,0.021484375
1451562344976,0.021484375
1451562352595,0.021484375
1451562361238,0.025390625
1451562369444,0.025390625
1451562383129,0.0224609375
1451562405510,0.0224609375
1451562418362,0.025390625
1451562426118,0.0244140625
1451562444972,0.0234375
1451562453533,0.025390625
1451562460826,0.0263671875
1451562468822,0.0244140625
1451562479153,0.021484375
1451562487706,0.041015625
1451562495400,0.021484375
1451562507024,0.0224609375
1451562515726,0.0263671875
1451562531473,0.0234375
1451562541364,0.0263671875
1451562555000,0.0244140625
1451562571763,0.0234375
1451562579876,0.0224609375
1451562589033,0.0234375
1451562596484,0.0224609375
1451562603839,0.025390625
1451562615007,0.021484375
1451562623066,0.021484375
1451562632682,0.0244140625
1451562641439,0.0224609375
1451562655519,0.0244140625
1451562665000,0.0283203125
1451562673072,0.017578125
1451562693076,0.02734375
1451562701642,0.0244140625
1451562708079,0.025390625
1451562718380,0.0234375
1451562727501,0.0205078125
1451562728744,0.03515625
1451562730162,0.037109375
1451562731718,0.0380859375
1451562733599,0.03125
1451562736049,0.0361328125
1451562737289,0.03515625
1451562738531,0.0380859375
1451562739775,0.037109375
1451562741026,0.037109375
1451562742272,0.03515625
1451562743520,0.0341796875
1451562745012,0.03125
1451562746026,0.0380859375
1451562747524,0.0361328125
1451562748841,0.0361328125
1451562750075,0.037109375
1451562751317,0.03515625
1451562752559,0.0361328125
1451562753801,0.0361328125
1451562755042,0.03515625
1451562757474,0.0322265625
1451562758712,0.03125
1451562759955,0.0341796875
1451562761202,0.03125
1451562762445,0.03125
1451562763687,0.03125
1451562765023,0.03125
1451562766181,0.037109375
1451562767671,0.0361328125
1451562769076,0.0341796875
1451562770312,0.033203125
1451562771554,0.0322265625
1451562772796,0.0322265625
1451562775017,0.03125
1451562775315,0.03125
1451562776559,0.0380859375
1451562777799,0.0322265625
1451562779039,0.0322265625
1451562780284,0.0322265625
1451562781526,0.0322265625
1451562782774,0.0361328125
1451562785018,0.03515625
1451562785310,0.033203125
1451562786634,0.03125
1451562788132,0.0419921875
1451562789389,0.0322265625
1451562790635,0.0322265625
1451562792555,0.03125
1451562795331,0.03515625
1451562796574,0.0341796875
1451562797826,0.0322265625
1451562799070,0.03125
1451562800310,0.03125
1451562801564,0.0380859375
1451562805021,0.03515625
1451562805669,0.0361328125
1451562806901,0.03515625
1451562808139,0.03515625
1451562809379,0.037109375
1451562810622,0.037109375
1451562811870,0.0361328125
1451562813108,0.0380859375
1451562815020,0.0380859375
1451562815584,0.0322265625
1451562816822,0.03125
1451562818075,0.0322265625
1451562819333,0.0361328125
1451562820583,0.0322265625
1451562821833,0.0322265625
1451562823082,0.0380859375
1451562825030,0.0322265625
1451562826036,0.03515625
1451562827286,0.03125
1451562828534,0.0322265625
1451562829776,0.0322265625
1451562831017,0.0322265625
1451562832259,0.03515625
1451562833499,0.03515625
1451562835025,0.0341796875
1451562835989,0.03515625
1451562837228,0.03515625
1451562838478,0.0322265625
1451562839728,0.0361328125
1451562840978,0.03515625
1451562842220,0.0341796875
1451562843504,0.03125
1451562845025,0.033203125
1451562846287,0.029296875
1451562847517,0.03125
1451562848761,0.0341796875
1451562850001,0.03515625
1451562851246,0.0361328125
1451562853194,0.033203125
1451562856040,0.03515625
1451562857290,0.0341796875
1451562858537,0.03125
1451562861155,0.03515625
1451562862619,0.0302734375
1451562863874,0.03125
1451562865118,0.0341796875
1451562866364,0.0341796875
1451562867606,0.0341796875
1451562870039,0.0322265625
1451562871286,0.033203125
1451562872521,0.033203125
1451562873761,0.0341796875
1451562875035,0.03125
1451562876241,0.0322265625
1451562877494,0.0302734375
1451562878740,0.029296875
1451562879984,0.029296875
1451562881402,0.029296875
1451562882888,0.025390625
1451562885036,0.0263671875
1451562885371,0.0263671875
1451562886615,0.0263671875
1451562887863,0.0263671875
1451562889103,0.0263671875
1451562890345,0.02734375
1451562891585,0.0234375
1451562892824,0.0234375
1451562895032,0.0244140625
1451562895368,0.0263671875
1451562896618,0.0263671875
1451562897860,0.02734375
1451562899113,0.0263671875
1451562900363,0.0234375
1451562901833,0.0234375
1451562903207,0.025390625
1451562905036,0.02734375
1451562905688,0.025390625
1451562906928,0.0234375
1451562908168,0.0244140625
1451562909415,0.025390625
1451562910654,0.0263671875
1451562911896,0.0263671875
1451562913541,0.02734375
1451562916151,0.0263671875
1451562917483,0.02734375
1451562918959,0.0263671875
1451562920215,0.025390625
1451562921460,0.025390625
1451562922702,0.0263671875
1451562925036,0.02734375
1451562925770,0.017578125
1451562929477,0.0234375
1451562938537,0.0341796875
1451562947958,0.0234375
1451562959387,0.0361328125
1451562968021,0.0205078125
1451562977668,0.0224609375
1451562990042,0.0380859375
1451563000887,0.021484375
1451563010145,0.0224609375
1451563020368,0.0234375
1451563029235,0.0244140625
1451563039015,0.017578125
1451563048793,0.03125
1451563058698,0.0244140625
1451563067195,0.0263671875
1451563075056,0.0263671875
1451563082678,0.02734375
1451563093529,0.0263671875
1451563102947,0.021484375
1451563111772,0.0234375
1451563123111,0.0244140625
1451563133613,0.0244140625
1451563147297,0.0234375
1451563153924,0.0224609375
1451563163398,0.037109375
1451563172091,0.0234375
1451563181376,0.0244140625
1451563191449,0.0224609375
1451563199415,0.0234375
1451563211128,0.02734375
1451563218647,0.0244140625
1451563225625,0.0234375
1451563235952,0.0234375
1451563245561,0.0224609375
1451563253464,0.03125
1451563261165,0.0234375
1451563271257,0.0224609375
1451563292012,0.0244140625
1451563301278,0.0263671875
1451563310221,0.0263671875
1451563317164,0.0234375
1451563327295,0.0224609375
1451563337773,0.0302734375
1451563347272,0.0234375
1451563356718,0.0224609375
1451563370538,0.0224609375
1451563385096,0.021484375
1451563392757,0.021484375
1451563403443,0.0224609375
1451563415220,0.0234375
1451563427950,0.021484375
1451563437914,0.0283203125
1451563448103,0.021484375
1451563455822,0.0205078125
1451563469075,0.0224609375
1451563479446,0.0234375
1451563487361,0.0244140625
1451563503427,0.0244140625
1451563517345,0.021484375
1451563526743,0.0224609375
1451563536928,0.0244140625
1451563545119,0.0234375
1451563552255,0.021484375
1451563565215,0.0224609375
1451563575120,0.0234375
1451563590300,0.0224609375
1451563598075,0.0234375
1451563605938,0.025390625
1451563615126,0.0224609375
1451563621053,0.0234375
1451563630895,0.0224609375
1451563639635,0.0224609375
1451563648544,0.0224609375
1451563661889,0.02734375
1451563672598,0.0341796875
1451563680011,0.0244140625
1451563688108,0.0224609375
1451563693187,0.0244140625
1451563740362,0.029296875
1451563747161,0.0244140625
1451563759405,0.0302734375
1451563768542,0.0224609375
1451563777197,0.0224609375
1451563785146,0.0234375
1451563800021,0.0244140625
1451563809744,0.0244140625
1451563817179,0.021484375
1451563827087,0.025390625
1451563835154,0.0244140625
1451563843537,0.02734375
1451563852740,0.02734375
1451563864022,0.0205078125
1451563873761,0.0234375
1451563883593,0.0244140625
1451563891868,0.021484375
1451563899663,0.021484375
1451563908781,0.0263671875
1451563927413,0.0234375
1451563942600,0.0244140625
1451563950215,0.0234375
1451563960426,0.033203125
1451563966949,0.0244140625
1451563980881,0.03125
1451563989489,0.0224609375
1451564011540,0.0263671875
1451564025468,0.025390625
1451564035579,0.021484375
1451564052272,0.021484375
1451564061205,0.017578125
1451564068936,0.0224609375
1451564076475,0.0224609375
1451564085187,0.0263671875
1451564095974,0.0205078125
1451564105854,0.0244140625
1451564116051,0.0244140625
1451564128646,0.029296875
1451564139842,0.025390625
1451564147832,0.025390625
1451564160904,0.0244140625
1451564171317,0.0263671875
1451564188630,0.0205078125
1451564198273,0.0244140625
1451564205926,0.0234375
1451564225205,0.0224609375
1451564235207,0.0234375
1451564243232,0.025390625
1451564255210,0.033203125
1451564263903,0.03125
1451564275230,0.021484375
1451564283476,0.0224609375
1451564295213,0.0224609375
1451564315216,0.0263671875
1451564322319,0.021484375
1451564329510,0.025390625
1451564337980,0.0224609375
1451564345545,0.0185546875
1451564355992,0.0244140625
1451564372501,0.0224609375
1451564383174,0.0419921875
1451564390835,0.0234375
1451564405646,0.0244140625
1451564413321,0.0224609375
1451564423890,0.017578125
1451564436503,0.0244140625
1451564447834,0.0341796875
1451564458041,0.021484375
1451564472221,0.0419921875
1451564480186,0.0234375
1451564488634,0.0234375
1451564497171,0.0244140625
1451564498469,0.0205078125
1451564512289,0.0224609375
1451564521589,0.0380859375
1451564525501,0.017578125
1451564532422,0.021484375
1451564543260,0.017578125
1451564551381,0.0244140625
1451564559630,0.0234375
1451564570946,0.0224609375
1451564582045,0.021484375
1451564590687,0.021484375
1451564600768,0.025390625
1451564610572,0.0224609375
1451564618381,0.0244140625
1451564627732,0.0283203125
1451564645656,0.0224609375
1451564655242,0.025390625
1451564663015,0.025390625
1451578412884,0.0234375
1451578423412,0.0302734375
1451578435743,0.0224609375
1451578445778,0.0205078125
1451578456154,0.029296875
1451578465182,0.021484375
1451578475498,0.0234375
1451578491981,0.0234375
1451578501880,0.025390625
1451578514240,0.0234375
1451578525240,0.0302734375
1451578531571,0.0322265625
1451578533346,0.0380859375
1451578534985,0.0361328125
1451578536218,0.0390625
1451578538156,0.0322265625
1451578538700,0.033203125
1451578539946,0.0322265625
1451578541188,0.0341796875
1451578542437,0.0341796875
1451578543683,0.033203125
1451578544929,0.037109375
1451578546178,0.03515625
1451578548158,0.0322265625
1451578548893,0.0322265625
1451578550355,0.037109375
1451578551620,0.0341796875
1451578552858,0.03125
1451578554098,0.033203125
1451578555336,0.03125
1451578556572,0.03125
1451578558166,0.03125
1451578559047,0.0361328125
1451578560287,0.033203125
1451578561529,0.0322265625
1451578562781,0.037109375
1451578564036,0.033203125
1451578565280,0.037109375
1451578566528,0.0341796875
1451578568158,0.0419921875
1451578569276,0.0341796875
1451578570689,0.0322265625
1451578571925,0.0322265625
1451578573167,0.033203125
1451578574413,0.0361328125
1451578575654,0.03515625
1451578576894,0.03515625
1451578578162,0.03515625
1451578579372,0.03515625
1451578580616,0.033203125
1451578581856,0.033203125
1451578583099,0.033203125
1451578584351,0.0341796875
1451578585595,0.03515625
1451578586843,0.0322265625
1451578588281,0.0380859375
1451578589749,0.0322265625
1451578591694,0.0322265625
1451578592938,0.0322265625
1451578594946,0.03125
1451578596180,0.033203125
1451578598162,0.033203125
1451578598663,0.033203125
1451578599913,0.0302734375
1451578601161,0.037109375
1451578602405,0.0322265625
1451578603761,0.037109375
1451578605240,0.0361328125
1451578606492,0.0361328125
1451578608164,0.03125
1451578608962,0.037109375
1451578610208,0.037109375
1451578611446,0.0361328125
1451578612693,0.033203125
1451578613933,0.0341796875
1451578615175,0.0341796875
1451578616415,0.033203125
1451578618170,0.0341796875
1451578618904,0.0322265625
1451578620156,0.0322265625
1451578621400,0.03515625
1451578622647,0.033203125
1451578624112,0.033203125
1451578625577,0.0302734375
1451578626825,0.03515625
1451578628168,0.03515625
1451578629314,0.033203125
1451578630553,0.033203125
1451578631796,0.033203125
1451578633036,0.033203125
1451578634278,0.0341796875
1451578635520,0.0322265625
1451578636782,0.03125
1451578638169,0.03125
1451578639256,0.0322265625
1451578640499,0.0302734375
1451578641747,0.03515625
1451578643037,0.0322265625
1451578644507,0.0322265625
1451578645823,0.0361328125
1451578647060,0.0361328125
1451578648344,0.0361328125
1451578649584,0.0341796875
1451578650822,0.0302734375
1451578652553,0.0322265625
1451578654363,0.033203125
1451578655605,0.03125
1451578656851,0.03125
1451578658171,0.0302734375
1451578659572,0.0361328125
1451578661026,0.03125
1451578662266,0.0302734375
1451578663508,0.03125
1451578664747,0.029296875
1451578665989,0.0302734375
1451578668173,0.0302734375
1451578668499,0.029296875
1451578669741,0.0302734375
1451578670987,0.0341796875
1451578672225,0.03515625
1451578673479,0.0341796875
1451578674728,0.033203125
1451578675972,0.0302734375
1451578678178,0.03125
1451578678514,0.0341796875
1451578680001,0.0341796875
1451578681395,0.0302734375
1451578682631,0.029296875
1451578683873,0.029296875
1451578685117,0.029296875
1451578686360,0.0302734375
1451578688176,0.03125
1451578688842,0.029296875
1451578690089,0.0302734375
1451578691326,0.0302734375
1451578692568,0.029296875
1451578693813,0.029296875
1451578695068,0.0361328125
1451578696308,0.03125
1451578698176,0.0302734375
1451578699009,0.03515625
1451578700469,0.0341796875
1451578701720,0.0302734375
1451578702962,0.029296875
1451578704205,0.029296875
1451578705448,0.029296875
1451578706688,0.029296875
1451578708181,0.029296875
1451578709215,0.029296875
1451578710403,0.033203125
1451578712333,0.033203125
1451578713582,0.0283203125
1451578716110,0.029296875
1451578718181,0.029296875
1451578718616,0.0322265625
1451578719858,0.0302734375
1451578721097,0.03125
1451578722341,0.0322265625
1451578723583,0.03125
1451578724823,0.0341796875
1451578726066,0.0341796875
1451578728181,0.0341796875
1451578734869,0.0224609375
1451578742062,0.0224609375
1451578761311,0.025390625
1451578771513,0.029296875
1451578801622,0.0234375
1451578811294,0.025390625
1451578826393,0.0234375
1451578834389,0.02734375
1451578844967,0.0283203125
1451578853510,0.0234375
1451578862911,0.033203125
1451578872773,0.025390625
1451578883682,0.0205078125
1451578905449,0.0263671875
1451578922099,0.0244140625
1451578934454,0.0234375
1451578948210,0.0205078125
1451578971163,0.0244140625
1451578981749,0.0224609375
1451578994289,0.0322265625
1451579004582,0.0234375
1451579013087,0.0283203125
1451579023589,0.033203125
1451579035945,0.0224609375
1451579048221,0.03125
1451579066163,0.029296875
1451579078231,0.0244140625
1460748141247,null
1460748142368,null
1460748143468,null
1460748144574,null
1460748145674,null
1460748146782,null
1460748147890,null
1460748148995,null
1460748150099,null
1460748230753,null
1460748231868,null
1460748232985,null
1460748234089,null
1460748235203,null
1460748236307,null
1460748237410,null
1460748238512,null
1460748239622,null
1460748240726,null
1460748241832,null
1460748242932,null
1460748244034,null
1460748245133,null
1460748246249,null
1460748247350,null
1460748248452,null
1460748249559,null
1460748250659,null
1460748251762,null
1460748252872,null
1460748253969,null
1460748255070,null
1460748256169,null
1460748257273,null
1460748258377,null
1460748259495,null
1460748260597,null
1460748261703,null
1460748262807,null
1460748263908,null
1460748265011,null
1460748266108,null
1460748267212,null
1460748268332,null
1460748309618,0.017578125
1460748310730,0.017578125
1460748311846,0.0185546875
1460748312947,0.0185546875
1460748314053,0.0185546875
1460748315151,0.017578125
1460748316265,0.0185546875
1460748317363,0.0185546875
1460748318469,0.017578125
1460748319574,0.0185546875
1460748320672,0.0185546875
1460748321772,0.0185546875
1460748322903,0.017578125
1460748323980,0.0185546875
1460748325082,0.0185546875
1460748326191,0.0185546875
1460748327299,0.0185546875
1460748328397,0.0185546875
1460748329499,0.017578125
1460748330608,0.0185546875
1460748331716,0.017578125
1460748332817,0.0185546875
1460748333922,0.017578125
1460748335020,0.0185546875
1460748336124,0.0185546875
1460748337228,0.017578125
1460748338334,0.0185546875
1460748339447,0.0185546875
1460748355415,0.0185546875
1460748356531,0.0185546875
1460748357635,0.0185546875
1460748358742,0.0185546875
1460748359848,0.017578125
1460748360956,0.017578125
1460748362070,0.017578125
1460748363158,0.0185546875
1460748364281,0.0185546875
1460748365391,0.0185546875
1460748366489,0.017578125
1460748367591,0.0185546875
1460748368693,0.017578125
1460748369795,0.0185546875
1460748370895,0.017578125
1460748372009,0.017578125
1460748373110,0.0185546875
1460748374210,0.017578125
1460748375340,0.017578125
1460748376446,0.017578125
1460748377548,0.017578125
1460748378651,0.0185546875
1460748379749,0.017578125
1460748380851,0.017578125
1460748381955,0.017578125
1460748383059,0.0185546875
1460748384159,0.0185546875
1460748385264,0.0185546875
1460748386364,0.0185546875
1460748387469,0.017578125
1460748388570,0.017578125
1460748389673,0.017578125
1460748390775,0.0185546875
1460748391878,0.0185546875
1460748392977,0.0185546875
1460748394084,0.017578125
1460748395186,0.0185546875
1460748396285,0.017578125
1460748397385,0.017578125
1460748398493,0.0185546875
1460748399595,0.017578125
1460748400700,0.017578125
1460748401802,0.0185546875
1460748402904,0.0185546875
1460748404004,0.017578125
1460748405116,0.017578125
1460748406218,0.017578125
1460748431714,0.017578125
1460748432833,0.017578125
1460748433930,0.017578125
1460748435033,0.017578125
1460748436140,0.017578125
1460748437243,0.017578125
1460748438347,0.0185546875
1460748439453,0.017578125
1460748440557,0.017578125
1460748441664,0.017578125
1460748442762,0.0185546875
1460748443864,0.0185546875
1460748444968,0.017578125
1460748446070,0.017578125
1460748466687,0.201171875
1460748469038,0.201171875
1460748473774,0.2021484375
1460748476044,0.201171875
1460748534205,0.201171875
1460748542388,0.201171875
1460748544637,0.2099609375
1460748698493,0.2001953125
1460748701446,0.2001953125
1460748705718,0.201171875
1460748714409,0.2041015625
1460748717020,0.2177734375
1460748772812,0.203125
1460748824601,0.208984375
1460748827005,0.203125
1460748832013,0.2265625
1460749014754,0.201171875
1460749028062,0.201171875
1460749030124,0.201171875
1460749245091,0.201171875
1460749246989,0.201171875
1460750344332,0.2041015625
1460750488675,0.2236328125
1460750594655,0.2041015625
1460750596591,0.216796875
1460750598036,0.201171875
1460750599228,0.201171875
1460750600448,0.201171875
1460750601902,0.201171875
1460751117196,0.2119140625
1460752437046,0.2216796875`.split("\n").map(n => {return n.split(',');});

},{}],181:[function(require,module,exports){
module.exports = [{
  name: 'Live',
  data: false
}, {
  name: 'Black IPA',
  data: require('./bipa')
}];

},{"./bipa":180}]},{},[3]);
